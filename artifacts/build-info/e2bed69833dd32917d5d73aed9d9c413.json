{
	"id": "e2bed69833dd32917d5d73aed9d9c413",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-f627870540.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract MivaToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialOwner) initializer public {\n        __ERC20_init(\"MivaToken\", \"MVT\");\n        __Ownable_init(initialOwner);\n        __UUPSUpgradeable_init();\n\n        _mint(msg.sender, 20000 * 10 ** decimals());\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyOwner\n        override\n    {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c55a04c6f574df21dc6bed3a6880c1dd915e126b5194980ab8c39995695ba2164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c55a04c6f574df21dc6bed3a6880c1dd915e126b5194980ab8c39995695ba2164736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SSTORE LOG0 0x4C PUSH16 0x574DF21DC6BED3A6880C1DD915E126B5 NOT 0x49 DUP1 0xAB DUP13 CODECOPY SWAP10 JUMP SWAP6 0xBA 0x21 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "449:6273:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c55a04c6f574df21dc6bed3a6880c1dd915e126b5194980ab8c39995695ba2164736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SSTORE LOG0 0x4C PUSH16 0x574DF21DC6BED3A6880C1DD915E126B5 NOT 0x49 DUP1 0xAB DUP13 CODECOPY SWAP10 JUMP SWAP6 0xBA 0x21 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "449:6273:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c55a04c6f574df21dc6bed3a6880c1dd915e126b5194980ab8c39995695ba2164736f6c63430008160033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contract-f627870540.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contract-f627870540.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F SDIV PUSH27 0x7D9E6D8649F3568AB0E58F72080E771E988BF5580CBDB98AC588EC SHL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F SDIV PUSH27 0x7D9E6D8649F3568AB0E58F72080E771E988BF5580CBDB98AC588EC SHL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contract-f627870540.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract-f627870540.sol": {
				"MivaToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-f627870540.sol\":392:957  contract MivaToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contract-f627870540.sol\":542:595  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contract-f627870540.sol\":566:588  _disableInitializers() */\n  tag_4\n    /* \"contract-f627870540.sol\":566:586  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"contract-f627870540.sol\":566:588  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contract-f627870540.sol\":392:957  contract MivaToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract-f627870540.sol\":392:957  contract MivaToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract-f627870540.sol\":392:957  contract MivaToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x313ce567\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-f627870540.sol\":601:837  function initialize(address initialOwner) initializer public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3056:3069  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3081:3103  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3106:3122  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3081:3124  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3141:3142  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3141:3148  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3134:3148  return $._name */\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_103\n      jump\t// in\n    tag_104:\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5578:5582  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5594:5607  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5610:5620  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5594:5622  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5641:5646  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5648:5655  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5657:5662  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5632:5640  _approve */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5680:5684  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5673:5684  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4243:4250  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4262:4284  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4287:4303  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4262:4305  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4322:4323  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4322:4336  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4315:4336  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6338:6342  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6354:6369  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6372:6384  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6372:6382  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6372:6384  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6354:6384  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6394:6431  _spendAllowance(from, spender, value) */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6410:6414  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6416:6423  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6425:6430  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6394:6409  _spendAllowance */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6394:6431  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6441:6467  _transfer(from, to, value) */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6451:6455  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6457:6459  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6461:6466  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6441:6450  _transfer */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6441:6467  _transfer(from, to, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6484:6488  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6477:6488  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4098:4103  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4122:4124  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4115:4124  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":3800:3832  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":3793:3832  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4466:4473  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4485:4507  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4510:4526  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4485:4528  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4545:4546  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4545:4556  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4557:4564  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4538:4565  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3315:3328  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3340:3362  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3365:3381  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3340:3383  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3400:3401  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3400:3409  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3393:3409  return $._symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_103\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_103\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4836:4840  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4852:4865  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4868:4880  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4868:4878  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4868:4880  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4852:4880  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4890:4917  _transfer(owner, to, value) */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4900:4905  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4907:4909  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4911:4916  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4890:4899  _transfer */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4890:4917  _transfer(owner, to, value) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4934:4938  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4927:4938  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_83:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contract-f627870540.sol\":601:837  function initialize(address initialOwner) initializer public {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_158\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_159\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_160\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_162:\n        /* \"contract-f627870540.sol\":672:704  __ERC20_init(\"MivaToken\", \"MVT\") */\n      tag_164\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x4d697661546f6b656e0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4d56540000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contract-f627870540.sol\":672:684  __ERC20_init */\n      tag_165\n        /* \"contract-f627870540.sol\":672:704  __ERC20_init(\"MivaToken\", \"MVT\") */\n      jump\t// in\n    tag_164:\n        /* \"contract-f627870540.sol\":714:742  __Ownable_init(initialOwner) */\n      tag_166\n        /* \"contract-f627870540.sol\":729:741  initialOwner */\n      dup7\n        /* \"contract-f627870540.sol\":714:728  __Ownable_init */\n      tag_167\n        /* \"contract-f627870540.sol\":714:742  __Ownable_init(initialOwner) */\n      jump\t// in\n    tag_166:\n        /* \"contract-f627870540.sol\":752:776  __UUPSUpgradeable_init() */\n      tag_168\n        /* \"contract-f627870540.sol\":752:774  __UUPSUpgradeable_init */\n      tag_169\n        /* \"contract-f627870540.sol\":752:776  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_168:\n        /* \"contract-f627870540.sol\":787:830  _mint(msg.sender, 20000 * 10 ** decimals()) */\n      tag_170\n        /* \"contract-f627870540.sol\":793:803  msg.sender */\n      caller\n        /* \"contract-f627870540.sol\":819:829  decimals() */\n      tag_171\n        /* \"contract-f627870540.sol\":819:827  decimals */\n      tag_46\n        /* \"contract-f627870540.sol\":819:829  decimals() */\n      jump\t// in\n    tag_171:\n        /* \"contract-f627870540.sol\":813:815  10 */\n      0x0a\n        /* \"contract-f627870540.sol\":813:829  10 ** decimals() */\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contract-f627870540.sol\":805:810  20000 */\n      0x4e20\n        /* \"contract-f627870540.sol\":805:829  20000 * 10 ** decimals() */\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"contract-f627870540.sol\":787:792  _mint */\n      tag_176\n        /* \"contract-f627870540.sol\":787:830  _mint(msg.sender, 20000 * 10 ** decimals()) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contract-f627870540.sol\":601:837  function initialize(address initialOwner) initializer public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5083:5090  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5102:5124  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5127:5143  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5102:5145  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5162:5163  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5162:5175  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5176:5181  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5183:5190  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5155:5191  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2292:2314  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2359:2379  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2349:2379  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10357:10362  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10364:10371  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10373:10378  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10380:10384  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10348:10356  _approve */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11993:12470  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12092:12116  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12119:12144  allowance(owner, spender) */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12129:12134  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12136:12143  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12119:12128  allowance */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12119:12144  allowance(owner, spender) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12092:12144  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12178:12195  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12158:12174  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12158:12195  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12154:12464  if (currentAllowance != type(uint256).max) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12234:12239  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12215:12231  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12215:12239  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12211:12341  if (currentAllowance < value) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12293:12300  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12302:12318  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12320:12325  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12266:12326  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12211:12341  if (currentAllowance < value) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12382:12439  _approve(owner, spender, currentAllowance - value, false) */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12391:12396  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12398:12405  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12426:12431  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12407:12423  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12407:12431  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12433:12438  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12382:12390  _approve */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12382:12439  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12154:12464  if (currentAllowance != type(uint256).max) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":12082:12470  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11993:12470  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6868:7168  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6967:6968  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6951:6969  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6951:6955  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6951:6969  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6947:7033  if (from == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7019:7020  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6992:7022  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6947:7033  if (from == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7060:7061  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7046:7062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7046:7048  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7046:7062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7042:7128  if (to == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7114:7115  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7085:7117  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7042:7128  if (to == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7137:7161  _update(from, to, value) */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7145:7149  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7151:7153  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7155:7160  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7137:7144  _update */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7137:7161  _update(from, to, value) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":6868:7168  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_208\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4749:4779  ERC1967Utils.getImplementation */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contract-f627870540.sol\":843:955  function _authorizeUpgrade(address newImplementation)... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"contract-f627870540.sol\":843:955  function _authorizeUpgrade(address newImplementation)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      0x01\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6555:6572  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6253:6285  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6245:6249  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6341:6345  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2702:2707  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2709:2716  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2679:2701  __ERC20_init_unchained */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9085:9086  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9066:9073  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9139:9140  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9110:9142  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9178:9179  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9182:9189  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9191:9196  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9162:9169  _update */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11332:11354  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11357:11373  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11332:11375  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11406:11407  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11389:11394  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11460:11461  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11431:11463  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11506:11507  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11487:11494  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11559:11560  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11531:11562  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11614:11619  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11582:11583  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11582:11595  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11596:11601  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11603:11610  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11582:11619  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11633:11642  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11679:11686  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11672:11677  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11688:11693  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_266\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11322:11711  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7568:7590  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7593:7609  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7568:7611  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7641:7642  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7625:7629  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7779:7784  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7761:7762  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7761:7775  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7761:7784  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      jump(tag_272)\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7815:7834  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7837:7838  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7837:7848  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7849:7853  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7815:7854  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7886:7891  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7872:7883  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7872:7891  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7943:7947  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7949:7960  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7962:7967  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7918:7968  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8137:8142  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8123:8134  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8123:8142  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8103:8104  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8103:8114  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8115:8119  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8103:8142  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7801:8167  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8195:8196  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8181:8183  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8362:8367  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8344:8345  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8344:8358  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8344:8367  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      jump(tag_276)\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8576:8581  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8557:8558  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8557:8568  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8569:8571  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8557:8581  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8636:8638  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8630:8634  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8640:8645  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      mload(0x40)\n      tag_277\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7558:8653  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_279\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_280\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_282\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_283\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_285\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_286\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_285:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      jump(tag_287)\n    tag_284:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_288\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_289\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_291\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2842:2864  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2867:2883  _getERC20Storage */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2842:2885  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2905:2910  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2895:2896  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2895:2902  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2895:2910  $._name = name_ */\n      swap1\n      dup2\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2932:2939  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2920:2921  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2920:2929  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2920:2939  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_300\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_300:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2832:2946  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_306\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_311\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n      tag_280\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_313\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_317\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_316)\n    tag_317:\n      0x60\n      swap2\n      pop\n    tag_316:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_318\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_319\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_326\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_328)\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_329\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_329:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_324)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_324:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_335:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_336:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_337:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_400:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_400)\n    tag_402:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_338:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_339:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_405\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_335\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":818:889   */\n      tag_406\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_336\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_407\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_337\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":988:1017   */\n      tag_408\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_338\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_410\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_339\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1424   */\n    tag_340:\n        /* \"#utility.yul\":1382:1388   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x40\n        /* \"#utility.yul\":1409:1418   */\n      mload\n        /* \"#utility.yul\":1399:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1424   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_341:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1553:1670   */\n    tag_342:\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_343:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_344:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_416\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_343\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_345:\n        /* \"#utility.yul\":1983:2007   */\n      tag_418\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_344\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_419:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_346:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_421\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_345\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_347:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_348:\n        /* \"#utility.yul\":2339:2363   */\n      tag_424\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_347\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_425:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_349:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_427\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_348\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_29:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_430\n      tag_341\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2632:2751   */\n    tag_429:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_431\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_346\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_432\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_349\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_350:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_351:\n        /* \"#utility.yul\":3196:3217   */\n      tag_435\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_350\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_32:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_437\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_351\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_352:\n        /* \"#utility.yul\":3533:3557   */\n      tag_439\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_347\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_37:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_441\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_352\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_41:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_444\n      tag_341\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3908:4027   */\n    tag_443:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_445\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_346\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_446\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_346\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_447\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_349\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_353:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_354:\n        /* \"#utility.yul\":4598:4620   */\n      tag_450\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_353\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_48:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_452\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_354\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4970   */\n    tag_355:\n        /* \"#utility.yul\":4962:4963   */\n      0x00\n        /* \"#utility.yul\":4959:4960   */\n      dup1\n        /* \"#utility.yul\":4952:4964   */\n      revert\n        /* \"#utility.yul\":4976:5093   */\n    tag_356:\n        /* \"#utility.yul\":5085:5086   */\n      0x00\n        /* \"#utility.yul\":5082:5083   */\n      dup1\n        /* \"#utility.yul\":5075:5087   */\n      revert\n        /* \"#utility.yul\":5099:5279   */\n    tag_357:\n        /* \"#utility.yul\":5147:5224   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5144:5145   */\n      0x00\n        /* \"#utility.yul\":5137:5225   */\n      mstore\n        /* \"#utility.yul\":5244:5248   */\n      0x41\n        /* \"#utility.yul\":5241:5242   */\n      0x04\n        /* \"#utility.yul\":5234:5249   */\n      mstore\n        /* \"#utility.yul\":5268:5272   */\n      0x24\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5273   */\n      revert\n        /* \"#utility.yul\":5285:5566   */\n    tag_358:\n        /* \"#utility.yul\":5368:5395   */\n      tag_457\n        /* \"#utility.yul\":5390:5394   */\n      dup3\n        /* \"#utility.yul\":5368:5395   */\n      tag_338\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5360:5366   */\n      dup2\n        /* \"#utility.yul\":5356:5396   */\n      add\n        /* \"#utility.yul\":5498:5504   */\n      dup2\n        /* \"#utility.yul\":5486:5496   */\n      dup2\n        /* \"#utility.yul\":5483:5505   */\n      lt\n        /* \"#utility.yul\":5462:5480   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5450:5460   */\n      dup3\n        /* \"#utility.yul\":5447:5481   */\n      gt\n        /* \"#utility.yul\":5444:5506   */\n      or\n        /* \"#utility.yul\":5441:5529   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":5509:5527   */\n      tag_459\n      tag_357\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5441:5529   */\n    tag_458:\n        /* \"#utility.yul\":5549:5559   */\n      dup1\n        /* \"#utility.yul\":5545:5547   */\n      0x40\n        /* \"#utility.yul\":5538:5560   */\n      mstore\n        /* \"#utility.yul\":5328:5566   */\n      pop\n        /* \"#utility.yul\":5285:5566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5572:5701   */\n    tag_359:\n        /* \"#utility.yul\":5606:5612   */\n      0x00\n        /* \"#utility.yul\":5633:5653   */\n      tag_461\n      tag_340\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5623:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5662:5695   */\n      tag_462\n        /* \"#utility.yul\":5690:5694   */\n      dup3\n        /* \"#utility.yul\":5682:5688   */\n      dup3\n        /* \"#utility.yul\":5662:5695   */\n      tag_358\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5572:5701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5707:6014   */\n    tag_360:\n        /* \"#utility.yul\":5768:5772   */\n      0x00\n        /* \"#utility.yul\":5858:5876   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5850:5856   */\n      dup3\n        /* \"#utility.yul\":5847:5877   */\n      gt\n        /* \"#utility.yul\":5844:5900   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5880:5898   */\n      tag_465\n      tag_357\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5844:5900   */\n    tag_464:\n        /* \"#utility.yul\":5918:5947   */\n      tag_466\n        /* \"#utility.yul\":5940:5946   */\n      dup3\n        /* \"#utility.yul\":5918:5947   */\n      tag_338\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5910:5947   */\n      swap1\n      pop\n        /* \"#utility.yul\":6002:6006   */\n      0x20\n        /* \"#utility.yul\":5996:6000   */\n      dup2\n        /* \"#utility.yul\":5992:6007   */\n      add\n        /* \"#utility.yul\":5984:6007   */\n      swap1\n      pop\n        /* \"#utility.yul\":5707:6014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6166   */\n    tag_361:\n        /* \"#utility.yul\":6117:6123   */\n      dup3\n        /* \"#utility.yul\":6112:6115   */\n      dup2\n        /* \"#utility.yul\":6107:6110   */\n      dup4\n        /* \"#utility.yul\":6094:6124   */\n      calldatacopy\n        /* \"#utility.yul\":6158:6159   */\n      0x00\n        /* \"#utility.yul\":6149:6155   */\n      dup4\n        /* \"#utility.yul\":6144:6147   */\n      dup4\n        /* \"#utility.yul\":6140:6156   */\n      add\n        /* \"#utility.yul\":6133:6160   */\n      mstore\n        /* \"#utility.yul\":6020:6166   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6172:6595   */\n    tag_362:\n        /* \"#utility.yul\":6249:6254   */\n      0x00\n        /* \"#utility.yul\":6274:6339   */\n      tag_469\n        /* \"#utility.yul\":6290:6338   */\n      tag_470\n        /* \"#utility.yul\":6331:6337   */\n      dup5\n        /* \"#utility.yul\":6290:6338   */\n      tag_360\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6274:6339   */\n      tag_359\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6265:6339   */\n      swap1\n      pop\n        /* \"#utility.yul\":6362:6368   */\n      dup3\n        /* \"#utility.yul\":6355:6360   */\n      dup2\n        /* \"#utility.yul\":6348:6369   */\n      mstore\n        /* \"#utility.yul\":6400:6404   */\n      0x20\n        /* \"#utility.yul\":6393:6398   */\n      dup2\n        /* \"#utility.yul\":6389:6405   */\n      add\n        /* \"#utility.yul\":6438:6441   */\n      dup5\n        /* \"#utility.yul\":6429:6435   */\n      dup5\n        /* \"#utility.yul\":6424:6427   */\n      dup5\n        /* \"#utility.yul\":6420:6436   */\n      add\n        /* \"#utility.yul\":6417:6442   */\n      gt\n        /* \"#utility.yul\":6414:6526   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":6445:6524   */\n      tag_472\n      tag_356\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6414:6526   */\n    tag_471:\n        /* \"#utility.yul\":6535:6589   */\n      tag_473\n        /* \"#utility.yul\":6582:6588   */\n      dup5\n        /* \"#utility.yul\":6577:6580   */\n      dup3\n        /* \"#utility.yul\":6572:6575   */\n      dup6\n        /* \"#utility.yul\":6535:6589   */\n      tag_361\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6255:6595   */\n      pop\n        /* \"#utility.yul\":6172:6595   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6614:6952   */\n    tag_363:\n        /* \"#utility.yul\":6669:6674   */\n      0x00\n        /* \"#utility.yul\":6718:6721   */\n      dup3\n        /* \"#utility.yul\":6711:6715   */\n      0x1f\n        /* \"#utility.yul\":6703:6709   */\n      dup4\n        /* \"#utility.yul\":6699:6716   */\n      add\n        /* \"#utility.yul\":6695:6722   */\n      slt\n        /* \"#utility.yul\":6685:6807   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":6726:6805   */\n      tag_476\n      tag_355\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6685:6807   */\n    tag_475:\n        /* \"#utility.yul\":6843:6849   */\n      dup2\n        /* \"#utility.yul\":6830:6850   */\n      calldataload\n        /* \"#utility.yul\":6868:6946   */\n      tag_477\n        /* \"#utility.yul\":6942:6945   */\n      dup5\n        /* \"#utility.yul\":6934:6940   */\n      dup3\n        /* \"#utility.yul\":6927:6931   */\n      0x20\n        /* \"#utility.yul\":6919:6925   */\n      dup7\n        /* \"#utility.yul\":6915:6932   */\n      add\n        /* \"#utility.yul\":6868:6946   */\n      tag_362\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6859:6946   */\n      swap2\n      pop\n        /* \"#utility.yul\":6675:6952   */\n      pop\n        /* \"#utility.yul\":6614:6952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6958:7610   */\n    tag_51:\n        /* \"#utility.yul\":7035:7041   */\n      0x00\n        /* \"#utility.yul\":7043:7049   */\n      dup1\n        /* \"#utility.yul\":7092:7094   */\n      0x40\n        /* \"#utility.yul\":7080:7089   */\n      dup4\n        /* \"#utility.yul\":7071:7078   */\n      dup6\n        /* \"#utility.yul\":7067:7090   */\n      sub\n        /* \"#utility.yul\":7063:7095   */\n      slt\n        /* \"#utility.yul\":7060:7179   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":7098:7177   */\n      tag_480\n      tag_341\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7060:7179   */\n    tag_479:\n        /* \"#utility.yul\":7218:7219   */\n      0x00\n        /* \"#utility.yul\":7243:7296   */\n      tag_481\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7279:7285   */\n      dup3\n        /* \"#utility.yul\":7268:7277   */\n      dup7\n        /* \"#utility.yul\":7264:7286   */\n      add\n        /* \"#utility.yul\":7243:7296   */\n      tag_346\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7233:7296   */\n      swap3\n      pop\n        /* \"#utility.yul\":7189:7306   */\n      pop\n        /* \"#utility.yul\":7373:7375   */\n      0x20\n        /* \"#utility.yul\":7362:7371   */\n      dup4\n        /* \"#utility.yul\":7358:7376   */\n      add\n        /* \"#utility.yul\":7345:7377   */\n      calldataload\n        /* \"#utility.yul\":7404:7422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7396:7402   */\n      dup2\n        /* \"#utility.yul\":7393:7423   */\n      gt\n        /* \"#utility.yul\":7390:7507   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":7426:7505   */\n      tag_483\n      tag_342\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7390:7507   */\n    tag_482:\n        /* \"#utility.yul\":7531:7593   */\n      tag_484\n        /* \"#utility.yul\":7585:7592   */\n      dup6\n        /* \"#utility.yul\":7576:7582   */\n      dup3\n        /* \"#utility.yul\":7565:7574   */\n      dup7\n        /* \"#utility.yul\":7561:7583   */\n      add\n        /* \"#utility.yul\":7531:7593   */\n      tag_363\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7521:7593   */\n      swap2\n      pop\n        /* \"#utility.yul\":7316:7603   */\n      pop\n        /* \"#utility.yul\":6958:7610   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7616:7693   */\n    tag_364:\n        /* \"#utility.yul\":7653:7660   */\n      0x00\n        /* \"#utility.yul\":7682:7687   */\n      dup2\n        /* \"#utility.yul\":7671:7687   */\n      swap1\n      pop\n        /* \"#utility.yul\":7616:7693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7699:7817   */\n    tag_365:\n        /* \"#utility.yul\":7786:7810   */\n      tag_487\n        /* \"#utility.yul\":7804:7809   */\n      dup2\n        /* \"#utility.yul\":7786:7810   */\n      tag_364\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7781:7784   */\n      dup3\n        /* \"#utility.yul\":7774:7811   */\n      mstore\n        /* \"#utility.yul\":7699:7817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7823:8045   */\n    tag_57:\n        /* \"#utility.yul\":7916:7920   */\n      0x00\n        /* \"#utility.yul\":7954:7956   */\n      0x20\n        /* \"#utility.yul\":7943:7952   */\n      dup3\n        /* \"#utility.yul\":7939:7957   */\n      add\n        /* \"#utility.yul\":7931:7957   */\n      swap1\n      pop\n        /* \"#utility.yul\":7967:8038   */\n      tag_489\n        /* \"#utility.yul\":8035:8036   */\n      0x00\n        /* \"#utility.yul\":8024:8033   */\n      dup4\n        /* \"#utility.yul\":8020:8037   */\n      add\n        /* \"#utility.yul\":8011:8017   */\n      dup5\n        /* \"#utility.yul\":7967:8038   */\n      tag_365\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7823:8045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8051:8380   */\n    tag_61:\n        /* \"#utility.yul\":8110:8116   */\n      0x00\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8147:8156   */\n      dup3\n        /* \"#utility.yul\":8138:8145   */\n      dup5\n        /* \"#utility.yul\":8134:8157   */\n      sub\n        /* \"#utility.yul\":8130:8162   */\n      slt\n        /* \"#utility.yul\":8127:8246   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":8165:8244   */\n      tag_492\n      tag_341\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8127:8246   */\n    tag_491:\n        /* \"#utility.yul\":8285:8286   */\n      0x00\n        /* \"#utility.yul\":8310:8363   */\n      tag_493\n        /* \"#utility.yul\":8355:8362   */\n      dup5\n        /* \"#utility.yul\":8346:8352   */\n      dup3\n        /* \"#utility.yul\":8335:8344   */\n      dup6\n        /* \"#utility.yul\":8331:8353   */\n      add\n        /* \"#utility.yul\":8310:8363   */\n      tag_346\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8300:8363   */\n      swap2\n      pop\n        /* \"#utility.yul\":8256:8373   */\n      pop\n        /* \"#utility.yul\":8051:8380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8386:8504   */\n    tag_366:\n        /* \"#utility.yul\":8473:8497   */\n      tag_495\n        /* \"#utility.yul\":8491:8496   */\n      dup2\n        /* \"#utility.yul\":8473:8497   */\n      tag_344\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8468:8471   */\n      dup3\n        /* \"#utility.yul\":8461:8498   */\n      mstore\n        /* \"#utility.yul\":8386:8504   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8510:8732   */\n    tag_71:\n        /* \"#utility.yul\":8603:8607   */\n      0x00\n        /* \"#utility.yul\":8641:8643   */\n      0x20\n        /* \"#utility.yul\":8630:8639   */\n      dup3\n        /* \"#utility.yul\":8626:8644   */\n      add\n        /* \"#utility.yul\":8618:8644   */\n      swap1\n      pop\n        /* \"#utility.yul\":8654:8725   */\n      tag_497\n        /* \"#utility.yul\":8722:8723   */\n      0x00\n        /* \"#utility.yul\":8711:8720   */\n      dup4\n        /* \"#utility.yul\":8707:8724   */\n      add\n        /* \"#utility.yul\":8698:8704   */\n      dup5\n        /* \"#utility.yul\":8654:8725   */\n      tag_366\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8510:8732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8738:9212   */\n    tag_92:\n        /* \"#utility.yul\":8806:8812   */\n      0x00\n        /* \"#utility.yul\":8814:8820   */\n      dup1\n        /* \"#utility.yul\":8863:8865   */\n      0x40\n        /* \"#utility.yul\":8851:8860   */\n      dup4\n        /* \"#utility.yul\":8842:8849   */\n      dup6\n        /* \"#utility.yul\":8838:8861   */\n      sub\n        /* \"#utility.yul\":8834:8866   */\n      slt\n        /* \"#utility.yul\":8831:8950   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":8869:8948   */\n      tag_500\n      tag_341\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8831:8950   */\n    tag_499:\n        /* \"#utility.yul\":8989:8990   */\n      0x00\n        /* \"#utility.yul\":9014:9067   */\n      tag_501\n        /* \"#utility.yul\":9059:9066   */\n      dup6\n        /* \"#utility.yul\":9050:9056   */\n      dup3\n        /* \"#utility.yul\":9039:9048   */\n      dup7\n        /* \"#utility.yul\":9035:9057   */\n      add\n        /* \"#utility.yul\":9014:9067   */\n      tag_346\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9004:9067   */\n      swap3\n      pop\n        /* \"#utility.yul\":8960:9077   */\n      pop\n        /* \"#utility.yul\":9116:9118   */\n      0x20\n        /* \"#utility.yul\":9142:9195   */\n      tag_502\n        /* \"#utility.yul\":9187:9194   */\n      dup6\n        /* \"#utility.yul\":9178:9184   */\n      dup3\n        /* \"#utility.yul\":9167:9176   */\n      dup7\n        /* \"#utility.yul\":9163:9185   */\n      add\n        /* \"#utility.yul\":9142:9195   */\n      tag_346\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9132:9195   */\n      swap2\n      pop\n        /* \"#utility.yul\":9087:9205   */\n      pop\n        /* \"#utility.yul\":8738:9212   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9218:9398   */\n    tag_367:\n        /* \"#utility.yul\":9266:9343   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9263:9264   */\n      0x00\n        /* \"#utility.yul\":9256:9344   */\n      mstore\n        /* \"#utility.yul\":9363:9367   */\n      0x22\n        /* \"#utility.yul\":9360:9361   */\n      0x04\n        /* \"#utility.yul\":9353:9368   */\n      mstore\n        /* \"#utility.yul\":9387:9391   */\n      0x24\n        /* \"#utility.yul\":9384:9385   */\n      0x00\n        /* \"#utility.yul\":9377:9392   */\n      revert\n        /* \"#utility.yul\":9404:9724   */\n    tag_103:\n        /* \"#utility.yul\":9448:9454   */\n      0x00\n        /* \"#utility.yul\":9485:9486   */\n      0x02\n        /* \"#utility.yul\":9479:9483   */\n      dup3\n        /* \"#utility.yul\":9475:9487   */\n      div\n        /* \"#utility.yul\":9465:9487   */\n      swap1\n      pop\n        /* \"#utility.yul\":9532:9533   */\n      0x01\n        /* \"#utility.yul\":9526:9530   */\n      dup3\n        /* \"#utility.yul\":9522:9534   */\n      and\n        /* \"#utility.yul\":9553:9571   */\n      dup1\n        /* \"#utility.yul\":9543:9624   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9609:9613   */\n      0x7f\n        /* \"#utility.yul\":9601:9607   */\n      dup3\n        /* \"#utility.yul\":9597:9614   */\n      and\n        /* \"#utility.yul\":9587:9614   */\n      swap2\n      pop\n        /* \"#utility.yul\":9543:9624   */\n    tag_505:\n        /* \"#utility.yul\":9671:9673   */\n      0x20\n        /* \"#utility.yul\":9663:9669   */\n      dup3\n        /* \"#utility.yul\":9660:9674   */\n      lt\n        /* \"#utility.yul\":9640:9658   */\n      dup2\n        /* \"#utility.yul\":9637:9675   */\n      sub\n        /* \"#utility.yul\":9634:9718   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":9690:9708   */\n      tag_507\n      tag_367\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9634:9718   */\n    tag_506:\n        /* \"#utility.yul\":9455:9724   */\n      pop\n        /* \"#utility.yul\":9404:9724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9730:9910   */\n    tag_368:\n        /* \"#utility.yul\":9778:9855   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9775:9776   */\n      0x00\n        /* \"#utility.yul\":9768:9856   */\n      mstore\n        /* \"#utility.yul\":9875:9879   */\n      0x11\n        /* \"#utility.yul\":9872:9873   */\n      0x04\n        /* \"#utility.yul\":9865:9880   */\n      mstore\n        /* \"#utility.yul\":9899:9903   */\n      0x24\n        /* \"#utility.yul\":9896:9897   */\n      0x00\n        /* \"#utility.yul\":9889:9904   */\n      revert\n        /* \"#utility.yul\":9916:10018   */\n    tag_369:\n        /* \"#utility.yul\":9958:9966   */\n      0x00\n        /* \"#utility.yul\":10005:10010   */\n      dup2\n        /* \"#utility.yul\":10002:10003   */\n      0x01\n        /* \"#utility.yul\":9998:10011   */\n      shr\n        /* \"#utility.yul\":9977:10011   */\n      swap1\n      pop\n        /* \"#utility.yul\":9916:10018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10024:10872   */\n    tag_370:\n        /* \"#utility.yul\":10085:10090   */\n      0x00\n        /* \"#utility.yul\":10092:10096   */\n      dup1\n        /* \"#utility.yul\":10116:10122   */\n      dup3\n        /* \"#utility.yul\":10107:10122   */\n      swap2\n      pop\n        /* \"#utility.yul\":10140:10145   */\n      dup4\n        /* \"#utility.yul\":10131:10145   */\n      swap1\n      pop\n        /* \"#utility.yul\":10154:10866   */\n    tag_511:\n        /* \"#utility.yul\":10175:10176   */\n      0x01\n        /* \"#utility.yul\":10165:10173   */\n      dup6\n        /* \"#utility.yul\":10162:10177   */\n      gt\n        /* \"#utility.yul\":10154:10866   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":10270:10274   */\n      dup1\n        /* \"#utility.yul\":10265:10268   */\n      dup7\n        /* \"#utility.yul\":10261:10275   */\n      div\n        /* \"#utility.yul\":10255:10259   */\n      dup2\n        /* \"#utility.yul\":10252:10276   */\n      gt\n        /* \"#utility.yul\":10249:10299   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":10279:10297   */\n      tag_515\n      tag_368\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10249:10299   */\n    tag_514:\n        /* \"#utility.yul\":10329:10330   */\n      0x01\n        /* \"#utility.yul\":10319:10327   */\n      dup6\n        /* \"#utility.yul\":10315:10331   */\n      and\n        /* \"#utility.yul\":10312:10763   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":10744:10748   */\n      dup1\n        /* \"#utility.yul\":10737:10742   */\n      dup3\n        /* \"#utility.yul\":10733:10749   */\n      mul\n        /* \"#utility.yul\":10724:10749   */\n      swap2\n      pop\n        /* \"#utility.yul\":10312:10763   */\n    tag_516:\n        /* \"#utility.yul\":10794:10798   */\n      dup1\n        /* \"#utility.yul\":10788:10792   */\n      dup2\n        /* \"#utility.yul\":10784:10799   */\n      mul\n        /* \"#utility.yul\":10776:10799   */\n      swap1\n      pop\n        /* \"#utility.yul\":10824:10856   */\n      tag_517\n        /* \"#utility.yul\":10847:10855   */\n      dup6\n        /* \"#utility.yul\":10824:10856   */\n      tag_369\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10812:10856   */\n      swap5\n      pop\n        /* \"#utility.yul\":10154:10866   */\n      jump(tag_511)\n    tag_513:\n        /* \"#utility.yul\":10024:10872   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11951   */\n    tag_371:\n        /* \"#utility.yul\":10932:10937   */\n      0x00\n        /* \"#utility.yul\":11123:11131   */\n      dup3\n        /* \"#utility.yul\":11113:11153   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":11144:11145   */\n      0x01\n        /* \"#utility.yul\":11135:11145   */\n      swap1\n      pop\n        /* \"#utility.yul\":11146:11151   */\n      jump(tag_518)\n        /* \"#utility.yul\":11113:11153   */\n    tag_519:\n        /* \"#utility.yul\":11172:11176   */\n      dup2\n        /* \"#utility.yul\":11162:11198   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":11189:11190   */\n      0x00\n        /* \"#utility.yul\":11180:11190   */\n      swap1\n      pop\n        /* \"#utility.yul\":11191:11196   */\n      jump(tag_518)\n        /* \"#utility.yul\":11162:11198   */\n    tag_520:\n        /* \"#utility.yul\":11258:11262   */\n      dup2\n        /* \"#utility.yul\":11306:11307   */\n      0x01\n        /* \"#utility.yul\":11301:11328   */\n      dup2\n      eq\n      tag_522\n      jumpi\n        /* \"#utility.yul\":11342:11343   */\n      0x02\n        /* \"#utility.yul\":11337:11528   */\n      dup2\n      eq\n      tag_523\n      jumpi\n        /* \"#utility.yul\":11251:11528   */\n      jump(tag_521)\n        /* \"#utility.yul\":11301:11328   */\n    tag_522:\n        /* \"#utility.yul\":11319:11320   */\n      0x01\n        /* \"#utility.yul\":11310:11320   */\n      swap2\n      pop\n        /* \"#utility.yul\":11321:11326   */\n      pop\n      jump(tag_518)\n        /* \"#utility.yul\":11337:11528   */\n    tag_523:\n        /* \"#utility.yul\":11382:11385   */\n      0xff\n        /* \"#utility.yul\":11372:11380   */\n      dup5\n        /* \"#utility.yul\":11369:11386   */\n      gt\n        /* \"#utility.yul\":11366:11409   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":11389:11407   */\n      tag_525\n      tag_368\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11366:11409   */\n    tag_524:\n        /* \"#utility.yul\":11438:11446   */\n      dup4\n        /* \"#utility.yul\":11435:11436   */\n      0x02\n        /* \"#utility.yul\":11431:11447   */\n      exp\n        /* \"#utility.yul\":11422:11447   */\n      swap2\n      pop\n        /* \"#utility.yul\":11473:11476   */\n      dup5\n        /* \"#utility.yul\":11466:11471   */\n      dup3\n        /* \"#utility.yul\":11463:11477   */\n      gt\n        /* \"#utility.yul\":11460:11500   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":11480:11498   */\n      tag_527\n      tag_368\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11460:11500   */\n    tag_526:\n        /* \"#utility.yul\":11513:11518   */\n      pop\n      jump(tag_518)\n        /* \"#utility.yul\":11251:11528   */\n    tag_521:\n      pop\n        /* \"#utility.yul\":11637:11639   */\n      0x20\n        /* \"#utility.yul\":11627:11635   */\n      dup4\n        /* \"#utility.yul\":11624:11640   */\n      lt\n        /* \"#utility.yul\":11618:11621   */\n      0x0133\n        /* \"#utility.yul\":11612:11616   */\n      dup4\n        /* \"#utility.yul\":11609:11622   */\n      lt\n        /* \"#utility.yul\":11605:11641   */\n      and\n        /* \"#utility.yul\":11587:11589   */\n      0x4e\n        /* \"#utility.yul\":11577:11585   */\n      dup5\n        /* \"#utility.yul\":11574:11590   */\n      lt\n        /* \"#utility.yul\":11569:11571   */\n      0x0b\n        /* \"#utility.yul\":11563:11567   */\n      dup5\n        /* \"#utility.yul\":11560:11572   */\n      lt\n        /* \"#utility.yul\":11556:11591   */\n      and\n        /* \"#utility.yul\":11540:11651   */\n      or\n        /* \"#utility.yul\":11537:11783   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":11693:11701   */\n      dup3\n        /* \"#utility.yul\":11687:11691   */\n      dup3\n        /* \"#utility.yul\":11683:11702   */\n      exp\n        /* \"#utility.yul\":11674:11702   */\n      swap1\n      pop\n        /* \"#utility.yul\":11728:11731   */\n      dup4\n        /* \"#utility.yul\":11721:11726   */\n      dup2\n        /* \"#utility.yul\":11718:11732   */\n      gt\n        /* \"#utility.yul\":11715:11755   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":11735:11753   */\n      tag_530\n      tag_368\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11715:11755   */\n    tag_529:\n        /* \"#utility.yul\":11768:11773   */\n      jump(tag_518)\n        /* \"#utility.yul\":11537:11783   */\n    tag_528:\n        /* \"#utility.yul\":11808:11850   */\n      tag_531\n        /* \"#utility.yul\":11846:11849   */\n      dup5\n        /* \"#utility.yul\":11836:11844   */\n      dup5\n        /* \"#utility.yul\":11830:11834   */\n      dup5\n        /* \"#utility.yul\":11827:11828   */\n      0x01\n        /* \"#utility.yul\":11808:11850   */\n      tag_370\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11793:11850   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":11882:11886   */\n      dup2\n        /* \"#utility.yul\":11877:11880   */\n      dup5\n        /* \"#utility.yul\":11873:11887   */\n      div\n        /* \"#utility.yul\":11866:11871   */\n      dup2\n        /* \"#utility.yul\":11863:11888   */\n      gt\n        /* \"#utility.yul\":11860:11911   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":11891:11909   */\n      tag_533\n      tag_368\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11860:11911   */\n    tag_532:\n        /* \"#utility.yul\":11940:11944   */\n      dup2\n        /* \"#utility.yul\":11933:11938   */\n      dup2\n        /* \"#utility.yul\":11929:11945   */\n      mul\n        /* \"#utility.yul\":11920:11945   */\n      swap1\n      pop\n        /* \"#utility.yul\":10878:11951   */\n    tag_518:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11957:12238   */\n    tag_173:\n        /* \"#utility.yul\":12015:12020   */\n      0x00\n        /* \"#utility.yul\":12039:12062   */\n      tag_535\n        /* \"#utility.yul\":12057:12061   */\n      dup3\n        /* \"#utility.yul\":12039:12062   */\n      tag_347\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12031:12062   */\n      swap2\n      pop\n        /* \"#utility.yul\":12083:12108   */\n      tag_536\n        /* \"#utility.yul\":12099:12107   */\n      dup4\n        /* \"#utility.yul\":12083:12108   */\n      tag_353\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12071:12108   */\n      swap3\n      pop\n        /* \"#utility.yul\":12127:12231   */\n      tag_537\n        /* \"#utility.yul\":12164:12230   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12154:12162   */\n      dup5\n        /* \"#utility.yul\":12148:12152   */\n      dup5\n        /* \"#utility.yul\":12127:12231   */\n      tag_371\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12118:12231   */\n      swap1\n      pop\n        /* \"#utility.yul\":11957:12238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12244:12654   */\n    tag_175:\n        /* \"#utility.yul\":12284:12291   */\n      0x00\n        /* \"#utility.yul\":12307:12327   */\n      tag_539\n        /* \"#utility.yul\":12325:12326   */\n      dup3\n        /* \"#utility.yul\":12307:12327   */\n      tag_347\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":12302:12327   */\n      swap2\n      pop\n        /* \"#utility.yul\":12341:12361   */\n      tag_540\n        /* \"#utility.yul\":12359:12360   */\n      dup4\n        /* \"#utility.yul\":12341:12361   */\n      tag_347\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12336:12361   */\n      swap3\n      pop\n        /* \"#utility.yul\":12396:12397   */\n      dup3\n        /* \"#utility.yul\":12393:12394   */\n      dup3\n        /* \"#utility.yul\":12389:12398   */\n      mul\n        /* \"#utility.yul\":12418:12448   */\n      tag_541\n        /* \"#utility.yul\":12436:12447   */\n      dup2\n        /* \"#utility.yul\":12418:12448   */\n      tag_347\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":12407:12448   */\n      swap2\n      pop\n        /* \"#utility.yul\":12597:12598   */\n      dup3\n        /* \"#utility.yul\":12588:12595   */\n      dup3\n        /* \"#utility.yul\":12584:12599   */\n      div\n        /* \"#utility.yul\":12581:12582   */\n      dup5\n        /* \"#utility.yul\":12578:12600   */\n      eq\n        /* \"#utility.yul\":12558:12559   */\n      dup4\n        /* \"#utility.yul\":12551:12560   */\n      iszero\n        /* \"#utility.yul\":12531:12614   */\n      or\n        /* \"#utility.yul\":12508:12647   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":12627:12645   */\n      tag_543\n      tag_368\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12508:12647   */\n    tag_542:\n        /* \"#utility.yul\":12292:12654   */\n      pop\n        /* \"#utility.yul\":12244:12654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12660:12745   */\n    tag_372:\n        /* \"#utility.yul\":12705:12712   */\n      0x00\n        /* \"#utility.yul\":12734:12739   */\n      dup2\n        /* \"#utility.yul\":12723:12739   */\n      swap1\n      pop\n        /* \"#utility.yul\":12660:12745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12751:12852   */\n    tag_373:\n        /* \"#utility.yul\":12787:12794   */\n      0x00\n        /* \"#utility.yul\":12827:12845   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12820:12825   */\n      dup3\n        /* \"#utility.yul\":12816:12846   */\n      and\n        /* \"#utility.yul\":12805:12846   */\n      swap1\n      pop\n        /* \"#utility.yul\":12751:12852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12858:12918   */\n    tag_374:\n        /* \"#utility.yul\":12886:12889   */\n      0x00\n        /* \"#utility.yul\":12907:12912   */\n      dup2\n        /* \"#utility.yul\":12900:12912   */\n      swap1\n      pop\n        /* \"#utility.yul\":12858:12918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12924:13080   */\n    tag_375:\n        /* \"#utility.yul\":12981:12990   */\n      0x00\n        /* \"#utility.yul\":13014:13074   */\n      tag_548\n        /* \"#utility.yul\":13031:13073   */\n      tag_549\n        /* \"#utility.yul\":13040:13072   */\n      tag_550\n        /* \"#utility.yul\":13066:13071   */\n      dup5\n        /* \"#utility.yul\":13040:13072   */\n      tag_372\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13031:13073   */\n      tag_374\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13014:13074   */\n      tag_373\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":13001:13074   */\n      swap1\n      pop\n        /* \"#utility.yul\":12924:13080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13086:13231   */\n    tag_376:\n        /* \"#utility.yul\":13180:13224   */\n      tag_552\n        /* \"#utility.yul\":13218:13223   */\n      dup2\n        /* \"#utility.yul\":13180:13224   */\n      tag_375\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13175:13178   */\n      dup3\n        /* \"#utility.yul\":13168:13225   */\n      mstore\n        /* \"#utility.yul\":13086:13231   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13237:13473   */\n    tag_179:\n        /* \"#utility.yul\":13337:13341   */\n      0x00\n        /* \"#utility.yul\":13375:13377   */\n      0x20\n        /* \"#utility.yul\":13364:13373   */\n      dup3\n        /* \"#utility.yul\":13360:13378   */\n      add\n        /* \"#utility.yul\":13352:13378   */\n      swap1\n      pop\n        /* \"#utility.yul\":13388:13466   */\n      tag_554\n        /* \"#utility.yul\":13463:13464   */\n      0x00\n        /* \"#utility.yul\":13452:13461   */\n      dup4\n        /* \"#utility.yul\":13448:13465   */\n      add\n        /* \"#utility.yul\":13439:13445   */\n      dup5\n        /* \"#utility.yul\":13388:13466   */\n      tag_376\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13237:13473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13479:13921   */\n    tag_198:\n        /* \"#utility.yul\":13628:13632   */\n      0x00\n        /* \"#utility.yul\":13666:13668   */\n      0x60\n        /* \"#utility.yul\":13655:13664   */\n      dup3\n        /* \"#utility.yul\":13651:13669   */\n      add\n        /* \"#utility.yul\":13643:13669   */\n      swap1\n      pop\n        /* \"#utility.yul\":13679:13750   */\n      tag_556\n        /* \"#utility.yul\":13747:13748   */\n      0x00\n        /* \"#utility.yul\":13736:13745   */\n      dup4\n        /* \"#utility.yul\":13732:13749   */\n      add\n        /* \"#utility.yul\":13723:13729   */\n      dup7\n        /* \"#utility.yul\":13679:13750   */\n      tag_366\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13760:13832   */\n      tag_557\n        /* \"#utility.yul\":13828:13830   */\n      0x20\n        /* \"#utility.yul\":13817:13826   */\n      dup4\n        /* \"#utility.yul\":13813:13831   */\n      add\n        /* \"#utility.yul\":13804:13810   */\n      dup6\n        /* \"#utility.yul\":13760:13832   */\n      tag_352\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":13842:13914   */\n      tag_558\n        /* \"#utility.yul\":13910:13912   */\n      0x40\n        /* \"#utility.yul\":13899:13908   */\n      dup4\n        /* \"#utility.yul\":13895:13913   */\n      add\n        /* \"#utility.yul\":13886:13892   */\n      dup5\n        /* \"#utility.yul\":13842:13914   */\n      tag_352\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13479:13921   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13927:14049   */\n    tag_377:\n        /* \"#utility.yul\":14000:14024   */\n      tag_560\n        /* \"#utility.yul\":14018:14023   */\n      dup2\n        /* \"#utility.yul\":14000:14024   */\n      tag_364\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":13993:13998   */\n      dup2\n        /* \"#utility.yul\":13990:14025   */\n      eq\n        /* \"#utility.yul\":13980:14043   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":14039:14040   */\n      0x00\n        /* \"#utility.yul\":14036:14037   */\n      dup1\n        /* \"#utility.yul\":14029:14041   */\n      revert\n        /* \"#utility.yul\":13980:14043   */\n    tag_561:\n        /* \"#utility.yul\":13927:14049   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14055:14198   */\n    tag_378:\n        /* \"#utility.yul\":14112:14117   */\n      0x00\n        /* \"#utility.yul\":14143:14149   */\n      dup2\n        /* \"#utility.yul\":14137:14150   */\n      mload\n        /* \"#utility.yul\":14128:14150   */\n      swap1\n      pop\n        /* \"#utility.yul\":14159:14192   */\n      tag_563\n        /* \"#utility.yul\":14186:14191   */\n      dup2\n        /* \"#utility.yul\":14159:14192   */\n      tag_377\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14055:14198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14204:14555   */\n    tag_218:\n        /* \"#utility.yul\":14274:14280   */\n      0x00\n        /* \"#utility.yul\":14323:14325   */\n      0x20\n        /* \"#utility.yul\":14311:14320   */\n      dup3\n        /* \"#utility.yul\":14302:14309   */\n      dup5\n        /* \"#utility.yul\":14298:14321   */\n      sub\n        /* \"#utility.yul\":14294:14326   */\n      slt\n        /* \"#utility.yul\":14291:14410   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":14329:14408   */\n      tag_566\n      tag_341\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14291:14410   */\n    tag_565:\n        /* \"#utility.yul\":14449:14450   */\n      0x00\n        /* \"#utility.yul\":14474:14538   */\n      tag_567\n        /* \"#utility.yul\":14530:14537   */\n      dup5\n        /* \"#utility.yul\":14521:14527   */\n      dup3\n        /* \"#utility.yul\":14510:14519   */\n      dup6\n        /* \"#utility.yul\":14506:14528   */\n      add\n        /* \"#utility.yul\":14474:14538   */\n      tag_378\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":14464:14538   */\n      swap2\n      pop\n        /* \"#utility.yul\":14420:14548   */\n      pop\n        /* \"#utility.yul\":14204:14555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14561:14752   */\n    tag_271:\n        /* \"#utility.yul\":14601:14604   */\n      0x00\n        /* \"#utility.yul\":14620:14640   */\n      tag_569\n        /* \"#utility.yul\":14638:14639   */\n      dup3\n        /* \"#utility.yul\":14620:14640   */\n      tag_347\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":14615:14640   */\n      swap2\n      pop\n        /* \"#utility.yul\":14654:14674   */\n      tag_570\n        /* \"#utility.yul\":14672:14673   */\n      dup4\n        /* \"#utility.yul\":14654:14674   */\n      tag_347\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":14649:14674   */\n      swap3\n      pop\n        /* \"#utility.yul\":14697:14698   */\n      dup3\n        /* \"#utility.yul\":14694:14695   */\n      dup3\n        /* \"#utility.yul\":14690:14699   */\n      add\n        /* \"#utility.yul\":14683:14699   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:14721   */\n      dup1\n        /* \"#utility.yul\":14715:14716   */\n      dup3\n        /* \"#utility.yul\":14712:14722   */\n      gt\n        /* \"#utility.yul\":14709:14745   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":14725:14743   */\n      tag_572\n      tag_368\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":14709:14745   */\n    tag_571:\n        /* \"#utility.yul\":14561:14752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14758:14899   */\n    tag_379:\n        /* \"#utility.yul\":14807:14811   */\n      0x00\n        /* \"#utility.yul\":14830:14833   */\n      dup2\n        /* \"#utility.yul\":14822:14833   */\n      swap1\n      pop\n        /* \"#utility.yul\":14853:14856   */\n      dup2\n        /* \"#utility.yul\":14850:14851   */\n      0x00\n        /* \"#utility.yul\":14843:14857   */\n      mstore\n        /* \"#utility.yul\":14887:14891   */\n      0x20\n        /* \"#utility.yul\":14884:14885   */\n      0x00\n        /* \"#utility.yul\":14874:14892   */\n      keccak256\n        /* \"#utility.yul\":14866:14892   */\n      swap1\n      pop\n        /* \"#utility.yul\":14758:14899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14905:14998   */\n    tag_380:\n        /* \"#utility.yul\":14942:14948   */\n      0x00\n        /* \"#utility.yul\":14989:14991   */\n      0x20\n        /* \"#utility.yul\":14984:14986   */\n      0x1f\n        /* \"#utility.yul\":14977:14982   */\n      dup4\n        /* \"#utility.yul\":14973:14987   */\n      add\n        /* \"#utility.yul\":14969:14992   */\n      div\n        /* \"#utility.yul\":14959:14992   */\n      swap1\n      pop\n        /* \"#utility.yul\":14905:14998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15004:15111   */\n    tag_381:\n        /* \"#utility.yul\":15048:15056   */\n      0x00\n        /* \"#utility.yul\":15098:15103   */\n      dup3\n        /* \"#utility.yul\":15092:15096   */\n      dup3\n        /* \"#utility.yul\":15088:15104   */\n      shl\n        /* \"#utility.yul\":15067:15104   */\n      swap1\n      pop\n        /* \"#utility.yul\":15004:15111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15117:15510   */\n    tag_382:\n        /* \"#utility.yul\":15186:15192   */\n      0x00\n        /* \"#utility.yul\":15236:15237   */\n      0x08\n        /* \"#utility.yul\":15224:15234   */\n      dup4\n        /* \"#utility.yul\":15220:15238   */\n      mul\n        /* \"#utility.yul\":15259:15356   */\n      tag_577\n        /* \"#utility.yul\":15289:15355   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15278:15287   */\n      dup3\n        /* \"#utility.yul\":15259:15356   */\n      tag_381\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":15377:15416   */\n      tag_578\n        /* \"#utility.yul\":15407:15415   */\n      dup7\n        /* \"#utility.yul\":15396:15405   */\n      dup4\n        /* \"#utility.yul\":15377:15416   */\n      tag_381\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":15365:15416   */\n      swap6\n      pop\n        /* \"#utility.yul\":15449:15453   */\n      dup1\n        /* \"#utility.yul\":15445:15454   */\n      not\n        /* \"#utility.yul\":15438:15443   */\n      dup5\n        /* \"#utility.yul\":15434:15455   */\n      and\n        /* \"#utility.yul\":15425:15455   */\n      swap4\n      pop\n        /* \"#utility.yul\":15498:15502   */\n      dup1\n        /* \"#utility.yul\":15488:15496   */\n      dup7\n        /* \"#utility.yul\":15484:15503   */\n      and\n        /* \"#utility.yul\":15477:15482   */\n      dup5\n        /* \"#utility.yul\":15474:15504   */\n      or\n        /* \"#utility.yul\":15464:15504   */\n      swap3\n      pop\n        /* \"#utility.yul\":15193:15510   */\n      pop\n      pop\n        /* \"#utility.yul\":15117:15510   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15516:15658   */\n    tag_383:\n        /* \"#utility.yul\":15566:15575   */\n      0x00\n        /* \"#utility.yul\":15599:15652   */\n      tag_580\n        /* \"#utility.yul\":15617:15651   */\n      tag_581\n        /* \"#utility.yul\":15626:15650   */\n      tag_582\n        /* \"#utility.yul\":15644:15649   */\n      dup5\n        /* \"#utility.yul\":15626:15650   */\n      tag_347\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":15617:15651   */\n      tag_374\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":15599:15652   */\n      tag_347\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":15586:15652   */\n      swap1\n      pop\n        /* \"#utility.yul\":15516:15658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15664:15739   */\n    tag_384:\n        /* \"#utility.yul\":15707:15710   */\n      0x00\n        /* \"#utility.yul\":15728:15733   */\n      dup2\n        /* \"#utility.yul\":15721:15733   */\n      swap1\n      pop\n        /* \"#utility.yul\":15664:15739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15745:16014   */\n    tag_385:\n        /* \"#utility.yul\":15855:15894   */\n      tag_585\n        /* \"#utility.yul\":15886:15893   */\n      dup4\n        /* \"#utility.yul\":15855:15894   */\n      tag_383\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":15916:16007   */\n      tag_586\n        /* \"#utility.yul\":15965:16006   */\n      tag_587\n        /* \"#utility.yul\":15989:16005   */\n      dup3\n        /* \"#utility.yul\":15965:16006   */\n      tag_384\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":15957:15963   */\n      dup5\n        /* \"#utility.yul\":15950:15954   */\n      dup5\n        /* \"#utility.yul\":15944:15955   */\n      sload\n        /* \"#utility.yul\":15916:16007   */\n      tag_382\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":15910:15914   */\n      dup3\n        /* \"#utility.yul\":15903:16008   */\n      sstore\n        /* \"#utility.yul\":15821:16014   */\n      pop\n        /* \"#utility.yul\":15745:16014   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16020:16093   */\n    tag_386:\n        /* \"#utility.yul\":16065:16068   */\n      0x00\n        /* \"#utility.yul\":16020:16093   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16099:16288   */\n    tag_387:\n        /* \"#utility.yul\":16176:16208   */\n      tag_590\n      tag_386\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16217:16282   */\n      tag_591\n        /* \"#utility.yul\":16275:16281   */\n      dup2\n        /* \"#utility.yul\":16267:16273   */\n      dup5\n        /* \"#utility.yul\":16261:16265   */\n      dup5\n        /* \"#utility.yul\":16217:16282   */\n      tag_385\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":16152:16288   */\n      pop\n        /* \"#utility.yul\":16099:16288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16294:16480   */\n    tag_388:\n        /* \"#utility.yul\":16354:16474   */\n    tag_593:\n        /* \"#utility.yul\":16371:16374   */\n      dup2\n        /* \"#utility.yul\":16364:16369   */\n      dup2\n        /* \"#utility.yul\":16361:16375   */\n      lt\n        /* \"#utility.yul\":16354:16474   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":16425:16464   */\n      tag_596\n        /* \"#utility.yul\":16462:16463   */\n      0x00\n        /* \"#utility.yul\":16455:16460   */\n      dup3\n        /* \"#utility.yul\":16425:16464   */\n      tag_387\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16398:16399   */\n      0x01\n        /* \"#utility.yul\":16391:16396   */\n      dup2\n        /* \"#utility.yul\":16387:16400   */\n      add\n        /* \"#utility.yul\":16378:16400   */\n      swap1\n      pop\n        /* \"#utility.yul\":16354:16474   */\n      jump(tag_593)\n    tag_595:\n        /* \"#utility.yul\":16294:16480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16486:17029   */\n    tag_389:\n        /* \"#utility.yul\":16587:16589   */\n      0x1f\n        /* \"#utility.yul\":16582:16585   */\n      dup3\n        /* \"#utility.yul\":16579:16590   */\n      gt\n        /* \"#utility.yul\":16576:17022   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":16621:16659   */\n      tag_599\n        /* \"#utility.yul\":16653:16658   */\n      dup2\n        /* \"#utility.yul\":16621:16659   */\n      tag_379\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":16705:16734   */\n      tag_600\n        /* \"#utility.yul\":16723:16733   */\n      dup5\n        /* \"#utility.yul\":16705:16734   */\n      tag_380\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16695:16703   */\n      dup2\n        /* \"#utility.yul\":16691:16735   */\n      add\n        /* \"#utility.yul\":16888:16890   */\n      0x20\n        /* \"#utility.yul\":16876:16886   */\n      dup6\n        /* \"#utility.yul\":16873:16891   */\n      lt\n        /* \"#utility.yul\":16870:16919   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":16909:16917   */\n      dup2\n        /* \"#utility.yul\":16894:16917   */\n      swap1\n      pop\n        /* \"#utility.yul\":16870:16919   */\n    tag_601:\n        /* \"#utility.yul\":16932:17012   */\n      tag_602\n        /* \"#utility.yul\":16988:17010   */\n      tag_603\n        /* \"#utility.yul\":17006:17009   */\n      dup6\n        /* \"#utility.yul\":16988:17010   */\n      tag_380\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16978:16986   */\n      dup4\n        /* \"#utility.yul\":16974:17011   */\n      add\n        /* \"#utility.yul\":16961:16972   */\n      dup3\n        /* \"#utility.yul\":16932:17012   */\n      tag_388\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16591:17022   */\n      pop\n      pop\n        /* \"#utility.yul\":16576:17022   */\n    tag_598:\n        /* \"#utility.yul\":16486:17029   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17035:17152   */\n    tag_390:\n        /* \"#utility.yul\":17089:17097   */\n      0x00\n        /* \"#utility.yul\":17139:17144   */\n      dup3\n        /* \"#utility.yul\":17133:17137   */\n      dup3\n        /* \"#utility.yul\":17129:17145   */\n      shr\n        /* \"#utility.yul\":17108:17145   */\n      swap1\n      pop\n        /* \"#utility.yul\":17035:17152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17158:17327   */\n    tag_391:\n        /* \"#utility.yul\":17202:17208   */\n      0x00\n        /* \"#utility.yul\":17235:17286   */\n      tag_606\n        /* \"#utility.yul\":17283:17284   */\n      0x00\n        /* \"#utility.yul\":17279:17285   */\n      not\n        /* \"#utility.yul\":17271:17276   */\n      dup5\n        /* \"#utility.yul\":17268:17269   */\n      0x08\n        /* \"#utility.yul\":17264:17277   */\n      mul\n        /* \"#utility.yul\":17235:17286   */\n      tag_390\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":17231:17287   */\n      not\n        /* \"#utility.yul\":17316:17320   */\n      dup1\n        /* \"#utility.yul\":17310:17314   */\n      dup4\n        /* \"#utility.yul\":17306:17321   */\n      and\n        /* \"#utility.yul\":17296:17321   */\n      swap2\n      pop\n        /* \"#utility.yul\":17209:17327   */\n      pop\n        /* \"#utility.yul\":17158:17327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17332:17627   */\n    tag_392:\n        /* \"#utility.yul\":17408:17412   */\n      0x00\n        /* \"#utility.yul\":17554:17583   */\n      tag_608\n        /* \"#utility.yul\":17579:17582   */\n      dup4\n        /* \"#utility.yul\":17573:17577   */\n      dup4\n        /* \"#utility.yul\":17554:17583   */\n      tag_391\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":17546:17583   */\n      swap2\n      pop\n        /* \"#utility.yul\":17616:17619   */\n      dup3\n        /* \"#utility.yul\":17613:17614   */\n      0x02\n        /* \"#utility.yul\":17609:17620   */\n      mul\n        /* \"#utility.yul\":17603:17607   */\n      dup3\n        /* \"#utility.yul\":17600:17621   */\n      or\n        /* \"#utility.yul\":17592:17621   */\n      swap1\n      pop\n        /* \"#utility.yul\":17332:17627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17632:19027   */\n    tag_299:\n        /* \"#utility.yul\":17749:17786   */\n      tag_610\n        /* \"#utility.yul\":17782:17785   */\n      dup3\n        /* \"#utility.yul\":17749:17786   */\n      tag_335\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":17851:17869   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17843:17849   */\n      dup2\n        /* \"#utility.yul\":17840:17870   */\n      gt\n        /* \"#utility.yul\":17837:17893   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":17873:17891   */\n      tag_612\n      tag_357\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":17837:17893   */\n    tag_611:\n        /* \"#utility.yul\":17917:17955   */\n      tag_613\n        /* \"#utility.yul\":17949:17953   */\n      dup3\n        /* \"#utility.yul\":17943:17954   */\n      sload\n        /* \"#utility.yul\":17917:17955   */\n      tag_103\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":18002:18069   */\n      tag_614\n        /* \"#utility.yul\":18062:18068   */\n      dup3\n        /* \"#utility.yul\":18054:18060   */\n      dup3\n        /* \"#utility.yul\":18048:18052   */\n      dup6\n        /* \"#utility.yul\":18002:18069   */\n      tag_389\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":18096:18097   */\n      0x00\n        /* \"#utility.yul\":18120:18124   */\n      0x20\n        /* \"#utility.yul\":18107:18124   */\n      swap1\n      pop\n        /* \"#utility.yul\":18152:18154   */\n      0x1f\n        /* \"#utility.yul\":18144:18150   */\n      dup4\n        /* \"#utility.yul\":18141:18155   */\n      gt\n        /* \"#utility.yul\":18169:18170   */\n      0x01\n        /* \"#utility.yul\":18164:18782   */\n      dup2\n      eq\n      tag_616\n      jumpi\n        /* \"#utility.yul\":18826:18827   */\n      0x00\n        /* \"#utility.yul\":18843:18849   */\n      dup5\n        /* \"#utility.yul\":18840:18917   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":18892:18901   */\n      dup3\n        /* \"#utility.yul\":18887:18890   */\n      dup8\n        /* \"#utility.yul\":18883:18902   */\n      add\n        /* \"#utility.yul\":18877:18903   */\n      mload\n        /* \"#utility.yul\":18868:18903   */\n      swap1\n      pop\n        /* \"#utility.yul\":18840:18917   */\n    tag_617:\n        /* \"#utility.yul\":18943:19010   */\n      tag_618\n        /* \"#utility.yul\":19003:19009   */\n      dup6\n        /* \"#utility.yul\":18996:19001   */\n      dup3\n        /* \"#utility.yul\":18943:19010   */\n      tag_392\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":18937:18941   */\n      dup7\n        /* \"#utility.yul\":18930:19011   */\n      sstore\n        /* \"#utility.yul\":18799:19021   */\n      pop\n        /* \"#utility.yul\":18134:19021   */\n      jump(tag_615)\n        /* \"#utility.yul\":18164:18782   */\n    tag_616:\n        /* \"#utility.yul\":18216:18220   */\n      0x1f\n        /* \"#utility.yul\":18212:18221   */\n      not\n        /* \"#utility.yul\":18204:18210   */\n      dup5\n        /* \"#utility.yul\":18200:18222   */\n      and\n        /* \"#utility.yul\":18250:18287   */\n      tag_619\n        /* \"#utility.yul\":18282:18286   */\n      dup7\n        /* \"#utility.yul\":18250:18287   */\n      tag_379\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18309:18310   */\n      0x00\n        /* \"#utility.yul\":18323:18531   */\n    tag_620:\n        /* \"#utility.yul\":18337:18344   */\n      dup3\n        /* \"#utility.yul\":18334:18335   */\n      dup2\n        /* \"#utility.yul\":18331:18345   */\n      lt\n        /* \"#utility.yul\":18323:18531   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":18416:18425   */\n      dup5\n        /* \"#utility.yul\":18411:18414   */\n      dup10\n        /* \"#utility.yul\":18407:18426   */\n      add\n        /* \"#utility.yul\":18401:18427   */\n      mload\n        /* \"#utility.yul\":18393:18399   */\n      dup3\n        /* \"#utility.yul\":18386:18428   */\n      sstore\n        /* \"#utility.yul\":18467:18468   */\n      0x01\n        /* \"#utility.yul\":18459:18465   */\n      dup3\n        /* \"#utility.yul\":18455:18469   */\n      add\n        /* \"#utility.yul\":18445:18469   */\n      swap2\n      pop\n        /* \"#utility.yul\":18514:18516   */\n      0x20\n        /* \"#utility.yul\":18503:18512   */\n      dup6\n        /* \"#utility.yul\":18499:18517   */\n      add\n        /* \"#utility.yul\":18486:18517   */\n      swap5\n      pop\n        /* \"#utility.yul\":18360:18364   */\n      0x20\n        /* \"#utility.yul\":18357:18358   */\n      dup2\n        /* \"#utility.yul\":18353:18365   */\n      add\n        /* \"#utility.yul\":18348:18365   */\n      swap1\n      pop\n        /* \"#utility.yul\":18323:18531   */\n      jump(tag_620)\n    tag_622:\n        /* \"#utility.yul\":18559:18565   */\n      dup7\n        /* \"#utility.yul\":18550:18557   */\n      dup4\n        /* \"#utility.yul\":18547:18566   */\n      lt\n        /* \"#utility.yul\":18544:18723   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":18617:18626   */\n      dup5\n        /* \"#utility.yul\":18612:18615   */\n      dup10\n        /* \"#utility.yul\":18608:18627   */\n      add\n        /* \"#utility.yul\":18602:18628   */\n      mload\n        /* \"#utility.yul\":18660:18708   */\n      tag_624\n        /* \"#utility.yul\":18702:18706   */\n      0x1f\n        /* \"#utility.yul\":18694:18700   */\n      dup10\n        /* \"#utility.yul\":18690:18707   */\n      and\n        /* \"#utility.yul\":18679:18688   */\n      dup3\n        /* \"#utility.yul\":18660:18708   */\n      tag_391\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":18652:18658   */\n      dup4\n        /* \"#utility.yul\":18645:18709   */\n      sstore\n        /* \"#utility.yul\":18567:18723   */\n      pop\n        /* \"#utility.yul\":18544:18723   */\n    tag_623:\n        /* \"#utility.yul\":18769:18770   */\n      0x01\n        /* \"#utility.yul\":18765:18766   */\n      0x02\n        /* \"#utility.yul\":18757:18763   */\n      dup9\n        /* \"#utility.yul\":18753:18767   */\n      mul\n        /* \"#utility.yul\":18749:18771   */\n      add\n        /* \"#utility.yul\":18743:18747   */\n      dup9\n        /* \"#utility.yul\":18736:18772   */\n      sstore\n        /* \"#utility.yul\":18171:18782   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18134:19021   */\n    tag_615:\n      pop\n        /* \"#utility.yul\":17724:19027   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17632:19027   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19033:19131   */\n    tag_393:\n        /* \"#utility.yul\":19084:19090   */\n      0x00\n        /* \"#utility.yul\":19118:19123   */\n      dup2\n        /* \"#utility.yul\":19112:19124   */\n      mload\n        /* \"#utility.yul\":19102:19124   */\n      swap1\n      pop\n        /* \"#utility.yul\":19033:19131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19137:19284   */\n    tag_394:\n        /* \"#utility.yul\":19238:19249   */\n      0x00\n        /* \"#utility.yul\":19275:19278   */\n      dup2\n        /* \"#utility.yul\":19260:19278   */\n      swap1\n      pop\n        /* \"#utility.yul\":19137:19284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19290:19676   */\n    tag_395:\n        /* \"#utility.yul\":19394:19397   */\n      0x00\n        /* \"#utility.yul\":19422:19460   */\n      tag_628\n        /* \"#utility.yul\":19454:19459   */\n      dup3\n        /* \"#utility.yul\":19422:19460   */\n      tag_393\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":19476:19564   */\n      tag_629\n        /* \"#utility.yul\":19557:19563   */\n      dup2\n        /* \"#utility.yul\":19552:19555   */\n      dup6\n        /* \"#utility.yul\":19476:19564   */\n      tag_394\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":19469:19564   */\n      swap4\n      pop\n        /* \"#utility.yul\":19573:19638   */\n      tag_630\n        /* \"#utility.yul\":19631:19637   */\n      dup2\n        /* \"#utility.yul\":19626:19629   */\n      dup6\n        /* \"#utility.yul\":19619:19623   */\n      0x20\n        /* \"#utility.yul\":19612:19617   */\n      dup7\n        /* \"#utility.yul\":19608:19624   */\n      add\n        /* \"#utility.yul\":19573:19638   */\n      tag_337\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":19663:19669   */\n      dup1\n        /* \"#utility.yul\":19658:19661   */\n      dup5\n        /* \"#utility.yul\":19654:19670   */\n      add\n        /* \"#utility.yul\":19647:19670   */\n      swap2\n      pop\n        /* \"#utility.yul\":19398:19676   */\n      pop\n        /* \"#utility.yul\":19290:19676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19682:19953   */\n    tag_314:\n        /* \"#utility.yul\":19812:19815   */\n      0x00\n        /* \"#utility.yul\":19834:19927   */\n      tag_632\n        /* \"#utility.yul\":19923:19926   */\n      dup3\n        /* \"#utility.yul\":19914:19920   */\n      dup5\n        /* \"#utility.yul\":19834:19927   */\n      tag_395\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":19827:19927   */\n      swap2\n      pop\n        /* \"#utility.yul\":19944:19947   */\n      dup2\n        /* \"#utility.yul\":19937:19947   */\n      swap1\n      pop\n        /* \"#utility.yul\":19682:19953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e0acea6f6450004465e88ae559f83695e01bb8bc1e6a4e7c8498b6be3aa086eb64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2234": {
									"entryPoint": null,
									"id": 2234,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 90,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 350,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:14",
										"nodeType": "YulBlock",
										"src": "0:456:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:14",
													"nodeType": "YulBlock",
													"src": "51:57:14",
													"statements": [
														{
															"nativeSrc": "61:41:14",
															"nodeType": "YulAssignment",
															"src": "61:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:14",
																		"nodeType": "YulLiteral",
																		"src": "83:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:14"
																},
																"nativeSrc": "72:30:14",
																"nodeType": "YulFunctionCall",
																"src": "72:30:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:14",
														"nodeType": "YulTypedName",
														"src": "33:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:14",
														"nodeType": "YulTypedName",
														"src": "43:7:14",
														"type": ""
													}
												],
												"src": "7:101:14"
											},
											{
												"body": {
													"nativeSrc": "177:52:14",
													"nodeType": "YulBlock",
													"src": "177:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:14"
																		},
																		"nativeSrc": "199:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:36:14",
																"nodeType": "YulFunctionCall",
																"src": "187:36:14"
															},
															"nativeSrc": "187:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:14",
														"nodeType": "YulTypedName",
														"src": "165:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:14",
														"nodeType": "YulTypedName",
														"src": "172:3:14",
														"type": ""
													}
												],
												"src": "114:115:14"
											},
											{
												"body": {
													"nativeSrc": "331:122:14",
													"nodeType": "YulBlock",
													"src": "331:122:14",
													"statements": [
														{
															"nativeSrc": "341:26:14",
															"nodeType": "YulAssignment",
															"src": "341:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:14",
																		"nodeType": "YulLiteral",
																		"src": "364:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:14"
																},
																"nativeSrc": "349:18:14",
																"nodeType": "YulFunctionCall",
																"src": "349:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:14",
																				"nodeType": "YulLiteral",
																				"src": "443:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:14"
																		},
																		"nativeSrc": "428:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:14"
																},
																"nativeSrc": "377:69:14",
																"nodeType": "YulFunctionCall",
																"src": "377:69:14"
															},
															"nativeSrc": "377:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:14",
														"nodeType": "YulTypedName",
														"src": "303:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:14",
														"nodeType": "YulTypedName",
														"src": "315:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:14",
														"nodeType": "YulTypedName",
														"src": "326:4:14",
														"type": ""
													}
												],
												"src": "235:218:14"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801562000043575f80fd5b50620000546200005a60201b60201c565b620001c4565b5f6200006b6200015e60201b60201c565b9050805f0160089054906101000a900460ff1615620000b6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146200015b5767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001529190620001a9565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b620001a38162000185565b82525050565b5f602082019050620001be5f83018462000198565b92915050565b608051612404620001eb5f395f8181610bba01528181610c0f0152610dc901526124045ff3fe6080604052600436106100f2575f3560e01c8063715018a611610089578063ad3cb1cc11610058578063ad3cb1cc14610314578063c4d66de81461033e578063dd62ed3e14610366578063f2fde38b146103a2576100f2565b8063715018a61461026e5780638da5cb5b1461028457806395d89b41146102ae578063a9059cbb146102d8576100f2565b8063313ce567116100c5578063313ce567146101c25780634f1ef286146101ec57806352d1902d1461020857806370a0823114610232576100f2565b806306fdde03146100f6578063095ea7b31461012057806318160ddd1461015c57806323b872dd14610186575b5f80fd5b348015610101575f80fd5b5061010a6103ca565b604051610117919061197f565b60405180910390f35b34801561012b575f80fd5b5061014660048036038101906101419190611a3d565b610468565b6040516101539190611a95565b60405180910390f35b348015610167575f80fd5b5061017061048a565b60405161017d9190611abd565b60405180910390f35b348015610191575f80fd5b506101ac60048036038101906101a79190611ad6565b6104a1565b6040516101b99190611a95565b60405180910390f35b3480156101cd575f80fd5b506101d66104cf565b6040516101e39190611b41565b60405180910390f35b61020660048036038101906102019190611c86565b6104d7565b005b348015610213575f80fd5b5061021c6104f6565b6040516102299190611cf8565b60405180910390f35b34801561023d575f80fd5b5061025860048036038101906102539190611d11565b610527565b6040516102659190611abd565b60405180910390f35b348015610279575f80fd5b5061028261057a565b005b34801561028f575f80fd5b5061029861058d565b6040516102a59190611d4b565b60405180910390f35b3480156102b9575f80fd5b506102c26105c2565b6040516102cf919061197f565b60405180910390f35b3480156102e3575f80fd5b506102fe60048036038101906102f99190611a3d565b610660565b60405161030b9190611a95565b60405180910390f35b34801561031f575f80fd5b50610328610682565b604051610335919061197f565b60405180910390f35b348015610349575f80fd5b50610364600480360381019061035f9190611d11565b6106bb565b005b348015610371575f80fd5b5061038c60048036038101906103879190611d64565b6108e2565b6040516103999190611abd565b60405180910390f35b3480156103ad575f80fd5b506103c860048036038101906103c39190611d11565b610972565b005b60605f6103d56109f6565b90508060030180546103e690611dcf565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611dcf565b801561045d5780601f106104345761010080835404028352916020019161045d565b820191905f5260205f20905b81548152906001019060200180831161044057829003601f168201915b505050505091505090565b5f80610472610a1d565b905061047f818585610a24565b600191505092915050565b5f806104946109f6565b9050806002015491505090565b5f806104ab610a1d565b90506104b8858285610a36565b6104c3858585610ac8565b60019150509392505050565b5f6012905090565b6104df610bb8565b6104e882610c9e565b6104f28282610ca9565b5050565b5f6104ff610dc7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f806105316109f6565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610582610e4e565b61058b5f610ed5565b565b5f80610597610fa6565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f6105cd6109f6565b90508060040180546105de90611dcf565b80601f016020809104026020016040519081016040528092919081815260200182805461060a90611dcf565b80156106555780601f1061062c57610100808354040283529160200191610655565b820191905f5260205f20905b81548152906001019060200180831161063857829003601f168201915b505050505091505090565b5f8061066a610a1d565b9050610677818585610ac8565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f6106c4610fcd565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561070c5750825b90505f60018367ffffffffffffffff1614801561073f57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561074d575080155b15610784576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156107d1576001855f0160086101000a81548160ff0219169083151502179055505b6108456040518060400160405280600981526020017f4d697661546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d56540000000000000000000000000000000000000000000000000000000000815250610ff4565b61084e8661100a565b61085661101e565b610880336108626104cf565b600a61086e9190611f5b565b614e2061087b9190611fa5565b611028565b83156108da575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108d1919061203b565b60405180910390a15b505050505050565b5f806108ec6109f6565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b61097a610e4e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ea575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e19190611d4b565b60405180910390fd5b6109f381610ed5565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610a3183838360016110a7565b505050565b5f610a4184846108e2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ac25781811015610ab3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610aaa93929190612054565b60405180910390fd5b610ac184848484035f6110a7565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b38575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b2f9190611d4b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b9f9190611d4b565b60405180910390fd5b610bb3838383611284565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610c6557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c4c6114b3565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c9c576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610ca6610e4e565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d1157506040513d601f19601f82011682018060405250810190610d0e91906120b3565b60015b610d5257816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610d499190611d4b565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610db857806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610daf9190611cf8565b60405180910390fd5b610dc28383611506565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610e4c576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e56610a1d565b73ffffffffffffffffffffffffffffffffffffffff16610e7461058d565b73ffffffffffffffffffffffffffffffffffffffff1614610ed357610e97610a1d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610eca9190611d4b565b60405180910390fd5b565b5f610ede610fa6565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610ffc611578565b61100682826115b8565b5050565b611012611578565b61101b816115f4565b50565b611026611578565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611098575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161108f9190611d4b565b60405180910390fd5b6110a35f8383611284565b5050565b5f6110b06109f6565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611122575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111199190611d4b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611192575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111899190611d4b565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550811561127d578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516112749190611abd565b60405180910390a35b5050505050565b5f61128d6109f6565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112e15781816002015f8282546112d591906120de565b925050819055506113b3565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508281101561136c578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161136393929190612054565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113fc5781816002015f8282540392505081905550611448565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114a59190611abd565b60405180910390a350505050565b5f6114df7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611678565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61150f82611681565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561156b57611565828261174a565b50611574565b6115736117ca565b5b5050565b611580611806565b6115b6576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6115c0611578565b5f6115c96109f6565b9050828160030190816115dc91906122a5565b50818160040190816115ee91906122a5565b50505050565b6115fc611578565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361166c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116639190611d4b565b60405180910390fd5b61167581610ed5565b50565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036116dc57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016116d39190611d4b565b60405180910390fd5b806117087f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611678565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff168460405161177391906123b8565b5f60405180830381855af49150503d805f81146117ab576040519150601f19603f3d011682016040523d82523d5f602084013e6117b0565b606091505b50915091506117c0858383611824565b9250505092915050565b5f341115611804576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61180f610fcd565b5f0160089054906101000a900460ff16905090565b60608261183957611834826118b1565b6118a9565b5f825114801561185f57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156118a157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016118989190611d4b565b60405180910390fd5b8190506118aa565b5b9392505050565b5f815111156118c35780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561192c578082015181840152602081019050611911565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611951826118f5565b61195b81856118ff565b935061196b81856020860161190f565b61197481611937565b840191505092915050565b5f6020820190508181035f8301526119978184611947565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119d9826119b0565b9050919050565b6119e9816119cf565b81146119f3575f80fd5b50565b5f81359050611a04816119e0565b92915050565b5f819050919050565b611a1c81611a0a565b8114611a26575f80fd5b50565b5f81359050611a3781611a13565b92915050565b5f8060408385031215611a5357611a526119a8565b5b5f611a60858286016119f6565b9250506020611a7185828601611a29565b9150509250929050565b5f8115159050919050565b611a8f81611a7b565b82525050565b5f602082019050611aa85f830184611a86565b92915050565b611ab781611a0a565b82525050565b5f602082019050611ad05f830184611aae565b92915050565b5f805f60608486031215611aed57611aec6119a8565b5b5f611afa868287016119f6565b9350506020611b0b868287016119f6565b9250506040611b1c86828701611a29565b9150509250925092565b5f60ff82169050919050565b611b3b81611b26565b82525050565b5f602082019050611b545f830184611b32565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b9882611937565b810181811067ffffffffffffffff82111715611bb757611bb6611b62565b5b80604052505050565b5f611bc961199f565b9050611bd58282611b8f565b919050565b5f67ffffffffffffffff821115611bf457611bf3611b62565b5b611bfd82611937565b9050602081019050919050565b828183375f83830152505050565b5f611c2a611c2584611bda565b611bc0565b905082815260208101848484011115611c4657611c45611b5e565b5b611c51848285611c0a565b509392505050565b5f82601f830112611c6d57611c6c611b5a565b5b8135611c7d848260208601611c18565b91505092915050565b5f8060408385031215611c9c57611c9b6119a8565b5b5f611ca9858286016119f6565b925050602083013567ffffffffffffffff811115611cca57611cc96119ac565b5b611cd685828601611c59565b9150509250929050565b5f819050919050565b611cf281611ce0565b82525050565b5f602082019050611d0b5f830184611ce9565b92915050565b5f60208284031215611d2657611d256119a8565b5b5f611d33848285016119f6565b91505092915050565b611d45816119cf565b82525050565b5f602082019050611d5e5f830184611d3c565b92915050565b5f8060408385031215611d7a57611d796119a8565b5b5f611d87858286016119f6565b9250506020611d98858286016119f6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611de657607f821691505b602082108103611df957611df8611da2565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611e8157808604811115611e5d57611e5c611dff565b5b6001851615611e6c5780820291505b8081029050611e7a85611e2c565b9450611e41565b94509492505050565b5f82611e995760019050611f54565b81611ea6575f9050611f54565b8160018114611ebc5760028114611ec657611ef5565b6001915050611f54565b60ff841115611ed857611ed7611dff565b5b8360020a915084821115611eef57611eee611dff565b5b50611f54565b5060208310610133831016604e8410600b8410161715611f2a5782820a905083811115611f2557611f24611dff565b5b611f54565b611f378484846001611e38565b92509050818404811115611f4e57611f4d611dff565b5b81810290505b9392505050565b5f611f6582611a0a565b9150611f7083611b26565b9250611f9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611e8a565b905092915050565b5f611faf82611a0a565b9150611fba83611a0a565b9250828202611fc881611a0a565b91508282048414831517611fdf57611fde611dff565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61202561202061201b84611fe6565b612002565b611fef565b9050919050565b6120358161200b565b82525050565b5f60208201905061204e5f83018461202c565b92915050565b5f6060820190506120675f830186611d3c565b6120746020830185611aae565b6120816040830184611aae565b949350505050565b61209281611ce0565b811461209c575f80fd5b50565b5f815190506120ad81612089565b92915050565b5f602082840312156120c8576120c76119a8565b5b5f6120d58482850161209f565b91505092915050565b5f6120e882611a0a565b91506120f383611a0a565b925082820190508082111561210b5761210a611dff565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261216d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612132565b6121778683612132565b95508019841693508086168417925050509392505050565b5f6121a96121a461219f84611a0a565b612002565b611a0a565b9050919050565b5f819050919050565b6121c28361218f565b6121d66121ce826121b0565b84845461213e565b825550505050565b5f90565b6121ea6121de565b6121f58184846121b9565b505050565b5b818110156122185761220d5f826121e2565b6001810190506121fb565b5050565b601f82111561225d5761222e81612111565b61223784612123565b81016020851015612246578190505b61225a61225285612123565b8301826121fa565b50505b505050565b5f82821c905092915050565b5f61227d5f1984600802612262565b1980831691505092915050565b5f612295838361226e565b9150826002028217905092915050565b6122ae826118f5565b67ffffffffffffffff8111156122c7576122c6611b62565b5b6122d18254611dcf565b6122dc82828561221c565b5f60209050601f83116001811461230d575f84156122fb578287015190505b612305858261228a565b86555061236c565b601f19841661231b86612111565b5f5b828110156123425784890151825560018201915060208501945060208101905061231d565b8683101561235f578489015161235b601f89168261226e565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f61239282612374565b61239c818561237e565b93506123ac81856020860161190f565b80840191505092915050565b5f6123c38284612388565b91508190509291505056fea2646970667358221220e0acea6f6450004465e88ae559f83695e01bb8bc1e6a4e7c8498b6be3aa086eb64736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x54 PUSH3 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1C4 JUMP JUMPDEST PUSH0 PUSH3 0x6B PUSH3 0x15E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x15B JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x152 SWAP2 SWAP1 PUSH3 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A3 DUP2 PUSH3 0x185 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1BE PUSH0 DUP4 ADD DUP5 PUSH3 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2404 PUSH3 0x1EB PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xBBA ADD MSTORE DUP2 DUP2 PUSH2 0xC0F ADD MSTORE PUSH2 0xDC9 ADD MSTORE PUSH2 0x2404 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A2 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D8 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x232 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x57A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x3D5 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x472 PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH2 0x47F DUP2 DUP6 DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x494 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4AB PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH2 0x4B8 DUP6 DUP3 DUP6 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x4C3 DUP6 DUP6 DUP6 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4DF PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x4E8 DUP3 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x4F2 DUP3 DUP3 PUSH2 0xCA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4FF PUSH2 0xDC7 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x531 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x582 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x58B PUSH0 PUSH2 0xED5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x597 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x5CD PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x655 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x638 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x66A PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH2 0x677 DUP2 DUP6 DUP6 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6C4 PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x70C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x73F JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x74D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x845 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D697661546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D56540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x84E DUP7 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x856 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x880 CALLER PUSH2 0x862 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0xA PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x4E20 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x1028 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x8DA JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8EC PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97A PUSH2 0xE4E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0xED5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA31 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA41 DUP5 DUP5 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAC2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAB3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB38 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB3 DUP4 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC65 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4C PUSH2 0x14B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xCA6 PUSH2 0xE4E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD11 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD52 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xDB8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC2 DUP4 DUP4 PUSH2 0x1506 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE56 PUSH2 0xA1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE74 PUSH2 0x58D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED3 JUMPI PUSH2 0xE97 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xEDE PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFFC PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x1006 DUP3 DUP3 PUSH2 0x15B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1012 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0x15F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1026 PUSH2 0x1578 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1098 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10A3 PUSH0 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10B0 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1122 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1192 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x127D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1274 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x128D PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E1 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12D5 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13B3 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x136C JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1363 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1448 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1678 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x150F DUP3 PUSH2 0x1681 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x156B JUMPI PUSH2 0x1565 DUP3 DUP3 PUSH2 0x174A JUMP JUMPDEST POP PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x1573 PUSH2 0x17CA JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x1806 JUMP JUMPDEST PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15C0 PUSH2 0x1578 JUMP JUMPDEST PUSH0 PUSH2 0x15C9 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15FC PUSH2 0x1578 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0xED5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x16DC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D3 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1708 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1678 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x23B8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x17C0 DUP6 DUP4 DUP4 PUSH2 0x1824 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1804 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x180F PUSH2 0xFCD JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1839 JUMPI PUSH2 0x1834 DUP3 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x18A9 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x185F JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x18A1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x18AA JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x18C3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x192C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1911 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1951 DUP3 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0x195B DUP2 DUP6 PUSH2 0x18FF JUMP JUMPDEST SWAP4 POP PUSH2 0x196B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST PUSH2 0x1974 DUP2 PUSH2 0x1937 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1997 DUP2 DUP5 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D9 DUP3 PUSH2 0x19B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E9 DUP2 PUSH2 0x19CF JUMP JUMPDEST DUP2 EQ PUSH2 0x19F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A04 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1C DUP2 PUSH2 0x1A0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A37 DUP2 PUSH2 0x1A13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A71 DUP6 DUP3 DUP7 ADD PUSH2 0x1A29 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8F DUP2 PUSH2 0x1A7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AB7 DUP2 PUSH2 0x1A0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AED JUMPI PUSH2 0x1AEC PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFA DUP7 DUP3 DUP8 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B0B DUP7 DUP3 DUP8 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B1C DUP7 DUP3 DUP8 ADD PUSH2 0x1A29 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3B DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B98 DUP3 PUSH2 0x1937 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB6 PUSH2 0x1B62 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 PUSH2 0x199F JUMP JUMPDEST SWAP1 POP PUSH2 0x1BD5 DUP3 DUP3 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x1B62 JUMP JUMPDEST JUMPDEST PUSH2 0x1BFD DUP3 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2A PUSH2 0x1C25 DUP5 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1BC0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH2 0x1C51 DUP5 DUP3 DUP6 PUSH2 0x1C0A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C6D JUMPI PUSH2 0x1C6C PUSH2 0x1B5A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C7D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH2 0x1C9B PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA9 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x19AC JUMP JUMPDEST JUMPDEST PUSH2 0x1CD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF2 DUP2 PUSH2 0x1CE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D33 DUP5 DUP3 DUP6 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x19CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5E PUSH0 DUP4 ADD DUP5 PUSH2 0x1D3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7A JUMPI PUSH2 0x1D79 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D87 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D98 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DF9 JUMPI PUSH2 0x1DF8 PUSH2 0x1DA2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1E81 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E6C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1E7A DUP6 PUSH2 0x1E2C JUMP JUMPDEST SWAP5 POP PUSH2 0x1E41 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E99 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F54 JUMP JUMPDEST DUP2 PUSH2 0x1EA6 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F54 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EBC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EC6 JUMPI PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1EEF JUMPI PUSH2 0x1EEE PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F54 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F2A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F25 JUMPI PUSH2 0x1F24 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1F37 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E38 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F4E JUMPI PUSH2 0x1F4D PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F65 DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F70 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F9D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAF DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBA DUP4 PUSH2 0x1A0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FC8 DUP2 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FDF JUMPI PUSH2 0x1FDE PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2025 PUSH2 0x2020 PUSH2 0x201B DUP5 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1FEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2035 DUP2 PUSH2 0x200B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204E PUSH0 DUP4 ADD DUP5 PUSH2 0x202C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2067 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x2074 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x2081 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2092 DUP2 PUSH2 0x1CE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x209C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20AD DUP2 PUSH2 0x2089 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C8 JUMPI PUSH2 0x20C7 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D5 DUP5 DUP3 DUP6 ADD PUSH2 0x209F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E8 DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP PUSH2 0x20F3 DUP4 PUSH2 0x1A0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x210B JUMPI PUSH2 0x210A PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x216D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x2177 DUP7 DUP4 PUSH2 0x2132 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21A9 PUSH2 0x21A4 PUSH2 0x219F DUP5 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1A0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C2 DUP4 PUSH2 0x218F JUMP JUMPDEST PUSH2 0x21D6 PUSH2 0x21CE DUP3 PUSH2 0x21B0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x213E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x21EA PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x21F5 DUP2 DUP5 DUP5 PUSH2 0x21B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x220D PUSH0 DUP3 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x225D JUMPI PUSH2 0x222E DUP2 PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x2237 DUP5 PUSH2 0x2123 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2246 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x225A PUSH2 0x2252 DUP6 PUSH2 0x2123 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21FA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x227D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2262 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2295 DUP4 DUP4 PUSH2 0x226E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AE DUP3 PUSH2 0x18F5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x1B62 JUMP JUMPDEST JUMPDEST PUSH2 0x22D1 DUP3 SLOAD PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x22DC DUP3 DUP3 DUP6 PUSH2 0x221C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x230D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22FB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2305 DUP6 DUP3 PUSH2 0x228A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x236C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x231B DUP7 PUSH2 0x2111 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2342 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x231D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x235F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x235B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x226E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2392 DUP3 PUSH2 0x2374 JUMP JUMPDEST PUSH2 0x239C DUP2 DUP6 PUSH2 0x237E JUMP JUMPDEST SWAP4 POP PUSH2 0x23AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23C3 DUP3 DUP5 PUSH2 0x2388 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xAC 0xEA PUSH16 0x6450004465E88AE559F83695E01BB8BC 0x1E PUSH11 0x4E7C8498B6BE3AA086EB64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "392:565:13:-:0;;;1171:4:2;1128:48;;;;;;;;;542:53:13;;;;;;;;;;566:22;:20;;;:22;;:::i;:::-;392:565;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:14:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;392:565:13:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": 1666,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_698": {
									"entryPoint": 4084,
									"id": 698,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_726": {
									"entryPoint": 5560,
									"id": 726,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 4106,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 5620,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 4126,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1130": {
									"entryPoint": 2596,
									"id": 1130,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1198": {
									"entryPoint": 4263,
									"id": 1198,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2274": {
									"entryPoint": 3230,
									"id": 2274,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 5496,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1734": {
									"entryPoint": 6090,
									"id": 1734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 3527,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 3662,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 3000,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_682": {
									"entryPoint": 2550,
									"id": 682,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 4045,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 4006,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 6150,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1079": {
									"entryPoint": 4136,
									"id": 1079,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1275": {
									"entryPoint": 2589,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2101": {
									"entryPoint": 6321,
									"id": 2101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1520": {
									"entryPoint": 5761,
									"id": 1520,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1246": {
									"entryPoint": 2614,
									"id": 1246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3797,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_954": {
									"entryPoint": 2760,
									"id": 954,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1046": {
									"entryPoint": 4740,
									"id": 1046,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 3241,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_851": {
									"entryPoint": 2274,
									"id": 851,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_875": {
									"entryPoint": 1128,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_803": {
									"entryPoint": 1319,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_767": {
									"entryPoint": 1231,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2021": {
									"entryPoint": 5962,
									"id": 2021,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2134": {
									"entryPoint": 5752,
									"id": 2134,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1493": {
									"entryPoint": 5299,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2265": {
									"entryPoint": 1723,
									"id": 2265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_742": {
									"entryPoint": 970,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 1421,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 1270,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1402,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_758": {
									"entryPoint": 1474,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_783": {
									"entryPoint": 1162,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_907": {
									"entryPoint": 1185,
									"id": 907,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 2418,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_827": {
									"entryPoint": 1632,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@upgradeToAndCall_1554": {
									"entryPoint": 5382,
									"id": 1554,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 1239,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2061": {
									"entryPoint": 6180,
									"id": 2061,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 8351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 7302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8276,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 8166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19956:14",
										"nodeType": "YulBlock",
										"src": "0:19956:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:14",
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nativeSrc": "77:22:14",
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nativeSrc": "87:12:14",
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:14",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:14",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nativeSrc": "208:73:14",
													"nodeType": "YulBlock",
													"src": "208:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:14"
																},
																"nativeSrc": "218:19:14",
																"nodeType": "YulFunctionCall",
																"src": "218:19:14"
															},
															"nativeSrc": "218:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:14"
														},
														{
															"nativeSrc": "246:29:14",
															"nodeType": "YulAssignment",
															"src": "246:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:14",
																		"nodeType": "YulLiteral",
																		"src": "270:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:14"
																},
																"nativeSrc": "261:14:14",
																"nodeType": "YulFunctionCall",
																"src": "261:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:14",
														"nodeType": "YulTypedName",
														"src": "180:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:14",
														"nodeType": "YulTypedName",
														"src": "185:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:14",
														"nodeType": "YulTypedName",
														"src": "196:11:14",
														"type": ""
													}
												],
												"src": "112:169:14"
											},
											{
												"body": {
													"nativeSrc": "349:184:14",
													"nodeType": "YulBlock",
													"src": "349:184:14",
													"statements": [
														{
															"nativeSrc": "359:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:14",
																"nodeType": "YulLiteral",
																"src": "368:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:14",
																	"nodeType": "YulTypedName",
																	"src": "363:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:14",
																"nodeType": "YulBlock",
																"src": "428:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:14"
																					},
																					"nativeSrc": "449:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:14"
																							},
																							"nativeSrc": "468:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:14"
																					},
																					"nativeSrc": "462:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:14"
																			},
																			"nativeSrc": "442:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:14"
																		},
																		"nativeSrc": "442:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:14"
																},
																"nativeSrc": "386:13:14",
																"nodeType": "YulFunctionCall",
																"src": "386:13:14"
															},
															"nativeSrc": "378:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:14",
																"nodeType": "YulBlock",
																"src": "400:19:14",
																"statements": [
																	{
																		"nativeSrc": "402:15:14",
																		"nodeType": "YulAssignment",
																		"src": "402:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:14",
																					"nodeType": "YulLiteral",
																					"src": "414:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:14"
																			},
																			"nativeSrc": "407:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:14",
																"nodeType": "YulBlock",
																"src": "382:3:14",
																"statements": []
															},
															"src": "378:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:14"
																		},
																		"nativeSrc": "507:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:14",
																		"nodeType": "YulLiteral",
																		"src": "525:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:14"
																},
																"nativeSrc": "500:27:14",
																"nodeType": "YulFunctionCall",
																"src": "500:27:14"
															},
															"nativeSrc": "500:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:14",
														"nodeType": "YulTypedName",
														"src": "331:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:14",
														"nodeType": "YulTypedName",
														"src": "336:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:14",
														"nodeType": "YulTypedName",
														"src": "341:6:14",
														"type": ""
													}
												],
												"src": "287:246:14"
											},
											{
												"body": {
													"nativeSrc": "587:54:14",
													"nodeType": "YulBlock",
													"src": "587:54:14",
													"statements": [
														{
															"nativeSrc": "597:38:14",
															"nodeType": "YulAssignment",
															"src": "597:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:14",
																				"nodeType": "YulLiteral",
																				"src": "622:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:14"
																		},
																		"nativeSrc": "611:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:14",
																				"nodeType": "YulLiteral",
																				"src": "631:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:14"
																		},
																		"nativeSrc": "627:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:14"
																},
																"nativeSrc": "607:28:14",
																"nodeType": "YulFunctionCall",
																"src": "607:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:14",
														"nodeType": "YulTypedName",
														"src": "570:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:14",
														"nodeType": "YulTypedName",
														"src": "580:6:14",
														"type": ""
													}
												],
												"src": "539:102:14"
											},
											{
												"body": {
													"nativeSrc": "739:285:14",
													"nodeType": "YulBlock",
													"src": "739:285:14",
													"statements": [
														{
															"nativeSrc": "749:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:14"
																},
																"nativeSrc": "763:39:14",
																"nodeType": "YulFunctionCall",
																"src": "763:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:14",
																	"nodeType": "YulTypedName",
																	"src": "753:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:14",
															"nodeType": "YulAssignment",
															"src": "811:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:14"
																},
																"nativeSrc": "818:71:14",
																"nodeType": "YulFunctionCall",
																"src": "818:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:14",
																				"nodeType": "YulLiteral",
																				"src": "944:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:14"
																		},
																		"nativeSrc": "933:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:14"
																},
																"nativeSrc": "898:65:14",
																"nodeType": "YulFunctionCall",
																"src": "898:65:14"
															},
															"nativeSrc": "898:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:14"
														},
														{
															"nativeSrc": "972:46:14",
															"nodeType": "YulAssignment",
															"src": "972:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:14"
																		},
																		"nativeSrc": "988:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:14"
																},
																"nativeSrc": "979:39:14",
																"nodeType": "YulFunctionCall",
																"src": "979:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:14",
														"nodeType": "YulTypedName",
														"src": "720:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:14",
														"nodeType": "YulTypedName",
														"src": "727:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:14",
														"nodeType": "YulTypedName",
														"src": "735:3:14",
														"type": ""
													}
												],
												"src": "647:377:14"
											},
											{
												"body": {
													"nativeSrc": "1148:195:14",
													"nodeType": "YulBlock",
													"src": "1148:195:14",
													"statements": [
														{
															"nativeSrc": "1158:26:14",
															"nodeType": "YulAssignment",
															"src": "1158:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:14"
																},
																"nativeSrc": "1166:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:14"
																		},
																		"nativeSrc": "1201:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:14"
																		},
																		"nativeSrc": "1220:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:14"
																},
																"nativeSrc": "1194:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:14"
															},
															"nativeSrc": "1194:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:14"
														},
														{
															"nativeSrc": "1250:86:14",
															"nodeType": "YulAssignment",
															"src": "1250:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:14"
																},
																"nativeSrc": "1258:78:14",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:14",
														"nodeType": "YulTypedName",
														"src": "1120:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:14",
														"nodeType": "YulTypedName",
														"src": "1132:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:14",
														"nodeType": "YulTypedName",
														"src": "1143:4:14",
														"type": ""
													}
												],
												"src": "1030:313:14"
											},
											{
												"body": {
													"nativeSrc": "1389:35:14",
													"nodeType": "YulBlock",
													"src": "1389:35:14",
													"statements": [
														{
															"nativeSrc": "1399:19:14",
															"nodeType": "YulAssignment",
															"src": "1399:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:14"
																},
																"nativeSrc": "1409:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:14",
														"nodeType": "YulTypedName",
														"src": "1382:6:14",
														"type": ""
													}
												],
												"src": "1349:75:14"
											},
											{
												"body": {
													"nativeSrc": "1519:28:14",
													"nodeType": "YulBlock",
													"src": "1519:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:14"
																},
																"nativeSrc": "1529:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:14"
															},
															"nativeSrc": "1529:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:14"
											},
											{
												"body": {
													"nativeSrc": "1642:28:14",
													"nodeType": "YulBlock",
													"src": "1642:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:14"
																},
																"nativeSrc": "1652:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:14"
															},
															"nativeSrc": "1652:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:14"
											},
											{
												"body": {
													"nativeSrc": "1721:81:14",
													"nodeType": "YulBlock",
													"src": "1721:81:14",
													"statements": [
														{
															"nativeSrc": "1731:65:14",
															"nodeType": "YulAssignment",
															"src": "1731:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:14",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:14"
																},
																"nativeSrc": "1742:54:14",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:14",
														"nodeType": "YulTypedName",
														"src": "1703:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:14",
														"nodeType": "YulTypedName",
														"src": "1713:7:14",
														"type": ""
													}
												],
												"src": "1676:126:14"
											},
											{
												"body": {
													"nativeSrc": "1853:51:14",
													"nodeType": "YulBlock",
													"src": "1853:51:14",
													"statements": [
														{
															"nativeSrc": "1863:35:14",
															"nodeType": "YulAssignment",
															"src": "1863:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:14"
																},
																"nativeSrc": "1874:24:14",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:14",
														"nodeType": "YulTypedName",
														"src": "1835:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:14",
														"nodeType": "YulTypedName",
														"src": "1845:7:14",
														"type": ""
													}
												],
												"src": "1808:96:14"
											},
											{
												"body": {
													"nativeSrc": "1953:79:14",
													"nodeType": "YulBlock",
													"src": "1953:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:14",
																"nodeType": "YulBlock",
																"src": "2010:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:14"
																			},
																			"nativeSrc": "2012:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:14"
																		},
																		"nativeSrc": "2012:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:14"
																				},
																				"nativeSrc": "1983:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:14"
																		},
																		"nativeSrc": "1973:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:14"
																},
																"nativeSrc": "1966:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:14"
															},
															"nativeSrc": "1963:63:14",
															"nodeType": "YulIf",
															"src": "1963:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:14",
														"nodeType": "YulTypedName",
														"src": "1946:5:14",
														"type": ""
													}
												],
												"src": "1910:122:14"
											},
											{
												"body": {
													"nativeSrc": "2090:87:14",
													"nodeType": "YulBlock",
													"src": "2090:87:14",
													"statements": [
														{
															"nativeSrc": "2100:29:14",
															"nodeType": "YulAssignment",
															"src": "2100:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:14"
																},
																"nativeSrc": "2109:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:14"
																},
																"nativeSrc": "2138:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:14"
															},
															"nativeSrc": "2138:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:14",
														"nodeType": "YulTypedName",
														"src": "2068:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:14",
														"nodeType": "YulTypedName",
														"src": "2076:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:14",
														"nodeType": "YulTypedName",
														"src": "2084:5:14",
														"type": ""
													}
												],
												"src": "2038:139:14"
											},
											{
												"body": {
													"nativeSrc": "2228:32:14",
													"nodeType": "YulBlock",
													"src": "2228:32:14",
													"statements": [
														{
															"nativeSrc": "2238:16:14",
															"nodeType": "YulAssignment",
															"src": "2238:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:14",
																"nodeType": "YulIdentifier",
																"src": "2249:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:14",
														"nodeType": "YulTypedName",
														"src": "2210:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:14",
														"nodeType": "YulTypedName",
														"src": "2220:7:14",
														"type": ""
													}
												],
												"src": "2183:77:14"
											},
											{
												"body": {
													"nativeSrc": "2309:79:14",
													"nodeType": "YulBlock",
													"src": "2309:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:14",
																"nodeType": "YulBlock",
																"src": "2366:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:14"
																			},
																			"nativeSrc": "2368:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:14"
																		},
																		"nativeSrc": "2368:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:14"
																				},
																				"nativeSrc": "2339:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:14"
																		},
																		"nativeSrc": "2329:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:14"
																},
																"nativeSrc": "2322:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:14"
															},
															"nativeSrc": "2319:63:14",
															"nodeType": "YulIf",
															"src": "2319:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:14",
														"nodeType": "YulTypedName",
														"src": "2302:5:14",
														"type": ""
													}
												],
												"src": "2266:122:14"
											},
											{
												"body": {
													"nativeSrc": "2446:87:14",
													"nodeType": "YulBlock",
													"src": "2446:87:14",
													"statements": [
														{
															"nativeSrc": "2456:29:14",
															"nodeType": "YulAssignment",
															"src": "2456:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:14"
																},
																"nativeSrc": "2465:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:14"
																},
																"nativeSrc": "2494:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:14"
															},
															"nativeSrc": "2494:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:14",
														"nodeType": "YulTypedName",
														"src": "2424:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:14",
														"nodeType": "YulTypedName",
														"src": "2432:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:14",
														"nodeType": "YulTypedName",
														"src": "2440:5:14",
														"type": ""
													}
												],
												"src": "2394:139:14"
											},
											{
												"body": {
													"nativeSrc": "2622:391:14",
													"nodeType": "YulBlock",
													"src": "2622:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:14",
																"nodeType": "YulBlock",
																"src": "2668:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:14"
																			},
																			"nativeSrc": "2670:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:14"
																		},
																		"nativeSrc": "2670:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:14"
																		},
																		"nativeSrc": "2639:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:14"
																},
																"nativeSrc": "2635:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:14"
															},
															"nativeSrc": "2632:119:14",
															"nodeType": "YulIf",
															"src": "2632:119:14"
														},
														{
															"nativeSrc": "2761:117:14",
															"nodeType": "YulBlock",
															"src": "2761:117:14",
															"statements": [
																{
																	"nativeSrc": "2776:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:14"
																				},
																				"nativeSrc": "2836:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:14"
																		},
																		"nativeSrc": "2815:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:14",
															"nodeType": "YulBlock",
															"src": "2888:118:14",
															"statements": [
																{
																	"nativeSrc": "2903:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:14"
																				},
																				"nativeSrc": "2964:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:14"
																		},
																		"nativeSrc": "2943:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:14",
														"nodeType": "YulTypedName",
														"src": "2584:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:14",
														"nodeType": "YulTypedName",
														"src": "2595:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:14",
														"nodeType": "YulTypedName",
														"src": "2607:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:14",
														"nodeType": "YulTypedName",
														"src": "2615:6:14",
														"type": ""
													}
												],
												"src": "2539:474:14"
											},
											{
												"body": {
													"nativeSrc": "3061:48:14",
													"nodeType": "YulBlock",
													"src": "3061:48:14",
													"statements": [
														{
															"nativeSrc": "3071:32:14",
															"nodeType": "YulAssignment",
															"src": "3071:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:14"
																		},
																		"nativeSrc": "3089:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:14"
																},
																"nativeSrc": "3082:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:14",
														"nodeType": "YulTypedName",
														"src": "3043:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:14",
														"nodeType": "YulTypedName",
														"src": "3053:7:14",
														"type": ""
													}
												],
												"src": "3019:90:14"
											},
											{
												"body": {
													"nativeSrc": "3174:50:14",
													"nodeType": "YulBlock",
													"src": "3174:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:14"
																		},
																		"nativeSrc": "3196:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:14"
																},
																"nativeSrc": "3184:34:14",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:14"
															},
															"nativeSrc": "3184:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:14",
														"nodeType": "YulTypedName",
														"src": "3162:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:14",
														"nodeType": "YulTypedName",
														"src": "3169:3:14",
														"type": ""
													}
												],
												"src": "3115:109:14"
											},
											{
												"body": {
													"nativeSrc": "3322:118:14",
													"nodeType": "YulBlock",
													"src": "3322:118:14",
													"statements": [
														{
															"nativeSrc": "3332:26:14",
															"nodeType": "YulAssignment",
															"src": "3332:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:14"
																},
																"nativeSrc": "3340:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:14"
																		},
																		"nativeSrc": "3415:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:14"
																},
																"nativeSrc": "3368:65:14",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:14"
															},
															"nativeSrc": "3368:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:14",
														"nodeType": "YulTypedName",
														"src": "3294:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:14",
														"nodeType": "YulTypedName",
														"src": "3306:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:14",
														"nodeType": "YulTypedName",
														"src": "3317:4:14",
														"type": ""
													}
												],
												"src": "3230:210:14"
											},
											{
												"body": {
													"nativeSrc": "3511:53:14",
													"nodeType": "YulBlock",
													"src": "3511:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:14"
																		},
																		"nativeSrc": "3533:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:14"
																},
																"nativeSrc": "3521:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:14"
															},
															"nativeSrc": "3521:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:14",
														"nodeType": "YulTypedName",
														"src": "3499:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:14",
														"nodeType": "YulTypedName",
														"src": "3506:3:14",
														"type": ""
													}
												],
												"src": "3446:118:14"
											},
											{
												"body": {
													"nativeSrc": "3668:124:14",
													"nodeType": "YulBlock",
													"src": "3668:124:14",
													"statements": [
														{
															"nativeSrc": "3678:26:14",
															"nodeType": "YulAssignment",
															"src": "3678:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:14"
																},
																"nativeSrc": "3686:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:14"
																		},
																		"nativeSrc": "3767:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:14"
																},
																"nativeSrc": "3714:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:14"
															},
															"nativeSrc": "3714:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:14",
														"nodeType": "YulTypedName",
														"src": "3640:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:14",
														"nodeType": "YulTypedName",
														"src": "3652:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:14",
														"nodeType": "YulTypedName",
														"src": "3663:4:14",
														"type": ""
													}
												],
												"src": "3570:222:14"
											},
											{
												"body": {
													"nativeSrc": "3898:519:14",
													"nodeType": "YulBlock",
													"src": "3898:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:14",
																"nodeType": "YulBlock",
																"src": "3944:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:14"
																			},
																			"nativeSrc": "3946:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:14"
																		},
																		"nativeSrc": "3946:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:14"
																		},
																		"nativeSrc": "3915:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:14"
																},
																"nativeSrc": "3911:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:14"
															},
															"nativeSrc": "3908:119:14",
															"nodeType": "YulIf",
															"src": "3908:119:14"
														},
														{
															"nativeSrc": "4037:117:14",
															"nodeType": "YulBlock",
															"src": "4037:117:14",
															"statements": [
																{
																	"nativeSrc": "4052:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:14"
																				},
																				"nativeSrc": "4112:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:14"
																		},
																		"nativeSrc": "4091:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:14",
															"nodeType": "YulBlock",
															"src": "4164:118:14",
															"statements": [
																{
																	"nativeSrc": "4179:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:14"
																				},
																				"nativeSrc": "4240:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:14"
																		},
																		"nativeSrc": "4219:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:14",
															"nodeType": "YulBlock",
															"src": "4292:118:14",
															"statements": [
																{
																	"nativeSrc": "4307:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:14"
																				},
																				"nativeSrc": "4368:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:14"
																		},
																		"nativeSrc": "4347:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:14",
														"nodeType": "YulTypedName",
														"src": "3852:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:14",
														"nodeType": "YulTypedName",
														"src": "3863:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:14",
														"nodeType": "YulTypedName",
														"src": "3875:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:14",
														"nodeType": "YulTypedName",
														"src": "3883:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:14",
														"nodeType": "YulTypedName",
														"src": "3891:6:14",
														"type": ""
													}
												],
												"src": "3798:619:14"
											},
											{
												"body": {
													"nativeSrc": "4466:43:14",
													"nodeType": "YulBlock",
													"src": "4466:43:14",
													"statements": [
														{
															"nativeSrc": "4476:27:14",
															"nodeType": "YulAssignment",
															"src": "4476:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:14"
																},
																"nativeSrc": "4487:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:14",
														"nodeType": "YulTypedName",
														"src": "4448:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:14",
														"nodeType": "YulTypedName",
														"src": "4458:7:14",
														"type": ""
													}
												],
												"src": "4423:86:14"
											},
											{
												"body": {
													"nativeSrc": "4576:51:14",
													"nodeType": "YulBlock",
													"src": "4576:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:14",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:14"
																		},
																		"nativeSrc": "4598:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:14"
																},
																"nativeSrc": "4586:35:14",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:14"
															},
															"nativeSrc": "4586:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:14",
														"nodeType": "YulTypedName",
														"src": "4564:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:14",
														"nodeType": "YulTypedName",
														"src": "4571:3:14",
														"type": ""
													}
												],
												"src": "4515:112:14"
											},
											{
												"body": {
													"nativeSrc": "4727:120:14",
													"nodeType": "YulBlock",
													"src": "4727:120:14",
													"statements": [
														{
															"nativeSrc": "4737:26:14",
															"nodeType": "YulAssignment",
															"src": "4737:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:14"
																},
																"nativeSrc": "4745:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:14"
																		},
																		"nativeSrc": "4822:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:14"
																},
																"nativeSrc": "4773:67:14",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:14"
															},
															"nativeSrc": "4773:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:14",
														"nodeType": "YulTypedName",
														"src": "4699:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:14",
														"nodeType": "YulTypedName",
														"src": "4711:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:14",
														"nodeType": "YulTypedName",
														"src": "4722:4:14",
														"type": ""
													}
												],
												"src": "4633:214:14"
											},
											{
												"body": {
													"nativeSrc": "4942:28:14",
													"nodeType": "YulBlock",
													"src": "4942:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4959:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4959:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4962:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4952:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:14"
																},
																"nativeSrc": "4952:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4952:12:14"
															},
															"nativeSrc": "4952:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "4952:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4853:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "4853:117:14"
											},
											{
												"body": {
													"nativeSrc": "5065:28:14",
													"nodeType": "YulBlock",
													"src": "5065:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5082:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5082:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5085:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5085:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5075:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:14"
																},
																"nativeSrc": "5075:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5075:12:14"
															},
															"nativeSrc": "5075:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "5075:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4976:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "4976:117:14"
											},
											{
												"body": {
													"nativeSrc": "5127:152:14",
													"nodeType": "YulBlock",
													"src": "5127:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5144:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5144:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5147:77:14",
																		"nodeType": "YulLiteral",
																		"src": "5147:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5137:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:14"
																},
																"nativeSrc": "5137:88:14",
																"nodeType": "YulFunctionCall",
																"src": "5137:88:14"
															},
															"nativeSrc": "5137:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "5137:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5241:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5241:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5244:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5234:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5234:6:14"
																},
																"nativeSrc": "5234:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5234:15:14"
															},
															"nativeSrc": "5234:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5234:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5265:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5265:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5268:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5258:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:14"
																},
																"nativeSrc": "5258:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5258:15:14"
															},
															"nativeSrc": "5258:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5258:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5099:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5099:180:14"
											},
											{
												"body": {
													"nativeSrc": "5328:238:14",
													"nodeType": "YulBlock",
													"src": "5328:238:14",
													"statements": [
														{
															"nativeSrc": "5338:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5338:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5360:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5360:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5390:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "5390:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5368:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "5368:21:14"
																		},
																		"nativeSrc": "5368:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5368:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5356:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5356:3:14"
																},
																"nativeSrc": "5356:40:14",
																"nodeType": "YulFunctionCall",
																"src": "5356:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5342:10:14",
																	"nodeType": "YulTypedName",
																	"src": "5342:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5507:22:14",
																"nodeType": "YulBlock",
																"src": "5507:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5509:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "5509:16:14"
																			},
																			"nativeSrc": "5509:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5509:18:14"
																		},
																		"nativeSrc": "5509:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5509:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5450:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "5450:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5462:18:14",
																				"nodeType": "YulLiteral",
																				"src": "5462:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5447:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5447:2:14"
																		},
																		"nativeSrc": "5447:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5486:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "5486:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5498:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5498:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5483:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5483:2:14"
																		},
																		"nativeSrc": "5483:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5483:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5444:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5444:2:14"
																},
																"nativeSrc": "5444:62:14",
																"nodeType": "YulFunctionCall",
																"src": "5444:62:14"
															},
															"nativeSrc": "5441:88:14",
															"nodeType": "YulIf",
															"src": "5441:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5545:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5545:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5549:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "5549:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5538:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5538:6:14"
																},
																"nativeSrc": "5538:22:14",
																"nodeType": "YulFunctionCall",
																"src": "5538:22:14"
															},
															"nativeSrc": "5538:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "5538:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5285:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5314:6:14",
														"nodeType": "YulTypedName",
														"src": "5314:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5322:4:14",
														"nodeType": "YulTypedName",
														"src": "5322:4:14",
														"type": ""
													}
												],
												"src": "5285:281:14"
											},
											{
												"body": {
													"nativeSrc": "5613:88:14",
													"nodeType": "YulBlock",
													"src": "5613:88:14",
													"statements": [
														{
															"nativeSrc": "5623:30:14",
															"nodeType": "YulAssignment",
															"src": "5623:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5633:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5633:18:14"
																},
																"nativeSrc": "5633:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5633:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5623:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5682:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5682:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5690:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5690:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5662:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "5662:19:14"
																},
																"nativeSrc": "5662:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5662:33:14"
															},
															"nativeSrc": "5662:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "5662:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5572:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5597:4:14",
														"nodeType": "YulTypedName",
														"src": "5597:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5606:6:14",
														"nodeType": "YulTypedName",
														"src": "5606:6:14",
														"type": ""
													}
												],
												"src": "5572:129:14"
											},
											{
												"body": {
													"nativeSrc": "5773:241:14",
													"nodeType": "YulBlock",
													"src": "5773:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5878:22:14",
																"nodeType": "YulBlock",
																"src": "5878:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5880:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "5880:16:14"
																			},
																			"nativeSrc": "5880:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5880:18:14"
																		},
																		"nativeSrc": "5880:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5880:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5850:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5850:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5858:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5858:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5847:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5847:2:14"
																},
																"nativeSrc": "5847:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5847:30:14"
															},
															"nativeSrc": "5844:56:14",
															"nodeType": "YulIf",
															"src": "5844:56:14"
														},
														{
															"nativeSrc": "5910:37:14",
															"nodeType": "YulAssignment",
															"src": "5910:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5940:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5940:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5918:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "5918:21:14"
																},
																"nativeSrc": "5918:29:14",
																"nodeType": "YulFunctionCall",
																"src": "5918:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5910:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5910:4:14"
																}
															]
														},
														{
															"nativeSrc": "5984:23:14",
															"nodeType": "YulAssignment",
															"src": "5984:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5996:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5996:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6002:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6002:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5992:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5992:3:14"
																},
																"nativeSrc": "5992:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5992:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5984:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "5707:307:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5757:6:14",
														"nodeType": "YulTypedName",
														"src": "5757:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5768:4:14",
														"nodeType": "YulTypedName",
														"src": "5768:4:14",
														"type": ""
													}
												],
												"src": "5707:307:14"
											},
											{
												"body": {
													"nativeSrc": "6084:82:14",
													"nodeType": "YulBlock",
													"src": "6084:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6107:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6107:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6112:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6112:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6117:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6117:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6094:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6094:12:14"
																},
																"nativeSrc": "6094:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6094:30:14"
															},
															"nativeSrc": "6094:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6094:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6144:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6144:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6149:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6149:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6140:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:14"
																		},
																		"nativeSrc": "6140:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6140:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6158:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6158:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6133:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6133:6:14"
																},
																"nativeSrc": "6133:27:14",
																"nodeType": "YulFunctionCall",
																"src": "6133:27:14"
															},
															"nativeSrc": "6133:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "6133:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6020:146:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6066:3:14",
														"nodeType": "YulTypedName",
														"src": "6066:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6071:3:14",
														"nodeType": "YulTypedName",
														"src": "6071:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6076:6:14",
														"nodeType": "YulTypedName",
														"src": "6076:6:14",
														"type": ""
													}
												],
												"src": "6020:146:14"
											},
											{
												"body": {
													"nativeSrc": "6255:340:14",
													"nodeType": "YulBlock",
													"src": "6255:340:14",
													"statements": [
														{
															"nativeSrc": "6265:74:14",
															"nodeType": "YulAssignment",
															"src": "6265:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6331:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6331:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "6290:40:14",
																			"nodeType": "YulIdentifier",
																			"src": "6290:40:14"
																		},
																		"nativeSrc": "6290:48:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6274:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "6274:15:14"
																},
																"nativeSrc": "6274:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6274:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6265:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6265:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6355:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6355:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6362:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6362:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6348:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:14"
																},
																"nativeSrc": "6348:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6348:21:14"
															},
															"nativeSrc": "6348:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6348:21:14"
														},
														{
															"nativeSrc": "6378:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6378:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6393:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6393:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6400:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6400:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6389:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6389:3:14"
																},
																"nativeSrc": "6389:16:14",
																"nodeType": "YulFunctionCall",
																"src": "6389:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6382:3:14",
																	"nodeType": "YulTypedName",
																	"src": "6382:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6443:83:14",
																"nodeType": "YulBlock",
																"src": "6443:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6445:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6445:77:14"
																			},
																			"nativeSrc": "6445:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6445:79:14"
																		},
																		"nativeSrc": "6445:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6445:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6424:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6424:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6429:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6429:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:14"
																		},
																		"nativeSrc": "6420:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6438:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6438:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6417:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6417:2:14"
																},
																"nativeSrc": "6417:25:14",
																"nodeType": "YulFunctionCall",
																"src": "6417:25:14"
															},
															"nativeSrc": "6414:112:14",
															"nodeType": "YulIf",
															"src": "6414:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6572:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6572:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6577:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6577:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6582:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6582:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6535:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "6535:36:14"
																},
																"nativeSrc": "6535:54:14",
																"nodeType": "YulFunctionCall",
																"src": "6535:54:14"
															},
															"nativeSrc": "6535:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "6535:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "6172:423:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6228:3:14",
														"nodeType": "YulTypedName",
														"src": "6228:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6233:6:14",
														"nodeType": "YulTypedName",
														"src": "6233:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6241:3:14",
														"nodeType": "YulTypedName",
														"src": "6241:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6249:5:14",
														"nodeType": "YulTypedName",
														"src": "6249:5:14",
														"type": ""
													}
												],
												"src": "6172:423:14"
											},
											{
												"body": {
													"nativeSrc": "6675:277:14",
													"nodeType": "YulBlock",
													"src": "6675:277:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6724:83:14",
																"nodeType": "YulBlock",
																"src": "6724:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6726:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6726:77:14"
																			},
																			"nativeSrc": "6726:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6726:79:14"
																		},
																		"nativeSrc": "6726:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6726:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6703:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6703:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6711:4:14",
																						"nodeType": "YulLiteral",
																						"src": "6711:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6699:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6699:3:14"
																				},
																				"nativeSrc": "6699:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6699:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6718:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6718:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6695:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6695:3:14"
																		},
																		"nativeSrc": "6695:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6695:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6688:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:14"
																},
																"nativeSrc": "6688:35:14",
																"nodeType": "YulFunctionCall",
																"src": "6688:35:14"
															},
															"nativeSrc": "6685:122:14",
															"nodeType": "YulIf",
															"src": "6685:122:14"
														},
														{
															"nativeSrc": "6816:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6816:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6843:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6843:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6830:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6830:12:14"
																},
																"nativeSrc": "6830:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6830:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6820:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6820:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6859:87:14",
															"nodeType": "YulAssignment",
															"src": "6859:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6919:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6919:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6927:4:14",
																				"nodeType": "YulLiteral",
																				"src": "6927:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6915:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:14"
																		},
																		"nativeSrc": "6915:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6915:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6934:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6934:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6942:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6942:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "6868:46:14",
																	"nodeType": "YulIdentifier",
																	"src": "6868:46:14"
																},
																"nativeSrc": "6868:78:14",
																"nodeType": "YulFunctionCall",
																"src": "6868:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6859:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "6614:338:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6653:6:14",
														"nodeType": "YulTypedName",
														"src": "6653:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6661:3:14",
														"nodeType": "YulTypedName",
														"src": "6661:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6669:5:14",
														"nodeType": "YulTypedName",
														"src": "6669:5:14",
														"type": ""
													}
												],
												"src": "6614:338:14"
											},
											{
												"body": {
													"nativeSrc": "7050:560:14",
													"nodeType": "YulBlock",
													"src": "7050:560:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7096:83:14",
																"nodeType": "YulBlock",
																"src": "7096:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7098:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7098:77:14"
																			},
																			"nativeSrc": "7098:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7098:79:14"
																		},
																		"nativeSrc": "7098:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7098:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7071:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7071:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7080:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7067:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:14"
																		},
																		"nativeSrc": "7067:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7067:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7092:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7092:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7063:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7063:3:14"
																},
																"nativeSrc": "7063:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7063:32:14"
															},
															"nativeSrc": "7060:119:14",
															"nodeType": "YulIf",
															"src": "7060:119:14"
														},
														{
															"nativeSrc": "7189:117:14",
															"nodeType": "YulBlock",
															"src": "7189:117:14",
															"statements": [
																{
																	"nativeSrc": "7204:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7204:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7218:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7208:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7208:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7233:63:14",
																	"nodeType": "YulAssignment",
																	"src": "7233:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7268:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7268:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7279:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7279:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7264:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7264:3:14"
																				},
																				"nativeSrc": "7264:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7264:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7288:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7243:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "7243:20:14"
																		},
																		"nativeSrc": "7243:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7243:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7233:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7233:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7316:287:14",
															"nodeType": "YulBlock",
															"src": "7316:287:14",
															"statements": [
																{
																	"nativeSrc": "7331:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7331:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7362:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7362:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7373:2:14",
																						"nodeType": "YulLiteral",
																						"src": "7373:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7358:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7358:3:14"
																				},
																				"nativeSrc": "7358:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7358:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7345:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "7345:12:14"
																		},
																		"nativeSrc": "7345:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7335:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7335:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7424:83:14",
																		"nodeType": "YulBlock",
																		"src": "7424:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7426:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "7426:77:14"
																					},
																					"nativeSrc": "7426:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7426:79:14"
																				},
																				"nativeSrc": "7426:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "7426:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7396:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7396:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7404:18:14",
																				"nodeType": "YulLiteral",
																				"src": "7404:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7393:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7393:2:14"
																		},
																		"nativeSrc": "7393:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7393:30:14"
																	},
																	"nativeSrc": "7390:117:14",
																	"nodeType": "YulIf",
																	"src": "7390:117:14"
																},
																{
																	"nativeSrc": "7521:72:14",
																	"nodeType": "YulAssignment",
																	"src": "7521:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7565:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7565:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7576:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7576:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7561:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7561:3:14"
																				},
																				"nativeSrc": "7561:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7561:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7585:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7585:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "7531:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "7531:29:14"
																		},
																		"nativeSrc": "7531:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7521:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7521:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "6958:652:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7012:9:14",
														"nodeType": "YulTypedName",
														"src": "7012:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7023:7:14",
														"nodeType": "YulTypedName",
														"src": "7023:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7035:6:14",
														"nodeType": "YulTypedName",
														"src": "7035:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7043:6:14",
														"nodeType": "YulTypedName",
														"src": "7043:6:14",
														"type": ""
													}
												],
												"src": "6958:652:14"
											},
											{
												"body": {
													"nativeSrc": "7661:32:14",
													"nodeType": "YulBlock",
													"src": "7661:32:14",
													"statements": [
														{
															"nativeSrc": "7671:16:14",
															"nodeType": "YulAssignment",
															"src": "7671:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "7682:5:14",
																"nodeType": "YulIdentifier",
																"src": "7682:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7671:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7671:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7616:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7643:5:14",
														"nodeType": "YulTypedName",
														"src": "7643:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7653:7:14",
														"nodeType": "YulTypedName",
														"src": "7653:7:14",
														"type": ""
													}
												],
												"src": "7616:77:14"
											},
											{
												"body": {
													"nativeSrc": "7764:53:14",
													"nodeType": "YulBlock",
													"src": "7764:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7781:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7781:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7804:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7804:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "7786:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "7786:17:14"
																		},
																		"nativeSrc": "7786:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7786:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7774:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7774:6:14"
																},
																"nativeSrc": "7774:37:14",
																"nodeType": "YulFunctionCall",
																"src": "7774:37:14"
															},
															"nativeSrc": "7774:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "7774:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "7699:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7752:5:14",
														"nodeType": "YulTypedName",
														"src": "7752:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7759:3:14",
														"nodeType": "YulTypedName",
														"src": "7759:3:14",
														"type": ""
													}
												],
												"src": "7699:118:14"
											},
											{
												"body": {
													"nativeSrc": "7921:124:14",
													"nodeType": "YulBlock",
													"src": "7921:124:14",
													"statements": [
														{
															"nativeSrc": "7931:26:14",
															"nodeType": "YulAssignment",
															"src": "7931:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7943:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7943:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7954:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7954:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7939:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7939:3:14"
																},
																"nativeSrc": "7939:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7939:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7931:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7931:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8011:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8011:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8024:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8024:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8035:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8035:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8020:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8020:3:14"
																		},
																		"nativeSrc": "8020:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8020:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7967:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "7967:43:14"
																},
																"nativeSrc": "7967:71:14",
																"nodeType": "YulFunctionCall",
																"src": "7967:71:14"
															},
															"nativeSrc": "7967:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "7967:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "7823:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7893:9:14",
														"nodeType": "YulTypedName",
														"src": "7893:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7905:6:14",
														"nodeType": "YulTypedName",
														"src": "7905:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7916:4:14",
														"nodeType": "YulTypedName",
														"src": "7916:4:14",
														"type": ""
													}
												],
												"src": "7823:222:14"
											},
											{
												"body": {
													"nativeSrc": "8117:263:14",
													"nodeType": "YulBlock",
													"src": "8117:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8163:83:14",
																"nodeType": "YulBlock",
																"src": "8163:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8165:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8165:77:14"
																			},
																			"nativeSrc": "8165:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8165:79:14"
																		},
																		"nativeSrc": "8165:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8165:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8138:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8138:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8147:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8147:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8134:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8134:3:14"
																		},
																		"nativeSrc": "8134:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8134:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8159:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8159:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8130:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8130:3:14"
																},
																"nativeSrc": "8130:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8130:32:14"
															},
															"nativeSrc": "8127:119:14",
															"nodeType": "YulIf",
															"src": "8127:119:14"
														},
														{
															"nativeSrc": "8256:117:14",
															"nodeType": "YulBlock",
															"src": "8256:117:14",
															"statements": [
																{
																	"nativeSrc": "8271:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8271:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8285:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8285:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8275:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8275:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8300:63:14",
																	"nodeType": "YulAssignment",
																	"src": "8300:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8335:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8335:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8346:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8346:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8331:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8331:3:14"
																				},
																				"nativeSrc": "8331:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8331:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8355:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8355:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8310:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "8310:20:14"
																		},
																		"nativeSrc": "8310:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8310:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8300:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8300:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8051:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8087:9:14",
														"nodeType": "YulTypedName",
														"src": "8087:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8098:7:14",
														"nodeType": "YulTypedName",
														"src": "8098:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8110:6:14",
														"nodeType": "YulTypedName",
														"src": "8110:6:14",
														"type": ""
													}
												],
												"src": "8051:329:14"
											},
											{
												"body": {
													"nativeSrc": "8451:53:14",
													"nodeType": "YulBlock",
													"src": "8451:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8468:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8468:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8491:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8491:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8473:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "8473:17:14"
																		},
																		"nativeSrc": "8473:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8473:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8461:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8461:6:14"
																},
																"nativeSrc": "8461:37:14",
																"nodeType": "YulFunctionCall",
																"src": "8461:37:14"
															},
															"nativeSrc": "8461:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "8461:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8386:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8439:5:14",
														"nodeType": "YulTypedName",
														"src": "8439:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8446:3:14",
														"nodeType": "YulTypedName",
														"src": "8446:3:14",
														"type": ""
													}
												],
												"src": "8386:118:14"
											},
											{
												"body": {
													"nativeSrc": "8608:124:14",
													"nodeType": "YulBlock",
													"src": "8608:124:14",
													"statements": [
														{
															"nativeSrc": "8618:26:14",
															"nodeType": "YulAssignment",
															"src": "8618:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8630:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8630:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8641:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8641:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8626:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8626:3:14"
																},
																"nativeSrc": "8626:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8626:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8618:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8618:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8698:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8698:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8711:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8711:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8722:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8722:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8707:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:14"
																		},
																		"nativeSrc": "8707:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8707:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8654:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8654:43:14"
																},
																"nativeSrc": "8654:71:14",
																"nodeType": "YulFunctionCall",
																"src": "8654:71:14"
															},
															"nativeSrc": "8654:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "8654:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8510:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8580:9:14",
														"nodeType": "YulTypedName",
														"src": "8580:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8592:6:14",
														"nodeType": "YulTypedName",
														"src": "8592:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8603:4:14",
														"nodeType": "YulTypedName",
														"src": "8603:4:14",
														"type": ""
													}
												],
												"src": "8510:222:14"
											},
											{
												"body": {
													"nativeSrc": "8821:391:14",
													"nodeType": "YulBlock",
													"src": "8821:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8867:83:14",
																"nodeType": "YulBlock",
																"src": "8867:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8869:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8869:77:14"
																			},
																			"nativeSrc": "8869:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8869:79:14"
																		},
																		"nativeSrc": "8869:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8869:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8842:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8842:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8851:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8838:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8838:3:14"
																		},
																		"nativeSrc": "8838:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8838:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8863:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8863:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8834:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8834:3:14"
																},
																"nativeSrc": "8834:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8834:32:14"
															},
															"nativeSrc": "8831:119:14",
															"nodeType": "YulIf",
															"src": "8831:119:14"
														},
														{
															"nativeSrc": "8960:117:14",
															"nodeType": "YulBlock",
															"src": "8960:117:14",
															"statements": [
																{
																	"nativeSrc": "8975:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8975:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8989:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8989:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8979:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8979:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9004:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9004:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9039:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9039:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9050:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9050:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9035:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9035:3:14"
																				},
																				"nativeSrc": "9035:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9035:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9059:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9059:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9014:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9014:20:14"
																		},
																		"nativeSrc": "9014:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9014:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9004:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9004:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9087:118:14",
															"nodeType": "YulBlock",
															"src": "9087:118:14",
															"statements": [
																{
																	"nativeSrc": "9102:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9102:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9116:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9116:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9106:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9106:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9132:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9132:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9167:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9167:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9178:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9178:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9163:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9163:3:14"
																				},
																				"nativeSrc": "9163:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9163:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9187:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9187:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9142:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9142:20:14"
																		},
																		"nativeSrc": "9142:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9142:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9132:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9132:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8738:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8783:9:14",
														"nodeType": "YulTypedName",
														"src": "8783:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8794:7:14",
														"nodeType": "YulTypedName",
														"src": "8794:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8806:6:14",
														"nodeType": "YulTypedName",
														"src": "8806:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8814:6:14",
														"nodeType": "YulTypedName",
														"src": "8814:6:14",
														"type": ""
													}
												],
												"src": "8738:474:14"
											},
											{
												"body": {
													"nativeSrc": "9246:152:14",
													"nodeType": "YulBlock",
													"src": "9246:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9263:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9263:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9266:77:14",
																		"nodeType": "YulLiteral",
																		"src": "9266:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9256:6:14"
																},
																"nativeSrc": "9256:88:14",
																"nodeType": "YulFunctionCall",
																"src": "9256:88:14"
															},
															"nativeSrc": "9256:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "9256:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9360:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9360:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9363:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9363:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9353:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9353:6:14"
																},
																"nativeSrc": "9353:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9353:15:14"
															},
															"nativeSrc": "9353:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9353:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9384:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9384:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9387:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9387:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9377:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9377:6:14"
																},
																"nativeSrc": "9377:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9377:15:14"
															},
															"nativeSrc": "9377:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9377:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9218:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9218:180:14"
											},
											{
												"body": {
													"nativeSrc": "9455:269:14",
													"nodeType": "YulBlock",
													"src": "9455:269:14",
													"statements": [
														{
															"nativeSrc": "9465:22:14",
															"nodeType": "YulAssignment",
															"src": "9465:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9479:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9479:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9485:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9485:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9475:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9475:3:14"
																},
																"nativeSrc": "9475:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9475:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9465:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9465:6:14"
																}
															]
														},
														{
															"nativeSrc": "9496:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9496:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9526:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9526:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9532:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9532:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9522:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:14"
																},
																"nativeSrc": "9522:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9522:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9500:18:14",
																	"nodeType": "YulTypedName",
																	"src": "9500:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9573:51:14",
																"nodeType": "YulBlock",
																"src": "9573:51:14",
																"statements": [
																	{
																		"nativeSrc": "9587:27:14",
																		"nodeType": "YulAssignment",
																		"src": "9587:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9601:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "9601:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9609:4:14",
																					"nodeType": "YulLiteral",
																					"src": "9609:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9597:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9597:3:14"
																			},
																			"nativeSrc": "9597:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9597:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9587:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9587:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9553:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "9553:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9546:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9546:6:14"
																},
																"nativeSrc": "9546:26:14",
																"nodeType": "YulFunctionCall",
																"src": "9546:26:14"
															},
															"nativeSrc": "9543:81:14",
															"nodeType": "YulIf",
															"src": "9543:81:14"
														},
														{
															"body": {
																"nativeSrc": "9676:42:14",
																"nodeType": "YulBlock",
																"src": "9676:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9690:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9690:16:14"
																			},
																			"nativeSrc": "9690:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9690:18:14"
																		},
																		"nativeSrc": "9690:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9690:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9640:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "9640:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9663:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9663:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9671:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9671:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9660:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9660:2:14"
																		},
																		"nativeSrc": "9660:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9660:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9637:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9637:2:14"
																},
																"nativeSrc": "9637:38:14",
																"nodeType": "YulFunctionCall",
																"src": "9637:38:14"
															},
															"nativeSrc": "9634:84:14",
															"nodeType": "YulIf",
															"src": "9634:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9404:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9439:4:14",
														"nodeType": "YulTypedName",
														"src": "9439:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9448:6:14",
														"nodeType": "YulTypedName",
														"src": "9448:6:14",
														"type": ""
													}
												],
												"src": "9404:320:14"
											},
											{
												"body": {
													"nativeSrc": "9758:152:14",
													"nodeType": "YulBlock",
													"src": "9758:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9775:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9775:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9778:77:14",
																		"nodeType": "YulLiteral",
																		"src": "9778:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9768:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9768:6:14"
																},
																"nativeSrc": "9768:88:14",
																"nodeType": "YulFunctionCall",
																"src": "9768:88:14"
															},
															"nativeSrc": "9768:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "9768:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9865:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9865:6:14"
																},
																"nativeSrc": "9865:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9865:15:14"
															},
															"nativeSrc": "9865:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9865:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9896:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9896:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9899:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9899:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9889:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9889:6:14"
																},
																"nativeSrc": "9889:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9889:15:14"
															},
															"nativeSrc": "9889:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9889:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9730:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9730:180:14"
											},
											{
												"body": {
													"nativeSrc": "9967:51:14",
													"nodeType": "YulBlock",
													"src": "9967:51:14",
													"statements": [
														{
															"nativeSrc": "9977:34:14",
															"nodeType": "YulAssignment",
															"src": "9977:34:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10002:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10002:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10005:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10005:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9998:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9998:3:14"
																},
																"nativeSrc": "9998:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9998:13:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9977:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "9977:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9916:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9948:5:14",
														"nodeType": "YulTypedName",
														"src": "9948:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9958:8:14",
														"nodeType": "YulTypedName",
														"src": "9958:8:14",
														"type": ""
													}
												],
												"src": "9916:102:14"
											},
											{
												"body": {
													"nativeSrc": "10097:775:14",
													"nodeType": "YulBlock",
													"src": "10097:775:14",
													"statements": [
														{
															"nativeSrc": "10107:15:14",
															"nodeType": "YulAssignment",
															"src": "10107:15:14",
															"value": {
																"name": "_power",
																"nativeSrc": "10116:6:14",
																"nodeType": "YulIdentifier",
																"src": "10116:6:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10107:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10107:5:14"
																}
															]
														},
														{
															"nativeSrc": "10131:14:14",
															"nodeType": "YulAssignment",
															"src": "10131:14:14",
															"value": {
																"name": "_base",
																"nativeSrc": "10140:5:14",
																"nodeType": "YulIdentifier",
																"src": "10140:5:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10131:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10131:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10189:677:14",
																"nodeType": "YulBlock",
																"src": "10189:677:14",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10277:22:14",
																			"nodeType": "YulBlock",
																			"src": "10277:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10279:16:14",
																							"nodeType": "YulIdentifier",
																							"src": "10279:16:14"
																						},
																						"nativeSrc": "10279:18:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10279:18:14"
																					},
																					"nativeSrc": "10279:18:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "10279:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10255:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "10255:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10265:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10265:3:14"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10270:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "10270:4:14"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10261:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "10261:3:14"
																					},
																					"nativeSrc": "10261:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10261:14:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10252:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "10252:2:14"
																			},
																			"nativeSrc": "10252:24:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10252:24:14"
																		},
																		"nativeSrc": "10249:50:14",
																		"nodeType": "YulIf",
																		"src": "10249:50:14"
																	},
																	{
																		"body": {
																			"nativeSrc": "10344:419:14",
																			"nodeType": "YulBlock",
																			"src": "10344:419:14",
																			"statements": [
																				{
																					"nativeSrc": "10724:25:14",
																					"nodeType": "YulAssignment",
																					"src": "10724:25:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10737:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "10737:5:14"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10744:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "10744:4:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10733:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10733:3:14"
																						},
																						"nativeSrc": "10733:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10733:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10724:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "10724:5:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10319:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "10319:8:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10329:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10329:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10315:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10315:3:14"
																			},
																			"nativeSrc": "10315:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10315:16:14"
																		},
																		"nativeSrc": "10312:451:14",
																		"nodeType": "YulIf",
																		"src": "10312:451:14"
																	},
																	{
																		"nativeSrc": "10776:23:14",
																		"nodeType": "YulAssignment",
																		"src": "10776:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10788:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "10788:4:14"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10794:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "10794:4:14"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10784:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10784:3:14"
																			},
																			"nativeSrc": "10784:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10784:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10776:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "10776:4:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10812:44:14",
																		"nodeType": "YulAssignment",
																		"src": "10812:44:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10847:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "10847:8:14"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10824:22:14",
																				"nodeType": "YulIdentifier",
																				"src": "10824:22:14"
																			},
																			"nativeSrc": "10824:32:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10824:32:14"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10812:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "10812:8:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10165:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "10165:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10175:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10175:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10162:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "10162:2:14"
																},
																"nativeSrc": "10162:15:14",
																"nodeType": "YulFunctionCall",
																"src": "10162:15:14"
															},
															"nativeSrc": "10154:712:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10178:2:14",
																"nodeType": "YulBlock",
																"src": "10178:2:14",
																"statements": []
															},
															"pre": {
																"nativeSrc": "10158:3:14",
																"nodeType": "YulBlock",
																"src": "10158:3:14",
																"statements": []
															},
															"src": "10154:712:14"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "10024:848:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "10052:6:14",
														"nodeType": "YulTypedName",
														"src": "10052:6:14",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "10060:5:14",
														"nodeType": "YulTypedName",
														"src": "10060:5:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10067:8:14",
														"nodeType": "YulTypedName",
														"src": "10067:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10077:3:14",
														"nodeType": "YulTypedName",
														"src": "10077:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10085:5:14",
														"nodeType": "YulTypedName",
														"src": "10085:5:14",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "10092:4:14",
														"nodeType": "YulTypedName",
														"src": "10092:4:14",
														"type": ""
													}
												],
												"src": "10024:848:14"
											},
											{
												"body": {
													"nativeSrc": "10938:1013:14",
													"nodeType": "YulBlock",
													"src": "10938:1013:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11133:20:14",
																"nodeType": "YulBlock",
																"src": "11133:20:14",
																"statements": [
																	{
																		"nativeSrc": "11135:10:14",
																		"nodeType": "YulAssignment",
																		"src": "11135:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11144:1:14",
																			"nodeType": "YulLiteral",
																			"src": "11144:1:14",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11135:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "11135:5:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11146:5:14",
																		"nodeType": "YulLeave",
																		"src": "11146:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11123:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "11123:8:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11116:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11116:6:14"
																},
																"nativeSrc": "11116:16:14",
																"nodeType": "YulFunctionCall",
																"src": "11116:16:14"
															},
															"nativeSrc": "11113:40:14",
															"nodeType": "YulIf",
															"src": "11113:40:14"
														},
														{
															"body": {
																"nativeSrc": "11178:20:14",
																"nodeType": "YulBlock",
																"src": "11178:20:14",
																"statements": [
																	{
																		"nativeSrc": "11180:10:14",
																		"nodeType": "YulAssignment",
																		"src": "11180:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11189:1:14",
																			"nodeType": "YulLiteral",
																			"src": "11189:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11180:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "11180:5:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11191:5:14",
																		"nodeType": "YulLeave",
																		"src": "11191:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11172:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11172:4:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11165:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11165:6:14"
																},
																"nativeSrc": "11165:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11165:12:14"
															},
															"nativeSrc": "11162:36:14",
															"nodeType": "YulIf",
															"src": "11162:36:14"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11308:20:14",
																		"nodeType": "YulBlock",
																		"src": "11308:20:14",
																		"statements": [
																			{
																				"nativeSrc": "11310:10:14",
																				"nodeType": "YulAssignment",
																				"src": "11310:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11319:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11319:1:14",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11310:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "11310:5:14"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11321:5:14",
																				"nodeType": "YulLeave",
																				"src": "11321:5:14"
																			}
																		]
																	},
																	"nativeSrc": "11301:27:14",
																	"nodeType": "YulCase",
																	"src": "11301:27:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11306:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11306:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11352:176:14",
																		"nodeType": "YulBlock",
																		"src": "11352:176:14",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11387:22:14",
																					"nodeType": "YulBlock",
																					"src": "11387:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11389:16:14",
																									"nodeType": "YulIdentifier",
																									"src": "11389:16:14"
																								},
																								"nativeSrc": "11389:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11389:18:14"
																							},
																							"nativeSrc": "11389:18:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "11389:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11372:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "11372:8:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11382:3:14",
																							"nodeType": "YulLiteral",
																							"src": "11382:3:14",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11369:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "11369:2:14"
																					},
																					"nativeSrc": "11369:17:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11369:17:14"
																				},
																				"nativeSrc": "11366:43:14",
																				"nodeType": "YulIf",
																				"src": "11366:43:14"
																			},
																			{
																				"nativeSrc": "11422:25:14",
																				"nodeType": "YulAssignment",
																				"src": "11422:25:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11435:1:14",
																							"nodeType": "YulLiteral",
																							"src": "11435:1:14",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11438:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "11438:8:14"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11431:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11431:3:14"
																					},
																					"nativeSrc": "11431:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11431:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11422:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "11422:5:14"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11478:22:14",
																					"nodeType": "YulBlock",
																					"src": "11478:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11480:16:14",
																									"nodeType": "YulIdentifier",
																									"src": "11480:16:14"
																								},
																								"nativeSrc": "11480:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11480:18:14"
																							},
																							"nativeSrc": "11480:18:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "11480:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11466:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "11466:5:14"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11473:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11473:3:14"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11463:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "11463:2:14"
																					},
																					"nativeSrc": "11463:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11463:14:14"
																				},
																				"nativeSrc": "11460:40:14",
																				"nodeType": "YulIf",
																				"src": "11460:40:14"
																			},
																			{
																				"nativeSrc": "11513:5:14",
																				"nodeType": "YulLeave",
																				"src": "11513:5:14"
																			}
																		]
																	},
																	"nativeSrc": "11337:191:14",
																	"nodeType": "YulCase",
																	"src": "11337:191:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11342:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11342:1:14",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11258:4:14",
																"nodeType": "YulIdentifier",
																"src": "11258:4:14"
															},
															"nativeSrc": "11251:277:14",
															"nodeType": "YulSwitch",
															"src": "11251:277:14"
														},
														{
															"body": {
																"nativeSrc": "11660:123:14",
																"nodeType": "YulBlock",
																"src": "11660:123:14",
																"statements": [
																	{
																		"nativeSrc": "11674:28:14",
																		"nodeType": "YulAssignment",
																		"src": "11674:28:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11687:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "11687:4:14"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11693:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "11693:8:14"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11683:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "11683:3:14"
																			},
																			"nativeSrc": "11683:19:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11683:19:14"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11674:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "11674:5:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11733:22:14",
																			"nodeType": "YulBlock",
																			"src": "11733:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11735:16:14",
																							"nodeType": "YulIdentifier",
																							"src": "11735:16:14"
																						},
																						"nativeSrc": "11735:18:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11735:18:14"
																					},
																					"nativeSrc": "11735:18:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "11735:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11721:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "11721:5:14"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11728:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11728:3:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11718:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "11718:2:14"
																			},
																			"nativeSrc": "11718:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11718:14:14"
																		},
																		"nativeSrc": "11715:40:14",
																		"nodeType": "YulIf",
																		"src": "11715:40:14"
																	},
																	{
																		"nativeSrc": "11768:5:14",
																		"nodeType": "YulLeave",
																		"src": "11768:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11563:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "11563:4:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11569:2:14",
																						"nodeType": "YulLiteral",
																						"src": "11569:2:14",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11560:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "11560:2:14"
																				},
																				"nativeSrc": "11560:12:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11560:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11577:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "11577:8:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11587:2:14",
																						"nodeType": "YulLiteral",
																						"src": "11587:2:14",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11574:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "11574:2:14"
																				},
																				"nativeSrc": "11574:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11574:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11556:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11556:3:14"
																		},
																		"nativeSrc": "11556:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11556:35:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11612:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "11612:4:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11618:3:14",
																						"nodeType": "YulLiteral",
																						"src": "11618:3:14",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11609:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "11609:2:14"
																				},
																				"nativeSrc": "11609:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11609:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11627:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "11627:8:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11637:2:14",
																						"nodeType": "YulLiteral",
																						"src": "11637:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11624:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "11624:2:14"
																				},
																				"nativeSrc": "11624:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11624:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11605:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11605:3:14"
																		},
																		"nativeSrc": "11605:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11605:36:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11540:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11540:2:14"
																},
																"nativeSrc": "11540:111:14",
																"nodeType": "YulFunctionCall",
																"src": "11540:111:14"
															},
															"nativeSrc": "11537:246:14",
															"nodeType": "YulIf",
															"src": "11537:246:14"
														},
														{
															"nativeSrc": "11793:57:14",
															"nodeType": "YulAssignment",
															"src": "11793:57:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11827:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11827:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11830:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11830:4:14"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11836:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "11836:8:14"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11846:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11846:3:14"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11808:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "11808:18:14"
																},
																"nativeSrc": "11808:42:14",
																"nodeType": "YulFunctionCall",
																"src": "11808:42:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11793:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11793:5:14"
																},
																{
																	"name": "base",
																	"nativeSrc": "11800:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11800:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11889:22:14",
																"nodeType": "YulBlock",
																"src": "11889:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11891:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "11891:16:14"
																			},
																			"nativeSrc": "11891:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11891:18:14"
																		},
																		"nativeSrc": "11891:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11891:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11866:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11866:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11877:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "11877:3:14"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11882:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "11882:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11873:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:14"
																		},
																		"nativeSrc": "11873:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11873:14:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11863:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11863:2:14"
																},
																"nativeSrc": "11863:25:14",
																"nodeType": "YulFunctionCall",
																"src": "11863:25:14"
															},
															"nativeSrc": "11860:51:14",
															"nodeType": "YulIf",
															"src": "11860:51:14"
														},
														{
															"nativeSrc": "11920:25:14",
															"nodeType": "YulAssignment",
															"src": "11920:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11933:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11933:5:14"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11940:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11940:4:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11929:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11929:3:14"
																},
																"nativeSrc": "11929:16:14",
																"nodeType": "YulFunctionCall",
																"src": "11929:16:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11920:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11920:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10878:1073:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10908:4:14",
														"nodeType": "YulTypedName",
														"src": "10908:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10914:8:14",
														"nodeType": "YulTypedName",
														"src": "10914:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10924:3:14",
														"nodeType": "YulTypedName",
														"src": "10924:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10932:5:14",
														"nodeType": "YulTypedName",
														"src": "10932:5:14",
														"type": ""
													}
												],
												"src": "10878:1073:14"
											},
											{
												"body": {
													"nativeSrc": "12021:217:14",
													"nodeType": "YulBlock",
													"src": "12021:217:14",
													"statements": [
														{
															"nativeSrc": "12031:31:14",
															"nodeType": "YulAssignment",
															"src": "12031:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12057:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12057:4:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12039:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12039:17:14"
																},
																"nativeSrc": "12039:23:14",
																"nodeType": "YulFunctionCall",
																"src": "12039:23:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12031:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12031:4:14"
																}
															]
														},
														{
															"nativeSrc": "12071:37:14",
															"nodeType": "YulAssignment",
															"src": "12071:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12099:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "12099:8:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12083:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "12083:15:14"
																},
																"nativeSrc": "12083:25:14",
																"nodeType": "YulFunctionCall",
																"src": "12083:25:14"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12071:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "12071:8:14"
																}
															]
														},
														{
															"nativeSrc": "12118:113:14",
															"nodeType": "YulAssignment",
															"src": "12118:113:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12148:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12148:4:14"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12154:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "12154:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12164:66:14",
																		"nodeType": "YulLiteral",
																		"src": "12164:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12127:20:14",
																	"nodeType": "YulIdentifier",
																	"src": "12127:20:14"
																},
																"nativeSrc": "12127:104:14",
																"nodeType": "YulFunctionCall",
																"src": "12127:104:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12118:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12118:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11957:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11996:4:14",
														"nodeType": "YulTypedName",
														"src": "11996:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12002:8:14",
														"nodeType": "YulTypedName",
														"src": "12002:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12015:5:14",
														"nodeType": "YulTypedName",
														"src": "12015:5:14",
														"type": ""
													}
												],
												"src": "11957:281:14"
											},
											{
												"body": {
													"nativeSrc": "12292:362:14",
													"nodeType": "YulBlock",
													"src": "12292:362:14",
													"statements": [
														{
															"nativeSrc": "12302:25:14",
															"nodeType": "YulAssignment",
															"src": "12302:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12325:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12325:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12307:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12307:17:14"
																},
																"nativeSrc": "12307:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12307:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12302:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12302:1:14"
																}
															]
														},
														{
															"nativeSrc": "12336:25:14",
															"nodeType": "YulAssignment",
															"src": "12336:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12359:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12359:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12341:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12341:17:14"
																},
																"nativeSrc": "12341:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12341:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12336:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12336:1:14"
																}
															]
														},
														{
															"nativeSrc": "12370:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12370:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12393:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12393:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12396:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12396:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12389:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12389:3:14"
																},
																"nativeSrc": "12389:9:14",
																"nodeType": "YulFunctionCall",
																"src": "12389:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12374:11:14",
																	"nodeType": "YulTypedName",
																	"src": "12374:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12407:41:14",
															"nodeType": "YulAssignment",
															"src": "12407:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12436:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "12436:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12418:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12418:17:14"
																},
																"nativeSrc": "12418:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12418:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12407:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "12407:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12625:22:14",
																"nodeType": "YulBlock",
																"src": "12625:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12627:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12627:16:14"
																			},
																			"nativeSrc": "12627:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12627:18:14"
																		},
																		"nativeSrc": "12627:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12627:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12558:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "12558:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12551:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "12551:6:14"
																				},
																				"nativeSrc": "12551:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12551:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12581:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "12581:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12588:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "12588:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12597:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "12597:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12584:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "12584:3:14"
																						},
																						"nativeSrc": "12584:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "12584:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12578:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "12578:2:14"
																				},
																				"nativeSrc": "12578:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12578:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12531:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12531:2:14"
																		},
																		"nativeSrc": "12531:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12531:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12511:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12511:6:14"
																},
																"nativeSrc": "12511:113:14",
																"nodeType": "YulFunctionCall",
																"src": "12511:113:14"
															},
															"nativeSrc": "12508:139:14",
															"nodeType": "YulIf",
															"src": "12508:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12244:410:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12275:1:14",
														"nodeType": "YulTypedName",
														"src": "12275:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12278:1:14",
														"nodeType": "YulTypedName",
														"src": "12278:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12284:7:14",
														"nodeType": "YulTypedName",
														"src": "12284:7:14",
														"type": ""
													}
												],
												"src": "12244:410:14"
											},
											{
												"body": {
													"nativeSrc": "12713:32:14",
													"nodeType": "YulBlock",
													"src": "12713:32:14",
													"statements": [
														{
															"nativeSrc": "12723:16:14",
															"nodeType": "YulAssignment",
															"src": "12723:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "12734:5:14",
																"nodeType": "YulIdentifier",
																"src": "12734:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12723:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "12723:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "12660:85:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12695:5:14",
														"nodeType": "YulTypedName",
														"src": "12695:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12705:7:14",
														"nodeType": "YulTypedName",
														"src": "12705:7:14",
														"type": ""
													}
												],
												"src": "12660:85:14"
											},
											{
												"body": {
													"nativeSrc": "12795:57:14",
													"nodeType": "YulBlock",
													"src": "12795:57:14",
													"statements": [
														{
															"nativeSrc": "12805:41:14",
															"nodeType": "YulAssignment",
															"src": "12805:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12820:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "12820:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12827:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12827:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12816:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12816:3:14"
																},
																"nativeSrc": "12816:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12816:30:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12805:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "12805:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "12751:101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12777:5:14",
														"nodeType": "YulTypedName",
														"src": "12777:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12787:7:14",
														"nodeType": "YulTypedName",
														"src": "12787:7:14",
														"type": ""
													}
												],
												"src": "12751:101:14"
											},
											{
												"body": {
													"nativeSrc": "12890:28:14",
													"nodeType": "YulBlock",
													"src": "12890:28:14",
													"statements": [
														{
															"nativeSrc": "12900:12:14",
															"nodeType": "YulAssignment",
															"src": "12900:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "12907:5:14",
																"nodeType": "YulIdentifier",
																"src": "12907:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12900:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12900:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "12858:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12876:5:14",
														"nodeType": "YulTypedName",
														"src": "12876:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12886:3:14",
														"nodeType": "YulTypedName",
														"src": "12886:3:14",
														"type": ""
													}
												],
												"src": "12858:60:14"
											},
											{
												"body": {
													"nativeSrc": "12991:89:14",
													"nodeType": "YulBlock",
													"src": "12991:89:14",
													"statements": [
														{
															"nativeSrc": "13001:73:14",
															"nodeType": "YulAssignment",
															"src": "13001:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13066:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13066:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "13040:25:14",
																					"nodeType": "YulIdentifier",
																					"src": "13040:25:14"
																				},
																				"nativeSrc": "13040:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13040:32:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13031:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "13031:8:14"
																		},
																		"nativeSrc": "13031:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13031:42:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "13014:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "13014:16:14"
																},
																"nativeSrc": "13014:60:14",
																"nodeType": "YulFunctionCall",
																"src": "13014:60:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13001:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "13001:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "12924:156:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12971:5:14",
														"nodeType": "YulTypedName",
														"src": "12971:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12981:9:14",
														"nodeType": "YulTypedName",
														"src": "12981:9:14",
														"type": ""
													}
												],
												"src": "12924:156:14"
											},
											{
												"body": {
													"nativeSrc": "13158:73:14",
													"nodeType": "YulBlock",
													"src": "13158:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13175:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13175:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13218:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13218:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "13180:37:14",
																			"nodeType": "YulIdentifier",
																			"src": "13180:37:14"
																		},
																		"nativeSrc": "13180:44:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13180:44:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13168:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13168:6:14"
																},
																"nativeSrc": "13168:57:14",
																"nodeType": "YulFunctionCall",
																"src": "13168:57:14"
															},
															"nativeSrc": "13168:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "13168:57:14"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "13086:145:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13146:5:14",
														"nodeType": "YulTypedName",
														"src": "13146:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13153:3:14",
														"nodeType": "YulTypedName",
														"src": "13153:3:14",
														"type": ""
													}
												],
												"src": "13086:145:14"
											},
											{
												"body": {
													"nativeSrc": "13342:131:14",
													"nodeType": "YulBlock",
													"src": "13342:131:14",
													"statements": [
														{
															"nativeSrc": "13352:26:14",
															"nodeType": "YulAssignment",
															"src": "13352:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13364:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13364:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13375:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13375:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13360:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13360:3:14"
																},
																"nativeSrc": "13360:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13360:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13352:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13352:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13439:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13439:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13452:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13452:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13463:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13463:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13448:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13448:3:14"
																		},
																		"nativeSrc": "13448:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13448:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "13388:50:14",
																	"nodeType": "YulIdentifier",
																	"src": "13388:50:14"
																},
																"nativeSrc": "13388:78:14",
																"nodeType": "YulFunctionCall",
																"src": "13388:78:14"
															},
															"nativeSrc": "13388:78:14",
															"nodeType": "YulExpressionStatement",
															"src": "13388:78:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "13237:236:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13314:9:14",
														"nodeType": "YulTypedName",
														"src": "13314:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13326:6:14",
														"nodeType": "YulTypedName",
														"src": "13326:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13337:4:14",
														"nodeType": "YulTypedName",
														"src": "13337:4:14",
														"type": ""
													}
												],
												"src": "13237:236:14"
											},
											{
												"body": {
													"nativeSrc": "13633:288:14",
													"nodeType": "YulBlock",
													"src": "13633:288:14",
													"statements": [
														{
															"nativeSrc": "13643:26:14",
															"nodeType": "YulAssignment",
															"src": "13643:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13655:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13655:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13666:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13666:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13651:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13651:3:14"
																},
																"nativeSrc": "13651:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13651:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13643:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13643:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13723:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13723:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13736:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13736:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13747:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13747:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13732:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13732:3:14"
																		},
																		"nativeSrc": "13732:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13732:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13679:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13679:43:14"
																},
																"nativeSrc": "13679:71:14",
																"nodeType": "YulFunctionCall",
																"src": "13679:71:14"
															},
															"nativeSrc": "13679:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "13679:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13804:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13804:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13817:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13817:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13828:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13828:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13813:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13813:3:14"
																		},
																		"nativeSrc": "13813:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13813:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13760:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13760:43:14"
																},
																"nativeSrc": "13760:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13760:72:14"
															},
															"nativeSrc": "13760:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13760:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13886:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13886:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13899:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13899:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13910:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13910:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13895:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13895:3:14"
																		},
																		"nativeSrc": "13895:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13895:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13842:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13842:43:14"
																},
																"nativeSrc": "13842:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13842:72:14"
															},
															"nativeSrc": "13842:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13842:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13479:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13589:9:14",
														"nodeType": "YulTypedName",
														"src": "13589:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13601:6:14",
														"nodeType": "YulTypedName",
														"src": "13601:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13609:6:14",
														"nodeType": "YulTypedName",
														"src": "13609:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13617:6:14",
														"nodeType": "YulTypedName",
														"src": "13617:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13628:4:14",
														"nodeType": "YulTypedName",
														"src": "13628:4:14",
														"type": ""
													}
												],
												"src": "13479:442:14"
											},
											{
												"body": {
													"nativeSrc": "13970:79:14",
													"nodeType": "YulBlock",
													"src": "13970:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "14027:16:14",
																"nodeType": "YulBlock",
																"src": "14027:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14036:1:14",
																					"nodeType": "YulLiteral",
																					"src": "14036:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14039:1:14",
																					"nodeType": "YulLiteral",
																					"src": "14039:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14029:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14029:6:14"
																			},
																			"nativeSrc": "14029:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14029:12:14"
																		},
																		"nativeSrc": "14029:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14029:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13993:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13993:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14018:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "14018:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "14000:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "14000:17:14"
																				},
																				"nativeSrc": "14000:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14000:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13990:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13990:2:14"
																		},
																		"nativeSrc": "13990:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13990:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13983:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13983:6:14"
																},
																"nativeSrc": "13983:43:14",
																"nodeType": "YulFunctionCall",
																"src": "13983:43:14"
															},
															"nativeSrc": "13980:63:14",
															"nodeType": "YulIf",
															"src": "13980:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "13927:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13963:5:14",
														"nodeType": "YulTypedName",
														"src": "13963:5:14",
														"type": ""
													}
												],
												"src": "13927:122:14"
											},
											{
												"body": {
													"nativeSrc": "14118:80:14",
													"nodeType": "YulBlock",
													"src": "14118:80:14",
													"statements": [
														{
															"nativeSrc": "14128:22:14",
															"nodeType": "YulAssignment",
															"src": "14128:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14143:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14143:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14137:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14137:5:14"
																},
																"nativeSrc": "14137:13:14",
																"nodeType": "YulFunctionCall",
																"src": "14137:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14128:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14128:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14186:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "14186:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "14159:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "14159:26:14"
																},
																"nativeSrc": "14159:33:14",
																"nodeType": "YulFunctionCall",
																"src": "14159:33:14"
															},
															"nativeSrc": "14159:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "14159:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "14055:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14096:6:14",
														"nodeType": "YulTypedName",
														"src": "14096:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14104:3:14",
														"nodeType": "YulTypedName",
														"src": "14104:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14112:5:14",
														"nodeType": "YulTypedName",
														"src": "14112:5:14",
														"type": ""
													}
												],
												"src": "14055:143:14"
											},
											{
												"body": {
													"nativeSrc": "14281:274:14",
													"nodeType": "YulBlock",
													"src": "14281:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "14327:83:14",
																"nodeType": "YulBlock",
																"src": "14327:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14329:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "14329:77:14"
																			},
																			"nativeSrc": "14329:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14329:79:14"
																		},
																		"nativeSrc": "14329:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14329:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14302:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "14302:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14311:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14311:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14298:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14298:3:14"
																		},
																		"nativeSrc": "14298:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14298:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14323:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14323:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14294:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14294:3:14"
																},
																"nativeSrc": "14294:32:14",
																"nodeType": "YulFunctionCall",
																"src": "14294:32:14"
															},
															"nativeSrc": "14291:119:14",
															"nodeType": "YulIf",
															"src": "14291:119:14"
														},
														{
															"nativeSrc": "14420:128:14",
															"nodeType": "YulBlock",
															"src": "14420:128:14",
															"statements": [
																{
																	"nativeSrc": "14435:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14435:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14449:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14449:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14439:6:14",
																			"nodeType": "YulTypedName",
																			"src": "14439:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14464:74:14",
																	"nodeType": "YulAssignment",
																	"src": "14464:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14510:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "14510:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14521:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "14521:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14506:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14506:3:14"
																				},
																				"nativeSrc": "14506:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14506:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14530:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "14530:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "14474:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "14474:31:14"
																		},
																		"nativeSrc": "14474:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14474:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14464:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "14464:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "14204:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14251:9:14",
														"nodeType": "YulTypedName",
														"src": "14251:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14262:7:14",
														"nodeType": "YulTypedName",
														"src": "14262:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14274:6:14",
														"nodeType": "YulTypedName",
														"src": "14274:6:14",
														"type": ""
													}
												],
												"src": "14204:351:14"
											},
											{
												"body": {
													"nativeSrc": "14605:147:14",
													"nodeType": "YulBlock",
													"src": "14605:147:14",
													"statements": [
														{
															"nativeSrc": "14615:25:14",
															"nodeType": "YulAssignment",
															"src": "14615:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14638:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14638:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14620:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14620:17:14"
																},
																"nativeSrc": "14620:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14620:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14615:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14615:1:14"
																}
															]
														},
														{
															"nativeSrc": "14649:25:14",
															"nodeType": "YulAssignment",
															"src": "14649:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14672:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14672:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14654:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "14654:17:14"
																},
																"nativeSrc": "14654:20:14",
																"nodeType": "YulFunctionCall",
																"src": "14654:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14649:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "14649:1:14"
																}
															]
														},
														{
															"nativeSrc": "14683:16:14",
															"nodeType": "YulAssignment",
															"src": "14683:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14694:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14694:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14697:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14697:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14690:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14690:3:14"
																},
																"nativeSrc": "14690:9:14",
																"nodeType": "YulFunctionCall",
																"src": "14690:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14683:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14683:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14723:22:14",
																"nodeType": "YulBlock",
																"src": "14723:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14725:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14725:16:14"
																			},
																			"nativeSrc": "14725:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14725:18:14"
																		},
																		"nativeSrc": "14725:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14725:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14715:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14715:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14718:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14718:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14712:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14712:2:14"
																},
																"nativeSrc": "14712:10:14",
																"nodeType": "YulFunctionCall",
																"src": "14712:10:14"
															},
															"nativeSrc": "14709:36:14",
															"nodeType": "YulIf",
															"src": "14709:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14561:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14592:1:14",
														"nodeType": "YulTypedName",
														"src": "14592:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14595:1:14",
														"nodeType": "YulTypedName",
														"src": "14595:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14601:3:14",
														"nodeType": "YulTypedName",
														"src": "14601:3:14",
														"type": ""
													}
												],
												"src": "14561:191:14"
											},
											{
												"body": {
													"nativeSrc": "14812:87:14",
													"nodeType": "YulBlock",
													"src": "14812:87:14",
													"statements": [
														{
															"nativeSrc": "14822:11:14",
															"nodeType": "YulAssignment",
															"src": "14822:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "14830:3:14",
																"nodeType": "YulIdentifier",
																"src": "14830:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14822:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14822:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14850:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14850:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14853:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14853:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14843:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14843:6:14"
																},
																"nativeSrc": "14843:14:14",
																"nodeType": "YulFunctionCall",
																"src": "14843:14:14"
															},
															"nativeSrc": "14843:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "14843:14:14"
														},
														{
															"nativeSrc": "14866:26:14",
															"nodeType": "YulAssignment",
															"src": "14866:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14884:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14884:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14887:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14887:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14874:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "14874:9:14"
																},
																"nativeSrc": "14874:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14874:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14866:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14866:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14758:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14799:3:14",
														"nodeType": "YulTypedName",
														"src": "14799:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14807:4:14",
														"nodeType": "YulTypedName",
														"src": "14807:4:14",
														"type": ""
													}
												],
												"src": "14758:141:14"
											},
											{
												"body": {
													"nativeSrc": "14949:49:14",
													"nodeType": "YulBlock",
													"src": "14949:49:14",
													"statements": [
														{
															"nativeSrc": "14959:33:14",
															"nodeType": "YulAssignment",
															"src": "14959:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14977:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "14977:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14984:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14984:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14973:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14973:3:14"
																		},
																		"nativeSrc": "14973:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14973:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14989:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14989:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14969:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14969:3:14"
																},
																"nativeSrc": "14969:23:14",
																"nodeType": "YulFunctionCall",
																"src": "14969:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14959:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14959:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14905:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14932:5:14",
														"nodeType": "YulTypedName",
														"src": "14932:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14942:6:14",
														"nodeType": "YulTypedName",
														"src": "14942:6:14",
														"type": ""
													}
												],
												"src": "14905:93:14"
											},
											{
												"body": {
													"nativeSrc": "15057:54:14",
													"nodeType": "YulBlock",
													"src": "15057:54:14",
													"statements": [
														{
															"nativeSrc": "15067:37:14",
															"nodeType": "YulAssignment",
															"src": "15067:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15092:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15092:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15098:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15098:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15088:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15088:3:14"
																},
																"nativeSrc": "15088:16:14",
																"nodeType": "YulFunctionCall",
																"src": "15088:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15067:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "15067:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15004:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15032:4:14",
														"nodeType": "YulTypedName",
														"src": "15032:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15038:5:14",
														"nodeType": "YulTypedName",
														"src": "15038:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15048:8:14",
														"nodeType": "YulTypedName",
														"src": "15048:8:14",
														"type": ""
													}
												],
												"src": "15004:107:14"
											},
											{
												"body": {
													"nativeSrc": "15193:317:14",
													"nodeType": "YulBlock",
													"src": "15193:317:14",
													"statements": [
														{
															"nativeSrc": "15203:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15203:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "15224:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "15224:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15236:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15236:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15220:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15220:3:14"
																},
																"nativeSrc": "15220:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15220:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15207:9:14",
																	"nodeType": "YulTypedName",
																	"src": "15207:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15247:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15247:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15278:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15278:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15289:66:14",
																		"nodeType": "YulLiteral",
																		"src": "15289:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15259:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "15259:18:14"
																},
																"nativeSrc": "15259:97:14",
																"nodeType": "YulFunctionCall",
																"src": "15259:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15251:4:14",
																	"nodeType": "YulTypedName",
																	"src": "15251:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15365:51:14",
															"nodeType": "YulAssignment",
															"src": "15365:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15396:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15396:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "15407:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "15407:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15377:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "15377:18:14"
																},
																"nativeSrc": "15377:39:14",
																"nodeType": "YulFunctionCall",
																"src": "15377:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15365:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "15365:8:14"
																}
															]
														},
														{
															"nativeSrc": "15425:30:14",
															"nodeType": "YulAssignment",
															"src": "15425:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15438:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15438:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "15449:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15449:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15445:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15445:3:14"
																		},
																		"nativeSrc": "15445:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15445:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15434:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15434:3:14"
																},
																"nativeSrc": "15434:21:14",
																"nodeType": "YulFunctionCall",
																"src": "15434:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15425:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "15425:5:14"
																}
															]
														},
														{
															"nativeSrc": "15464:40:14",
															"nodeType": "YulAssignment",
															"src": "15464:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15477:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15477:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15488:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "15488:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15498:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15498:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15484:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15484:3:14"
																		},
																		"nativeSrc": "15484:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15484:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15474:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15474:2:14"
																},
																"nativeSrc": "15474:30:14",
																"nodeType": "YulFunctionCall",
																"src": "15474:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15464:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15464:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15117:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15154:5:14",
														"nodeType": "YulTypedName",
														"src": "15154:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15161:10:14",
														"nodeType": "YulTypedName",
														"src": "15161:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15173:8:14",
														"nodeType": "YulTypedName",
														"src": "15173:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15186:6:14",
														"nodeType": "YulTypedName",
														"src": "15186:6:14",
														"type": ""
													}
												],
												"src": "15117:393:14"
											},
											{
												"body": {
													"nativeSrc": "15576:82:14",
													"nodeType": "YulBlock",
													"src": "15576:82:14",
													"statements": [
														{
															"nativeSrc": "15586:66:14",
															"nodeType": "YulAssignment",
															"src": "15586:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15644:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "15644:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15626:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "15626:17:14"
																				},
																				"nativeSrc": "15626:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15626:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15617:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "15617:8:14"
																		},
																		"nativeSrc": "15617:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15617:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15599:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "15599:17:14"
																},
																"nativeSrc": "15599:53:14",
																"nodeType": "YulFunctionCall",
																"src": "15599:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15586:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "15586:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15516:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15556:5:14",
														"nodeType": "YulTypedName",
														"src": "15556:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15566:9:14",
														"nodeType": "YulTypedName",
														"src": "15566:9:14",
														"type": ""
													}
												],
												"src": "15516:142:14"
											},
											{
												"body": {
													"nativeSrc": "15711:28:14",
													"nodeType": "YulBlock",
													"src": "15711:28:14",
													"statements": [
														{
															"nativeSrc": "15721:12:14",
															"nodeType": "YulAssignment",
															"src": "15721:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "15728:5:14",
																"nodeType": "YulIdentifier",
																"src": "15728:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15721:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15721:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15664:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15697:5:14",
														"nodeType": "YulTypedName",
														"src": "15697:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15707:3:14",
														"nodeType": "YulTypedName",
														"src": "15707:3:14",
														"type": ""
													}
												],
												"src": "15664:75:14"
											},
											{
												"body": {
													"nativeSrc": "15821:193:14",
													"nodeType": "YulBlock",
													"src": "15821:193:14",
													"statements": [
														{
															"nativeSrc": "15831:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15831:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15886:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "15886:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15855:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "15855:30:14"
																},
																"nativeSrc": "15855:39:14",
																"nodeType": "YulFunctionCall",
																"src": "15855:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15835:16:14",
																	"nodeType": "YulTypedName",
																	"src": "15835:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15910:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15910:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15950:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "15950:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15944:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "15944:5:14"
																				},
																				"nativeSrc": "15944:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15944:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15957:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15957:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15989:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "15989:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15965:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "15965:23:14"
																				},
																				"nativeSrc": "15965:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15965:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15916:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "15916:27:14"
																		},
																		"nativeSrc": "15916:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15916:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15903:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15903:6:14"
																},
																"nativeSrc": "15903:105:14",
																"nodeType": "YulFunctionCall",
																"src": "15903:105:14"
															},
															"nativeSrc": "15903:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "15903:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15745:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15798:4:14",
														"nodeType": "YulTypedName",
														"src": "15798:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15804:6:14",
														"nodeType": "YulTypedName",
														"src": "15804:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15812:7:14",
														"nodeType": "YulTypedName",
														"src": "15812:7:14",
														"type": ""
													}
												],
												"src": "15745:269:14"
											},
											{
												"body": {
													"nativeSrc": "16069:24:14",
													"nodeType": "YulBlock",
													"src": "16069:24:14",
													"statements": [
														{
															"nativeSrc": "16079:8:14",
															"nodeType": "YulAssignment",
															"src": "16079:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "16086:1:14",
																"nodeType": "YulLiteral",
																"src": "16086:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16079:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16079:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16020:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16065:3:14",
														"nodeType": "YulTypedName",
														"src": "16065:3:14",
														"type": ""
													}
												],
												"src": "16020:73:14"
											},
											{
												"body": {
													"nativeSrc": "16152:136:14",
													"nodeType": "YulBlock",
													"src": "16152:136:14",
													"statements": [
														{
															"nativeSrc": "16162:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16162:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "16176:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "16176:30:14"
																},
																"nativeSrc": "16176:32:14",
																"nodeType": "YulFunctionCall",
																"src": "16176:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "16166:6:14",
																	"nodeType": "YulTypedName",
																	"src": "16166:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16261:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16261:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16267:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16267:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "16275:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16275:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "16217:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16217:43:14"
																},
																"nativeSrc": "16217:65:14",
																"nodeType": "YulFunctionCall",
																"src": "16217:65:14"
															},
															"nativeSrc": "16217:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "16217:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16099:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16138:4:14",
														"nodeType": "YulTypedName",
														"src": "16138:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16144:6:14",
														"nodeType": "YulTypedName",
														"src": "16144:6:14",
														"type": ""
													}
												],
												"src": "16099:189:14"
											},
											{
												"body": {
													"nativeSrc": "16344:136:14",
													"nodeType": "YulBlock",
													"src": "16344:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "16411:63:14",
																"nodeType": "YulBlock",
																"src": "16411:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16455:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "16455:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16462:1:14",
																					"nodeType": "YulLiteral",
																					"src": "16462:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "16425:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "16425:29:14"
																			},
																			"nativeSrc": "16425:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16425:39:14"
																		},
																		"nativeSrc": "16425:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16425:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16364:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16364:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16371:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16371:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16361:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16361:2:14"
																},
																"nativeSrc": "16361:14:14",
																"nodeType": "YulFunctionCall",
																"src": "16361:14:14"
															},
															"nativeSrc": "16354:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16376:26:14",
																"nodeType": "YulBlock",
																"src": "16376:26:14",
																"statements": [
																	{
																		"nativeSrc": "16378:22:14",
																		"nodeType": "YulAssignment",
																		"src": "16378:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16391:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "16391:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16398:1:14",
																					"nodeType": "YulLiteral",
																					"src": "16398:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16387:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "16387:3:14"
																			},
																			"nativeSrc": "16387:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16387:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "16378:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "16378:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16358:2:14",
																"nodeType": "YulBlock",
																"src": "16358:2:14",
																"statements": []
															},
															"src": "16354:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "16294:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16332:5:14",
														"nodeType": "YulTypedName",
														"src": "16332:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16339:3:14",
														"nodeType": "YulTypedName",
														"src": "16339:3:14",
														"type": ""
													}
												],
												"src": "16294:186:14"
											},
											{
												"body": {
													"nativeSrc": "16565:464:14",
													"nodeType": "YulBlock",
													"src": "16565:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "16591:431:14",
																"nodeType": "YulBlock",
																"src": "16591:431:14",
																"statements": [
																	{
																		"nativeSrc": "16605:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16605:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16653:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "16653:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16621:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "16621:31:14"
																			},
																			"nativeSrc": "16621:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16621:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16609:8:14",
																				"nodeType": "YulTypedName",
																				"src": "16609:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16672:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16672:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16695:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "16695:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16723:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "16723:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16705:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "16705:17:14"
																					},
																					"nativeSrc": "16705:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16705:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16691:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "16691:3:14"
																			},
																			"nativeSrc": "16691:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16691:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16676:11:14",
																				"nodeType": "YulTypedName",
																				"src": "16676:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16892:27:14",
																			"nodeType": "YulBlock",
																			"src": "16892:27:14",
																			"statements": [
																				{
																					"nativeSrc": "16894:23:14",
																					"nodeType": "YulAssignment",
																					"src": "16894:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16909:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "16909:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16894:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "16894:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16876:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "16876:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16888:2:14",
																					"nodeType": "YulLiteral",
																					"src": "16888:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16873:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "16873:2:14"
																			},
																			"nativeSrc": "16873:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16873:18:14"
																		},
																		"nativeSrc": "16870:49:14",
																		"nodeType": "YulIf",
																		"src": "16870:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16961:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "16961:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16978:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "16978:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17006:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "17006:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16988:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "16988:17:14"
																							},
																							"nativeSrc": "16988:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "16988:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16974:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "16974:3:14"
																					},
																					"nativeSrc": "16974:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16974:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16932:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "16932:28:14"
																			},
																			"nativeSrc": "16932:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16932:80:14"
																		},
																		"nativeSrc": "16932:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16932:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16582:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16582:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16587:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16587:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16579:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16579:2:14"
																},
																"nativeSrc": "16579:11:14",
																"nodeType": "YulFunctionCall",
																"src": "16579:11:14"
															},
															"nativeSrc": "16576:446:14",
															"nodeType": "YulIf",
															"src": "16576:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "16486:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "16541:5:14",
														"nodeType": "YulTypedName",
														"src": "16541:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16548:3:14",
														"nodeType": "YulTypedName",
														"src": "16548:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "16553:10:14",
														"nodeType": "YulTypedName",
														"src": "16553:10:14",
														"type": ""
													}
												],
												"src": "16486:543:14"
											},
											{
												"body": {
													"nativeSrc": "17098:54:14",
													"nodeType": "YulBlock",
													"src": "17098:54:14",
													"statements": [
														{
															"nativeSrc": "17108:37:14",
															"nodeType": "YulAssignment",
															"src": "17108:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17133:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17133:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17139:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "17139:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17129:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17129:3:14"
																},
																"nativeSrc": "17129:16:14",
																"nodeType": "YulFunctionCall",
																"src": "17129:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17108:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "17108:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17035:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17073:4:14",
														"nodeType": "YulTypedName",
														"src": "17073:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17079:5:14",
														"nodeType": "YulTypedName",
														"src": "17079:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17089:8:14",
														"nodeType": "YulTypedName",
														"src": "17089:8:14",
														"type": ""
													}
												],
												"src": "17035:117:14"
											},
											{
												"body": {
													"nativeSrc": "17209:118:14",
													"nodeType": "YulBlock",
													"src": "17209:118:14",
													"statements": [
														{
															"nativeSrc": "17219:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17219:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17268:1:14",
																						"nodeType": "YulLiteral",
																						"src": "17268:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "17271:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "17271:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "17264:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17264:3:14"
																				},
																				"nativeSrc": "17264:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17264:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17283:1:14",
																						"nodeType": "YulLiteral",
																						"src": "17283:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "17279:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17279:3:14"
																				},
																				"nativeSrc": "17279:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17279:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "17235:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "17235:28:14"
																		},
																		"nativeSrc": "17235:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17235:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "17231:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17231:3:14"
																},
																"nativeSrc": "17231:56:14",
																"nodeType": "YulFunctionCall",
																"src": "17231:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17223:4:14",
																	"nodeType": "YulTypedName",
																	"src": "17223:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17296:25:14",
															"nodeType": "YulAssignment",
															"src": "17296:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17310:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17310:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "17316:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17316:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17306:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17306:3:14"
																},
																"nativeSrc": "17306:15:14",
																"nodeType": "YulFunctionCall",
																"src": "17306:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17296:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17296:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "17158:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17186:4:14",
														"nodeType": "YulTypedName",
														"src": "17186:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "17192:5:14",
														"nodeType": "YulTypedName",
														"src": "17192:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17202:6:14",
														"nodeType": "YulTypedName",
														"src": "17202:6:14",
														"type": ""
													}
												],
												"src": "17158:169:14"
											},
											{
												"body": {
													"nativeSrc": "17413:214:14",
													"nodeType": "YulBlock",
													"src": "17413:214:14",
													"statements": [
														{
															"nativeSrc": "17546:37:14",
															"nodeType": "YulAssignment",
															"src": "17546:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17573:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17573:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17579:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17579:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "17554:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "17554:18:14"
																},
																"nativeSrc": "17554:29:14",
																"nodeType": "YulFunctionCall",
																"src": "17554:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17546:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17546:4:14"
																}
															]
														},
														{
															"nativeSrc": "17592:29:14",
															"nodeType": "YulAssignment",
															"src": "17592:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17603:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "17603:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17613:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17613:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17616:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "17616:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17609:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17609:3:14"
																		},
																		"nativeSrc": "17609:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17609:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17600:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "17600:2:14"
																},
																"nativeSrc": "17600:21:14",
																"nodeType": "YulFunctionCall",
																"src": "17600:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17592:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17592:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "17332:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17394:4:14",
														"nodeType": "YulTypedName",
														"src": "17394:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17400:3:14",
														"nodeType": "YulTypedName",
														"src": "17400:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "17408:4:14",
														"nodeType": "YulTypedName",
														"src": "17408:4:14",
														"type": ""
													}
												],
												"src": "17332:295:14"
											},
											{
												"body": {
													"nativeSrc": "17724:1303:14",
													"nodeType": "YulBlock",
													"src": "17724:1303:14",
													"statements": [
														{
															"nativeSrc": "17735:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17735:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17782:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17782:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17749:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "17749:32:14"
																},
																"nativeSrc": "17749:37:14",
																"nodeType": "YulFunctionCall",
																"src": "17749:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17739:6:14",
																	"nodeType": "YulTypedName",
																	"src": "17739:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17871:22:14",
																"nodeType": "YulBlock",
																"src": "17871:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17873:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "17873:16:14"
																			},
																			"nativeSrc": "17873:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17873:18:14"
																		},
																		"nativeSrc": "17873:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "17873:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17843:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17843:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17851:18:14",
																		"nodeType": "YulLiteral",
																		"src": "17851:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17840:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "17840:2:14"
																},
																"nativeSrc": "17840:30:14",
																"nodeType": "YulFunctionCall",
																"src": "17840:30:14"
															},
															"nativeSrc": "17837:56:14",
															"nodeType": "YulIf",
															"src": "17837:56:14"
														},
														{
															"nativeSrc": "17903:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17903:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17949:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "17949:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17943:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "17943:5:14"
																		},
																		"nativeSrc": "17943:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17943:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17917:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "17917:25:14"
																},
																"nativeSrc": "17917:38:14",
																"nodeType": "YulFunctionCall",
																"src": "17917:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17907:6:14",
																	"nodeType": "YulTypedName",
																	"src": "17907:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18048:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18048:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18054:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18054:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18062:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18062:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18002:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "18002:45:14"
																},
																"nativeSrc": "18002:67:14",
																"nodeType": "YulFunctionCall",
																"src": "18002:67:14"
															},
															"nativeSrc": "18002:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "18002:67:14"
														},
														{
															"nativeSrc": "18079:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "18079:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "18096:1:14",
																"nodeType": "YulLiteral",
																"src": "18096:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18083:9:14",
																	"nodeType": "YulTypedName",
																	"src": "18083:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18107:17:14",
															"nodeType": "YulAssignment",
															"src": "18107:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "18120:4:14",
																"nodeType": "YulLiteral",
																"src": "18120:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18107:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "18107:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18171:611:14",
																		"nodeType": "YulBlock",
																		"src": "18171:611:14",
																		"statements": [
																			{
																				"nativeSrc": "18185:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18185:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "18204:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "18204:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "18216:4:14",
																									"nodeType": "YulLiteral",
																									"src": "18216:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "18212:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "18212:3:14"
																							},
																							"nativeSrc": "18212:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "18212:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18200:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "18200:3:14"
																					},
																					"nativeSrc": "18200:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18200:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "18189:7:14",
																						"nodeType": "YulTypedName",
																						"src": "18189:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18236:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18236:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18282:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "18282:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "18250:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "18250:31:14"
																					},
																					"nativeSrc": "18250:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18250:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "18240:6:14",
																						"nodeType": "YulTypedName",
																						"src": "18240:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18300:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18300:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18309:1:14",
																					"nodeType": "YulLiteral",
																					"src": "18309:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "18304:1:14",
																						"nodeType": "YulTypedName",
																						"src": "18304:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18368:163:14",
																					"nodeType": "YulBlock",
																					"src": "18368:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18393:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "18393:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "18411:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "18411:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "18416:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "18416:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "18407:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "18407:3:14"
																												},
																												"nativeSrc": "18407:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "18407:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "18401:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "18401:5:14"
																										},
																										"nativeSrc": "18401:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "18401:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18386:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "18386:6:14"
																								},
																								"nativeSrc": "18386:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18386:42:14"
																							},
																							"nativeSrc": "18386:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "18386:42:14"
																						},
																						{
																							"nativeSrc": "18445:24:14",
																							"nodeType": "YulAssignment",
																							"src": "18445:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18459:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "18459:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18467:1:14",
																										"nodeType": "YulLiteral",
																										"src": "18467:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18455:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "18455:3:14"
																								},
																								"nativeSrc": "18455:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18455:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "18445:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "18445:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "18486:31:14",
																							"nodeType": "YulAssignment",
																							"src": "18486:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "18503:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "18503:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18514:2:14",
																										"nodeType": "YulLiteral",
																										"src": "18514:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18499:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "18499:3:14"
																								},
																								"nativeSrc": "18499:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18499:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "18486:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "18486:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "18334:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "18334:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18337:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "18337:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18331:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "18331:2:14"
																					},
																					"nativeSrc": "18331:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18331:14:14"
																				},
																				"nativeSrc": "18323:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "18346:21:14",
																					"nodeType": "YulBlock",
																					"src": "18346:21:14",
																					"statements": [
																						{
																							"nativeSrc": "18348:17:14",
																							"nodeType": "YulAssignment",
																							"src": "18348:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "18357:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "18357:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18360:4:14",
																										"nodeType": "YulLiteral",
																										"src": "18360:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18353:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "18353:3:14"
																								},
																								"nativeSrc": "18353:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18353:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "18348:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "18348:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "18327:3:14",
																					"nodeType": "YulBlock",
																					"src": "18327:3:14",
																					"statements": []
																				},
																				"src": "18323:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "18567:156:14",
																					"nodeType": "YulBlock",
																					"src": "18567:156:14",
																					"statements": [
																						{
																							"nativeSrc": "18585:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18585:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18612:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "18612:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18617:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "18617:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18608:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "18608:3:14"
																										},
																										"nativeSrc": "18608:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "18608:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18602:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "18602:5:14"
																								},
																								"nativeSrc": "18602:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18602:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18589:9:14",
																									"nodeType": "YulTypedName",
																									"src": "18589:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18652:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "18652:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18679:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "18679:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18694:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "18694:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18702:4:14",
																														"nodeType": "YulLiteral",
																														"src": "18702:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18690:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "18690:3:14"
																												},
																												"nativeSrc": "18690:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "18690:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18660:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "18660:18:14"
																										},
																										"nativeSrc": "18660:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "18660:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18645:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "18645:6:14"
																								},
																								"nativeSrc": "18645:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18645:64:14"
																							},
																							"nativeSrc": "18645:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "18645:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18550:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "18550:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18559:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "18559:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18547:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "18547:2:14"
																					},
																					"nativeSrc": "18547:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18547:19:14"
																				},
																				"nativeSrc": "18544:179:14",
																				"nodeType": "YulIf",
																				"src": "18544:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18743:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "18743:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18757:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "18757:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18765:1:14",
																											"nodeType": "YulLiteral",
																											"src": "18765:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18753:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "18753:3:14"
																									},
																									"nativeSrc": "18753:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "18753:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18769:1:14",
																									"nodeType": "YulLiteral",
																									"src": "18769:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18749:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "18749:3:14"
																							},
																							"nativeSrc": "18749:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "18749:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18736:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "18736:6:14"
																					},
																					"nativeSrc": "18736:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18736:36:14"
																				},
																				"nativeSrc": "18736:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "18736:36:14"
																			}
																		]
																	},
																	"nativeSrc": "18164:618:14",
																	"nodeType": "YulCase",
																	"src": "18164:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18169:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18169:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18799:222:14",
																		"nodeType": "YulBlock",
																		"src": "18799:222:14",
																		"statements": [
																			{
																				"nativeSrc": "18813:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18813:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18826:1:14",
																					"nodeType": "YulLiteral",
																					"src": "18826:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18817:5:14",
																						"nodeType": "YulTypedName",
																						"src": "18817:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18850:67:14",
																					"nodeType": "YulBlock",
																					"src": "18850:67:14",
																					"statements": [
																						{
																							"nativeSrc": "18868:35:14",
																							"nodeType": "YulAssignment",
																							"src": "18868:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18887:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "18887:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18892:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "18892:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18883:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "18883:3:14"
																										},
																										"nativeSrc": "18883:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "18883:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18877:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "18877:5:14"
																								},
																								"nativeSrc": "18877:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "18877:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18868:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "18868:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18843:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "18843:6:14"
																				},
																				"nativeSrc": "18840:77:14",
																				"nodeType": "YulIf",
																				"src": "18840:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18937:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "18937:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18996:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "18996:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19003:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "19003:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18943:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "18943:52:14"
																							},
																							"nativeSrc": "18943:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "18943:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18930:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "18930:6:14"
																					},
																					"nativeSrc": "18930:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18930:81:14"
																				},
																				"nativeSrc": "18930:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "18930:81:14"
																			}
																		]
																	},
																	"nativeSrc": "18791:230:14",
																	"nodeType": "YulCase",
																	"src": "18791:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18144:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18144:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18152:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18152:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18141:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "18141:2:14"
																},
																"nativeSrc": "18141:14:14",
																"nodeType": "YulFunctionCall",
																"src": "18141:14:14"
															},
															"nativeSrc": "18134:887:14",
															"nodeType": "YulSwitch",
															"src": "18134:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "17632:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17713:4:14",
														"nodeType": "YulTypedName",
														"src": "17713:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17719:3:14",
														"nodeType": "YulTypedName",
														"src": "17719:3:14",
														"type": ""
													}
												],
												"src": "17632:1395:14"
											},
											{
												"body": {
													"nativeSrc": "19091:40:14",
													"nodeType": "YulBlock",
													"src": "19091:40:14",
													"statements": [
														{
															"nativeSrc": "19102:22:14",
															"nodeType": "YulAssignment",
															"src": "19102:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19118:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "19118:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19112:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "19112:5:14"
																},
																"nativeSrc": "19112:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19112:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19102:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19102:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "19033:98:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19074:5:14",
														"nodeType": "YulTypedName",
														"src": "19074:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19084:6:14",
														"nodeType": "YulTypedName",
														"src": "19084:6:14",
														"type": ""
													}
												],
												"src": "19033:98:14"
											},
											{
												"body": {
													"nativeSrc": "19250:34:14",
													"nodeType": "YulBlock",
													"src": "19250:34:14",
													"statements": [
														{
															"nativeSrc": "19260:18:14",
															"nodeType": "YulAssignment",
															"src": "19260:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "19275:3:14",
																"nodeType": "YulIdentifier",
																"src": "19275:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19260:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "19260:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19137:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19222:3:14",
														"nodeType": "YulTypedName",
														"src": "19222:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19227:6:14",
														"nodeType": "YulTypedName",
														"src": "19227:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19238:11:14",
														"nodeType": "YulTypedName",
														"src": "19238:11:14",
														"type": ""
													}
												],
												"src": "19137:147:14"
											},
											{
												"body": {
													"nativeSrc": "19398:278:14",
													"nodeType": "YulBlock",
													"src": "19398:278:14",
													"statements": [
														{
															"nativeSrc": "19408:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "19408:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19454:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "19454:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "19422:31:14",
																	"nodeType": "YulIdentifier",
																	"src": "19422:31:14"
																},
																"nativeSrc": "19422:38:14",
																"nodeType": "YulFunctionCall",
																"src": "19422:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19412:6:14",
																	"nodeType": "YulTypedName",
																	"src": "19412:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19469:95:14",
															"nodeType": "YulAssignment",
															"src": "19469:95:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19552:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19552:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19557:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19557:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19476:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "19476:75:14"
																},
																"nativeSrc": "19476:88:14",
																"nodeType": "YulFunctionCall",
																"src": "19476:88:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19469:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19469:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19612:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "19612:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19619:4:14",
																				"nodeType": "YulLiteral",
																				"src": "19619:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19608:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19608:3:14"
																		},
																		"nativeSrc": "19608:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19608:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19626:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19626:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19631:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19631:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19573:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "19573:34:14"
																},
																"nativeSrc": "19573:65:14",
																"nodeType": "YulFunctionCall",
																"src": "19573:65:14"
															},
															"nativeSrc": "19573:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "19573:65:14"
														},
														{
															"nativeSrc": "19647:23:14",
															"nodeType": "YulAssignment",
															"src": "19647:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19658:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19658:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19663:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19663:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19654:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19654:3:14"
																},
																"nativeSrc": "19654:16:14",
																"nodeType": "YulFunctionCall",
																"src": "19654:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19647:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19647:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19290:386:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19379:5:14",
														"nodeType": "YulTypedName",
														"src": "19379:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19386:3:14",
														"nodeType": "YulTypedName",
														"src": "19386:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19394:3:14",
														"nodeType": "YulTypedName",
														"src": "19394:3:14",
														"type": ""
													}
												],
												"src": "19290:386:14"
											},
											{
												"body": {
													"nativeSrc": "19816:137:14",
													"nodeType": "YulBlock",
													"src": "19816:137:14",
													"statements": [
														{
															"nativeSrc": "19827:100:14",
															"nodeType": "YulAssignment",
															"src": "19827:100:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19914:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19914:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19923:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19923:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19834:79:14",
																	"nodeType": "YulIdentifier",
																	"src": "19834:79:14"
																},
																"nativeSrc": "19834:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19834:93:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19827:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19827:3:14"
																}
															]
														},
														{
															"nativeSrc": "19937:10:14",
															"nodeType": "YulAssignment",
															"src": "19937:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "19944:3:14",
																"nodeType": "YulIdentifier",
																"src": "19944:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19937:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19937:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19682:271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19795:3:14",
														"nodeType": "YulTypedName",
														"src": "19795:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19801:6:14",
														"nodeType": "YulTypedName",
														"src": "19801:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19812:3:14",
														"nodeType": "YulTypedName",
														"src": "19812:3:14",
														"type": ""
													}
												],
												"src": "19682:271:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 3002
									},
									{
										"length": 32,
										"start": 3087
									},
									{
										"length": 32,
										"start": 3529
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A2 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D8 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x232 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x57A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x3D5 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x472 PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH2 0x47F DUP2 DUP6 DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x494 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4AB PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH2 0x4B8 DUP6 DUP3 DUP6 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x4C3 DUP6 DUP6 DUP6 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4DF PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x4E8 DUP3 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x4F2 DUP3 DUP3 PUSH2 0xCA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4FF PUSH2 0xDC7 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x531 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x582 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x58B PUSH0 PUSH2 0xED5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x597 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x5CD PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x1DCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x655 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x638 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x66A PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH2 0x677 DUP2 DUP6 DUP6 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6C4 PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x70C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x73F JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x74D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x845 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D697661546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D56540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x84E DUP7 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x856 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x880 CALLER PUSH2 0x862 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0xA PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x4E20 PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x1028 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x8DA JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8EC PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97A PUSH2 0xE4E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0xED5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA31 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA41 DUP5 DUP5 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAC2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAB3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB38 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB3 DUP4 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC65 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4C PUSH2 0x14B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xCA6 PUSH2 0xE4E JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD11 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD52 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xDB8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC2 DUP4 DUP4 PUSH2 0x1506 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE56 PUSH2 0xA1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE74 PUSH2 0x58D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED3 JUMPI PUSH2 0xE97 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECA SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xEDE PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFFC PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x1006 DUP3 DUP3 PUSH2 0x15B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1012 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0x15F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1026 PUSH2 0x1578 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1098 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10A3 PUSH0 DUP4 DUP4 PUSH2 0x1284 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10B0 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1122 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1192 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x127D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1274 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x128D PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E1 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12D5 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13B3 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x136C JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1363 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13FC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1448 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1678 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x150F DUP3 PUSH2 0x1681 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x156B JUMPI PUSH2 0x1565 DUP3 DUP3 PUSH2 0x174A JUMP JUMPDEST POP PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x1573 PUSH2 0x17CA JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x1806 JUMP JUMPDEST PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15C0 PUSH2 0x1578 JUMP JUMPDEST PUSH0 PUSH2 0x15C9 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15FC PUSH2 0x1578 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0xED5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x16DC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D3 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1708 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1678 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x23B8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x17C0 DUP6 DUP4 DUP4 PUSH2 0x1824 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1804 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x180F PUSH2 0xFCD JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1839 JUMPI PUSH2 0x1834 DUP3 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x18A9 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x185F JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x18A1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x18AA JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x18C3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x192C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1911 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1951 DUP3 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0x195B DUP2 DUP6 PUSH2 0x18FF JUMP JUMPDEST SWAP4 POP PUSH2 0x196B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST PUSH2 0x1974 DUP2 PUSH2 0x1937 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1997 DUP2 DUP5 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D9 DUP3 PUSH2 0x19B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E9 DUP2 PUSH2 0x19CF JUMP JUMPDEST DUP2 EQ PUSH2 0x19F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A04 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1C DUP2 PUSH2 0x1A0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A26 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A37 DUP2 PUSH2 0x1A13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A71 DUP6 DUP3 DUP7 ADD PUSH2 0x1A29 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8F DUP2 PUSH2 0x1A7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AB7 DUP2 PUSH2 0x1A0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AED JUMPI PUSH2 0x1AEC PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFA DUP7 DUP3 DUP8 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B0B DUP7 DUP3 DUP8 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B1C DUP7 DUP3 DUP8 ADD PUSH2 0x1A29 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3B DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B98 DUP3 PUSH2 0x1937 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB6 PUSH2 0x1B62 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC9 PUSH2 0x199F JUMP JUMPDEST SWAP1 POP PUSH2 0x1BD5 DUP3 DUP3 PUSH2 0x1B8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x1B62 JUMP JUMPDEST JUMPDEST PUSH2 0x1BFD DUP3 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2A PUSH2 0x1C25 DUP5 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1BC0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x1B5E JUMP JUMPDEST JUMPDEST PUSH2 0x1C51 DUP5 DUP3 DUP6 PUSH2 0x1C0A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C6D JUMPI PUSH2 0x1C6C PUSH2 0x1B5A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C7D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH2 0x1C9B PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA9 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x19AC JUMP JUMPDEST JUMPDEST PUSH2 0x1CD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF2 DUP2 PUSH2 0x1CE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D33 DUP5 DUP3 DUP6 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x19CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5E PUSH0 DUP4 ADD DUP5 PUSH2 0x1D3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7A JUMPI PUSH2 0x1D79 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D87 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D98 DUP6 DUP3 DUP7 ADD PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DF9 JUMPI PUSH2 0x1DF8 PUSH2 0x1DA2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1E81 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E6C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1E7A DUP6 PUSH2 0x1E2C JUMP JUMPDEST SWAP5 POP PUSH2 0x1E41 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E99 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F54 JUMP JUMPDEST DUP2 PUSH2 0x1EA6 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F54 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EBC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EC6 JUMPI PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1EEF JUMPI PUSH2 0x1EEE PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F54 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F2A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F25 JUMPI PUSH2 0x1F24 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1F37 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E38 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F4E JUMPI PUSH2 0x1F4D PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F65 DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F70 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F9D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAF DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBA DUP4 PUSH2 0x1A0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FC8 DUP2 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FDF JUMPI PUSH2 0x1FDE PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2025 PUSH2 0x2020 PUSH2 0x201B DUP5 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1FEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2035 DUP2 PUSH2 0x200B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204E PUSH0 DUP4 ADD DUP5 PUSH2 0x202C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2067 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x2074 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x2081 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2092 DUP2 PUSH2 0x1CE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x209C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20AD DUP2 PUSH2 0x2089 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C8 JUMPI PUSH2 0x20C7 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D5 DUP5 DUP3 DUP6 ADD PUSH2 0x209F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E8 DUP3 PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP PUSH2 0x20F3 DUP4 PUSH2 0x1A0A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x210B JUMPI PUSH2 0x210A PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x216D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x2177 DUP7 DUP4 PUSH2 0x2132 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21A9 PUSH2 0x21A4 PUSH2 0x219F DUP5 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1A0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C2 DUP4 PUSH2 0x218F JUMP JUMPDEST PUSH2 0x21D6 PUSH2 0x21CE DUP3 PUSH2 0x21B0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x213E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x21EA PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x21F5 DUP2 DUP5 DUP5 PUSH2 0x21B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x220D PUSH0 DUP3 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x225D JUMPI PUSH2 0x222E DUP2 PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x2237 DUP5 PUSH2 0x2123 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2246 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x225A PUSH2 0x2252 DUP6 PUSH2 0x2123 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21FA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x227D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2262 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2295 DUP4 DUP4 PUSH2 0x226E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AE DUP3 PUSH2 0x18F5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x1B62 JUMP JUMPDEST JUMPDEST PUSH2 0x22D1 DUP3 SLOAD PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x22DC DUP3 DUP3 DUP6 PUSH2 0x221C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x230D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22FB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2305 DUP6 DUP3 PUSH2 0x228A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x236C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x231B DUP7 PUSH2 0x2111 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2342 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x231D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x235F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x235B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x226E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2392 DUP3 PUSH2 0x2374 JUMP JUMPDEST PUSH2 0x239C DUP2 DUP6 PUSH2 0x237E JUMP JUMPDEST SWAP4 POP PUSH2 0x23AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23C3 DUP3 DUP5 PUSH2 0x2388 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xAC 0xEA PUSH16 0x6450004465E88AE559F83695E01BB8BC 0x1E PUSH11 0x4E7C8498B6BE3AA086EB64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "392:565:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4191:152;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6251:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4401:171:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;2441:144;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:148:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4767:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;601:236:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5003:195:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3011:144:3;3056:13;3081:22;3106:18;:16;:18::i;:::-;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;5594:13;5610:12;:10;:12::i;:::-;5594:28;;5632:31;5641:5;5648:7;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;:::o;4191:152::-;4243:7;4262:22;4287:18;:16;:18::i;:::-;4262:43;;4322:1;:14;;;4315:21;;;4191:152;:::o;6251:244::-;6338:4;6354:15;6372:12;:10;:12::i;:::-;6354:30;;6394:37;6410:4;6416:7;6425:5;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;:::o;4049:82::-;4098:5;4122:2;4115:9;;4049:82;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:7::1;3800:32:2;;3793:39;;3705:134:::0;:::o;4401:171:3:-;4466:7;4485:22;4510:18;:16;:18::i;:::-;4485:43;;4545:1;:11;;:20;4557:7;4545:20;;;;;;;;;;;;;;;;4538:27;;;4401:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3268:148:3:-;3315:13;3340:22;3365:18;:16;:18::i;:::-;3340:43;;3400:1;:9;;3393:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:148;:::o;4767:178::-;4836:4;4852:13;4868:12;:10;:12::i;:::-;4852:28;;4890:27;4900:5;4907:2;4911:5;4890:9;:27::i;:::-;4934:4;4927:11;;;4767:178;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;601:236:13:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;672:32:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:32::i;:::-;714:28;729:12;714:14;:28::i;:::-;752:24;:22;:24::i;:::-;787:43;793:10;819;:8;:10::i;:::-;813:2;:16;;;;:::i;:::-;805:5;:24;;;;:::i;:::-;787:5;:43::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;601:236:13;:::o;5003:195:3:-;5083:7;5102:22;5127:18;:16;:18::i;:::-;5102:43;;5162:1;:13;;:20;5176:5;5162:20;;;;;;;;;;;;;;;:29;5183:7;5162:29;;;;;;;;;;;;;;;;5155:36;;;5003:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2242:153:3:-;2292:22;2359:20;2349:30;;2242:153;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;10264:128:3:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;12178:17;12158:16;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12293:7;12302:16;12320:5;12266:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12211:130;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12154:310;12082:388;11993:477;;;:::o;6868:300::-;6967:1;6951:18;;:4;:18;;;6947:86;;7019:1;6992:30;;;;;;;;;;;:::i;:::-;;;;;;;;6947:86;7060:1;7046:16;;:2;:16;;;7042:86;;7114:1;7085:32;;;;;;;;;;;:::i;:::-;;;;;;;;7042:86;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;:::-;6868:300;;;:::o;4599:312:2:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;843:112:13:-;2334:13:0;:11;:13::i;:::-;843:112:13;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:7;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2577:147:3:-;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;8996:208:3:-;9085:1;9066:21;;:7;:21;;;9062:91;;9139:1;9110:32;;;;;;;;;;;:::i;:::-;;;;;;;;9062:91;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;:::-;8996:208;;:::o;11224:487::-;11332:22;11357:18;:16;:18::i;:::-;11332:43;;11406:1;11389:19;;:5;:19;;;11385:89;;11460:1;11431:32;;;;;;;;;;;:::i;:::-;;;;;;;;11385:89;11506:1;11487:21;;:7;:21;;;11483:90;;11559:1;11531:31;;;;;;;;;;;:::i;:::-;;;;;;;;11483:90;11614:5;11582:1;:13;;:20;11596:5;11582:20;;;;;;;;;;;;;;;:29;11603:7;11582:29;;;;;;;;;;;;;;;:37;;;;11633:9;11629:76;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;;;:::i;:::-;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7483:1170::-;7568:22;7593:18;:16;:18::i;:::-;7568:43;;7641:1;7625:18;;:4;:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7621:546;;;7815:19;7837:1;:11;;:17;7849:4;7837:17;;;;;;;;;;;;;;;;7815:39;;7886:5;7872:11;:19;7868:115;;;7943:4;7949:11;7962:5;7918:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7868:115;8137:5;8123:11;:19;8103:1;:11;;:17;8115:4;8103:17;;;;;;;;;;;;;;;:39;;;;7801:366;7621:546;8195:1;8181:16;;:2;:16;;;8177:429;;8362:5;8344:1;:14;;;:23;;;;;;;;;;;8177:429;;;8576:5;8557:1;:11;;:15;8569:2;8557:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;;;:::i;:::-;;;;;;;;7558:1095;7483:1170;;;:::o;1957:138:7:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2730:216:3:-;6931:20:1;:18;:20::i;:::-;2842:22:3::1;2867:18;:16;:18::i;:::-;2842:43;;2905:5;2895:1;:7;;:15;;;;;;:::i;:::-;;2932:7;2920:1;:9;;:19;;;;;;:::i;:::-;;2832:114;2730:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1684:190:12:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:7:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:11:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:7:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:11:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:99:14;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:117::-;4962:1;4959;4952:12;4976:117;5085:1;5082;5075:12;5099:180;5147:77;5144:1;5137:88;5244:4;5241:1;5234:15;5268:4;5265:1;5258:15;5285:281;5368:27;5390:4;5368:27;:::i;:::-;5360:6;5356:40;5498:6;5486:10;5483:22;5462:18;5450:10;5447:34;5444:62;5441:88;;;5509:18;;:::i;:::-;5441:88;5549:10;5545:2;5538:22;5328:238;5285:281;;:::o;5572:129::-;5606:6;5633:20;;:::i;:::-;5623:30;;5662:33;5690:4;5682:6;5662:33;:::i;:::-;5572:129;;;:::o;5707:307::-;5768:4;5858:18;5850:6;5847:30;5844:56;;;5880:18;;:::i;:::-;5844:56;5918:29;5940:6;5918:29;:::i;:::-;5910:37;;6002:4;5996;5992:15;5984:23;;5707:307;;;:::o;6020:146::-;6117:6;6112:3;6107;6094:30;6158:1;6149:6;6144:3;6140:16;6133:27;6020:146;;;:::o;6172:423::-;6249:5;6274:65;6290:48;6331:6;6290:48;:::i;:::-;6274:65;:::i;:::-;6265:74;;6362:6;6355:5;6348:21;6400:4;6393:5;6389:16;6438:3;6429:6;6424:3;6420:16;6417:25;6414:112;;;6445:79;;:::i;:::-;6414:112;6535:54;6582:6;6577:3;6572;6535:54;:::i;:::-;6255:340;6172:423;;;;;:::o;6614:338::-;6669:5;6718:3;6711:4;6703:6;6699:17;6695:27;6685:122;;6726:79;;:::i;:::-;6685:122;6843:6;6830:20;6868:78;6942:3;6934:6;6927:4;6919:6;6915:17;6868:78;:::i;:::-;6859:87;;6675:277;6614:338;;;;:::o;6958:652::-;7035:6;7043;7092:2;7080:9;7071:7;7067:23;7063:32;7060:119;;;7098:79;;:::i;:::-;7060:119;7218:1;7243:53;7288:7;7279:6;7268:9;7264:22;7243:53;:::i;:::-;7233:63;;7189:117;7373:2;7362:9;7358:18;7345:32;7404:18;7396:6;7393:30;7390:117;;;7426:79;;:::i;:::-;7390:117;7531:62;7585:7;7576:6;7565:9;7561:22;7531:62;:::i;:::-;7521:72;;7316:287;6958:652;;;;;:::o;7616:77::-;7653:7;7682:5;7671:16;;7616:77;;;:::o;7699:118::-;7786:24;7804:5;7786:24;:::i;:::-;7781:3;7774:37;7699:118;;:::o;7823:222::-;7916:4;7954:2;7943:9;7939:18;7931:26;;7967:71;8035:1;8024:9;8020:17;8011:6;7967:71;:::i;:::-;7823:222;;;;:::o;8051:329::-;8110:6;8159:2;8147:9;8138:7;8134:23;8130:32;8127:119;;;8165:79;;:::i;:::-;8127:119;8285:1;8310:53;8355:7;8346:6;8335:9;8331:22;8310:53;:::i;:::-;8300:63;;8256:117;8051:329;;;;:::o;8386:118::-;8473:24;8491:5;8473:24;:::i;:::-;8468:3;8461:37;8386:118;;:::o;8510:222::-;8603:4;8641:2;8630:9;8626:18;8618:26;;8654:71;8722:1;8711:9;8707:17;8698:6;8654:71;:::i;:::-;8510:222;;;;:::o;8738:474::-;8806:6;8814;8863:2;8851:9;8842:7;8838:23;8834:32;8831:119;;;8869:79;;:::i;:::-;8831:119;8989:1;9014:53;9059:7;9050:6;9039:9;9035:22;9014:53;:::i;:::-;9004:63;;8960:117;9116:2;9142:53;9187:7;9178:6;9167:9;9163:22;9142:53;:::i;:::-;9132:63;;9087:118;8738:474;;;;;:::o;9218:180::-;9266:77;9263:1;9256:88;9363:4;9360:1;9353:15;9387:4;9384:1;9377:15;9404:320;9448:6;9485:1;9479:4;9475:12;9465:22;;9532:1;9526:4;9522:12;9553:18;9543:81;;9609:4;9601:6;9597:17;9587:27;;9543:81;9671:2;9663:6;9660:14;9640:18;9637:38;9634:84;;9690:18;;:::i;:::-;9634:84;9455:269;9404:320;;;:::o;9730:180::-;9778:77;9775:1;9768:88;9875:4;9872:1;9865:15;9899:4;9896:1;9889:15;9916:102;9958:8;10005:5;10002:1;9998:13;9977:34;;9916:102;;;:::o;10024:848::-;10085:5;10092:4;10116:6;10107:15;;10140:5;10131:14;;10154:712;10175:1;10165:8;10162:15;10154:712;;;10270:4;10265:3;10261:14;10255:4;10252:24;10249:50;;;10279:18;;:::i;:::-;10249:50;10329:1;10319:8;10315:16;10312:451;;;10744:4;10737:5;10733:16;10724:25;;10312:451;10794:4;10788;10784:15;10776:23;;10824:32;10847:8;10824:32;:::i;:::-;10812:44;;10154:712;;;10024:848;;;;;;;:::o;10878:1073::-;10932:5;11123:8;11113:40;;11144:1;11135:10;;11146:5;;11113:40;11172:4;11162:36;;11189:1;11180:10;;11191:5;;11162:36;11258:4;11306:1;11301:27;;;;11342:1;11337:191;;;;11251:277;;11301:27;11319:1;11310:10;;11321:5;;;11337:191;11382:3;11372:8;11369:17;11366:43;;;11389:18;;:::i;:::-;11366:43;11438:8;11435:1;11431:16;11422:25;;11473:3;11466:5;11463:14;11460:40;;;11480:18;;:::i;:::-;11460:40;11513:5;;;11251:277;;11637:2;11627:8;11624:16;11618:3;11612:4;11609:13;11605:36;11587:2;11577:8;11574:16;11569:2;11563:4;11560:12;11556:35;11540:111;11537:246;;;11693:8;11687:4;11683:19;11674:28;;11728:3;11721:5;11718:14;11715:40;;;11735:18;;:::i;:::-;11715:40;11768:5;;11537:246;11808:42;11846:3;11836:8;11830:4;11827:1;11808:42;:::i;:::-;11793:57;;;;11882:4;11877:3;11873:14;11866:5;11863:25;11860:51;;;11891:18;;:::i;:::-;11860:51;11940:4;11933:5;11929:16;11920:25;;10878:1073;;;;;;:::o;11957:281::-;12015:5;12039:23;12057:4;12039:23;:::i;:::-;12031:31;;12083:25;12099:8;12083:25;:::i;:::-;12071:37;;12127:104;12164:66;12154:8;12148:4;12127:104;:::i;:::-;12118:113;;11957:281;;;;:::o;12244:410::-;12284:7;12307:20;12325:1;12307:20;:::i;:::-;12302:25;;12341:20;12359:1;12341:20;:::i;:::-;12336:25;;12396:1;12393;12389:9;12418:30;12436:11;12418:30;:::i;:::-;12407:41;;12597:1;12588:7;12584:15;12581:1;12578:22;12558:1;12551:9;12531:83;12508:139;;12627:18;;:::i;:::-;12508:139;12292:362;12244:410;;;;:::o;12660:85::-;12705:7;12734:5;12723:16;;12660:85;;;:::o;12751:101::-;12787:7;12827:18;12820:5;12816:30;12805:41;;12751:101;;;:::o;12858:60::-;12886:3;12907:5;12900:12;;12858:60;;;:::o;12924:156::-;12981:9;13014:60;13031:42;13040:32;13066:5;13040:32;:::i;:::-;13031:42;:::i;:::-;13014:60;:::i;:::-;13001:73;;12924:156;;;:::o;13086:145::-;13180:44;13218:5;13180:44;:::i;:::-;13175:3;13168:57;13086:145;;:::o;13237:236::-;13337:4;13375:2;13364:9;13360:18;13352:26;;13388:78;13463:1;13452:9;13448:17;13439:6;13388:78;:::i;:::-;13237:236;;;;:::o;13479:442::-;13628:4;13666:2;13655:9;13651:18;13643:26;;13679:71;13747:1;13736:9;13732:17;13723:6;13679:71;:::i;:::-;13760:72;13828:2;13817:9;13813:18;13804:6;13760:72;:::i;:::-;13842;13910:2;13899:9;13895:18;13886:6;13842:72;:::i;:::-;13479:442;;;;;;:::o;13927:122::-;14000:24;14018:5;14000:24;:::i;:::-;13993:5;13990:35;13980:63;;14039:1;14036;14029:12;13980:63;13927:122;:::o;14055:143::-;14112:5;14143:6;14137:13;14128:22;;14159:33;14186:5;14159:33;:::i;:::-;14055:143;;;;:::o;14204:351::-;14274:6;14323:2;14311:9;14302:7;14298:23;14294:32;14291:119;;;14329:79;;:::i;:::-;14291:119;14449:1;14474:64;14530:7;14521:6;14510:9;14506:22;14474:64;:::i;:::-;14464:74;;14420:128;14204:351;;;;:::o;14561:191::-;14601:3;14620:20;14638:1;14620:20;:::i;:::-;14615:25;;14654:20;14672:1;14654:20;:::i;:::-;14649:25;;14697:1;14694;14690:9;14683:16;;14718:3;14715:1;14712:10;14709:36;;;14725:18;;:::i;:::-;14709:36;14561:191;;;;:::o;14758:141::-;14807:4;14830:3;14822:11;;14853:3;14850:1;14843:14;14887:4;14884:1;14874:18;14866:26;;14758:141;;;:::o;14905:93::-;14942:6;14989:2;14984;14977:5;14973:14;14969:23;14959:33;;14905:93;;;:::o;15004:107::-;15048:8;15098:5;15092:4;15088:16;15067:37;;15004:107;;;;:::o;15117:393::-;15186:6;15236:1;15224:10;15220:18;15259:97;15289:66;15278:9;15259:97;:::i;:::-;15377:39;15407:8;15396:9;15377:39;:::i;:::-;15365:51;;15449:4;15445:9;15438:5;15434:21;15425:30;;15498:4;15488:8;15484:19;15477:5;15474:30;15464:40;;15193:317;;15117:393;;;;;:::o;15516:142::-;15566:9;15599:53;15617:34;15626:24;15644:5;15626:24;:::i;:::-;15617:34;:::i;:::-;15599:53;:::i;:::-;15586:66;;15516:142;;;:::o;15664:75::-;15707:3;15728:5;15721:12;;15664:75;;;:::o;15745:269::-;15855:39;15886:7;15855:39;:::i;:::-;15916:91;15965:41;15989:16;15965:41;:::i;:::-;15957:6;15950:4;15944:11;15916:91;:::i;:::-;15910:4;15903:105;15821:193;15745:269;;;:::o;16020:73::-;16065:3;16020:73;:::o;16099:189::-;16176:32;;:::i;:::-;16217:65;16275:6;16267;16261:4;16217:65;:::i;:::-;16152:136;16099:189;;:::o;16294:186::-;16354:120;16371:3;16364:5;16361:14;16354:120;;;16425:39;16462:1;16455:5;16425:39;:::i;:::-;16398:1;16391:5;16387:13;16378:22;;16354:120;;;16294:186;;:::o;16486:543::-;16587:2;16582:3;16579:11;16576:446;;;16621:38;16653:5;16621:38;:::i;:::-;16705:29;16723:10;16705:29;:::i;:::-;16695:8;16691:44;16888:2;16876:10;16873:18;16870:49;;;16909:8;16894:23;;16870:49;16932:80;16988:22;17006:3;16988:22;:::i;:::-;16978:8;16974:37;16961:11;16932:80;:::i;:::-;16591:431;;16576:446;16486:543;;;:::o;17035:117::-;17089:8;17139:5;17133:4;17129:16;17108:37;;17035:117;;;;:::o;17158:169::-;17202:6;17235:51;17283:1;17279:6;17271:5;17268:1;17264:13;17235:51;:::i;:::-;17231:56;17316:4;17310;17306:15;17296:25;;17209:118;17158:169;;;;:::o;17332:295::-;17408:4;17554:29;17579:3;17573:4;17554:29;:::i;:::-;17546:37;;17616:3;17613:1;17609:11;17603:4;17600:21;17592:29;;17332:295;;;;:::o;17632:1395::-;17749:37;17782:3;17749:37;:::i;:::-;17851:18;17843:6;17840:30;17837:56;;;17873:18;;:::i;:::-;17837:56;17917:38;17949:4;17943:11;17917:38;:::i;:::-;18002:67;18062:6;18054;18048:4;18002:67;:::i;:::-;18096:1;18120:4;18107:17;;18152:2;18144:6;18141:14;18169:1;18164:618;;;;18826:1;18843:6;18840:77;;;18892:9;18887:3;18883:19;18877:26;18868:35;;18840:77;18943:67;19003:6;18996:5;18943:67;:::i;:::-;18937:4;18930:81;18799:222;18134:887;;18164:618;18216:4;18212:9;18204:6;18200:22;18250:37;18282:4;18250:37;:::i;:::-;18309:1;18323:208;18337:7;18334:1;18331:14;18323:208;;;18416:9;18411:3;18407:19;18401:26;18393:6;18386:42;18467:1;18459:6;18455:14;18445:24;;18514:2;18503:9;18499:18;18486:31;;18360:4;18357:1;18353:12;18348:17;;18323:208;;;18559:6;18550:7;18547:19;18544:179;;;18617:9;18612:3;18608:19;18602:26;18660:48;18702:4;18694:6;18690:17;18679:9;18660:48;:::i;:::-;18652:6;18645:64;18567:156;18544:179;18769:1;18765;18757:6;18753:14;18749:22;18743:4;18736:36;18171:611;;;18134:887;;17724:1303;;;17632:1395;;:::o;19033:98::-;19084:6;19118:5;19112:12;19102:22;;19033:98;;;:::o;19137:147::-;19238:11;19275:3;19260:18;;19137:147;;;;:::o;19290:386::-;19394:3;19422:38;19454:5;19422:38;:::i;:::-;19476:88;19557:6;19552:3;19476:88;:::i;:::-;19469:95;;19573:65;19631:6;19626:3;19619:4;19612:5;19608:16;19573:65;:::i;:::-;19663:6;19658:3;19654:16;19647:23;;19398:278;19290:386;;;;:::o;19682:271::-;19812:3;19834:93;19923:3;19914:6;19834:93;:::i;:::-;19827:100;;19944:3;19937:10;;19682:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1844000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2970",
								"decimals()": "361",
								"initialize(address)": "infinite",
								"name()": "infinite",
								"owner()": "2612",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2553",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 542,
									"end": 595,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 542,
									"end": 595,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 542,
									"end": 595,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 542,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 542,
									"end": 595,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 542,
									"end": 595,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 542,
									"end": 595,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 542,
									"end": 595,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 542,
									"end": 595,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 542,
									"end": 595,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 542,
									"end": 595,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 566,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 566,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 566,
									"end": 586,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 566,
									"end": 586,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 566,
									"end": 588,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 566,
									"end": 588,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 566,
									"end": 588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 566,
									"end": 588,
									"name": "tag",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 566,
									"end": 588,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 392,
									"end": 957,
									"name": "tag",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "468"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 957,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e0acea6f6450004465e88ae559f83695e01bb8bc1e6a4e7c8498b6be3aa086eb64736f6c63430008160033",
									".code": [
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "AD3CB1CC"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "AD3CB1CC"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "C4D66DE8"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "4F1EF286"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "52D1902D"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 957,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 601,
											"end": 837,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 601,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 601,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3106,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5610,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5610,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5662,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5632,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5684,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4287,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6338,
											"end": 6342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6372,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6372,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6410,
											"end": 6414,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6416,
											"end": 6423,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6425,
											"end": 6430,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6394,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6451,
											"end": 6455,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6457,
											"end": 6459,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6441,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6484,
											"end": 6488,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4510,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4510,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3340,
											"end": 3362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3365,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4836,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4865,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4868,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4868,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4900,
											"end": 4905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4916,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4890,
											"end": 4917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4938,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 837,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 601,
											"end": 837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4D697661546F6B656E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4D56540000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 672,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 672,
											"end": 704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 672,
											"end": 704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 729,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 714,
											"end": 728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 752,
											"end": 776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 752,
											"end": 774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 752,
											"end": 776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 752,
											"end": 776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 752,
											"end": 776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 787,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 793,
											"end": 803,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 819,
											"end": 829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 819,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 819,
											"end": 829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 819,
											"end": 829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 819,
											"end": 829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 813,
											"end": 815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 813,
											"end": 829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 813,
											"end": 829,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 813,
											"end": 829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 813,
											"end": 829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 813,
											"end": 829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 813,
											"end": 829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 813,
											"end": 829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 805,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4E20"
										},
										{
											"begin": 805,
											"end": 829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 805,
											"end": 829,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 805,
											"end": 829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 805,
											"end": 829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 805,
											"end": 829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 805,
											"end": 829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 805,
											"end": 829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 787,
											"end": 792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 787,
											"end": 830,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 787,
											"end": 830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 787,
											"end": 830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 601,
											"end": 837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 601,
											"end": 837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5083,
											"end": 5090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5127,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5127,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5181,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5190,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10357,
											"end": 10362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10364,
											"end": 10371,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10348,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 10348,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12092,
											"end": 12116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12119,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 12129,
											"end": 12134,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12136,
											"end": 12143,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 12119,
											"end": 12144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12119,
											"end": 12144,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 12119,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12178,
											"end": 12195,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12158,
											"end": 12174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12158,
											"end": 12195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12234,
											"end": 12239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12215,
											"end": 12231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12215,
											"end": 12239,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12293,
											"end": 12300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12302,
											"end": 12318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12320,
											"end": 12325,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 12266,
											"end": 12326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12326,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 12211,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12382,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12391,
											"end": 12396,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12398,
											"end": 12405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12426,
											"end": 12431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12407,
											"end": 12423,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12407,
											"end": 12431,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12433,
											"end": 12438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 12382,
											"end": 12439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12382,
											"end": 12439,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12382,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 12154,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12082,
											"end": 12470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6955,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6992,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7114,
											"end": 7115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7085,
											"end": 7117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7145,
											"end": 7149,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7160,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7137,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 4749,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 4749,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 843,
											"end": 955,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 843,
											"end": 955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 843,
											"end": 955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6555,
											"end": 6572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6513,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6312,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2702,
											"end": 2707,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2679,
											"end": 2717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 9110,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 9178,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9189,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9191,
											"end": 9196,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 9162,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11332,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 11357,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 11357,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11332,
											"end": 11375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11332,
											"end": 11375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11406,
											"end": 11407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11389,
											"end": 11394,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 11431,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11506,
											"end": 11507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11494,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 11531,
											"end": 11562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11614,
											"end": 11619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11595,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11582,
											"end": 11595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11601,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11603,
											"end": 11610,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11633,
											"end": 11642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11679,
											"end": 11686,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11688,
											"end": 11693,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 11663,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7568,
											"end": 7590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7593,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7625,
											"end": 7629,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7761,
											"end": 7784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7891,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7949,
											"end": 7960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7962,
											"end": 7967,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 7918,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8137,
											"end": 8142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 8167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8576,
											"end": 8581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8569,
											"end": 8571,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8640,
											"end": 8645,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 8621,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2035,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 2867,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2867,
											"end": 2885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 2895,
											"end": 2910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 2920,
											"end": 2939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1684,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2320,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2387,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 11,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1349,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4970,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 4853,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4962,
											"end": 4963,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4952,
											"end": 4964,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4976,
											"end": 5093,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 4976,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5099,
											"end": 5279,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 5099,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5147,
											"end": 5224,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5144,
											"end": 5145,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5244,
											"end": 5248,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5234,
											"end": 5249,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5268,
											"end": 5272,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5273,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 5368,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5356,
											"end": 5396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5483,
											"end": 5505,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5450,
											"end": 5460,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5447,
											"end": 5481,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5444,
											"end": 5506,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 5509,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 5441,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5549,
											"end": 5559,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5560,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5606,
											"end": 5612,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 5633,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 5662,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 5662,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5572,
											"end": 5701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5572,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 6014,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 5707,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5768,
											"end": 5772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5847,
											"end": 5877,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5900,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 5844,
											"end": 5900,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 5880,
											"end": 5898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5900,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 5844,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5918,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 5940,
											"end": 5946,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5918,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 5918,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5918,
											"end": 5947,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 5918,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5910,
											"end": 5947,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5910,
											"end": 5947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5996,
											"end": 6000,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5992,
											"end": 6007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5984,
											"end": 6007,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5984,
											"end": 6007,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 6014,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 6014,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 6014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6166,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 6020,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6117,
											"end": 6123,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6112,
											"end": 6115,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6107,
											"end": 6110,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6159,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6144,
											"end": 6147,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6160,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6595,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 6172,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6290,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6290,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 6290,
											"end": 6338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6290,
											"end": 6338,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6290,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6274,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 6274,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6274,
											"end": 6339,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6274,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6265,
											"end": 6339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6265,
											"end": 6339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6362,
											"end": 6368,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6355,
											"end": 6360,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6348,
											"end": 6369,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6398,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6441,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6424,
											"end": 6427,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6420,
											"end": 6436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6417,
											"end": 6442,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6445,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 6445,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 6445,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6445,
											"end": 6524,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 6445,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6535,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6577,
											"end": 6580,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6572,
											"end": 6575,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6535,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 6535,
											"end": 6589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6535,
											"end": 6589,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6535,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6255,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6595,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6595,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6952,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 6614,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6669,
											"end": 6674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6721,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6703,
											"end": 6709,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6699,
											"end": 6716,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6695,
											"end": 6722,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6685,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 6685,
											"end": 6807,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6726,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 6726,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 6726,
											"end": 6805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6726,
											"end": 6805,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 6726,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6685,
											"end": 6807,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 6685,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6843,
											"end": 6849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6830,
											"end": 6850,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6934,
											"end": 6940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6927,
											"end": 6931,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6919,
											"end": 6925,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6915,
											"end": 6932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 6868,
											"end": 6946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6946,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 6868,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6859,
											"end": 6946,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6859,
											"end": 6946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6675,
											"end": 6952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6952,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6952,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 7610,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 6958,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7041,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7049,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7080,
											"end": 7089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7071,
											"end": 7078,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7090,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7063,
											"end": 7095,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 7098,
											"end": 7177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7098,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7060,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7285,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7268,
											"end": 7277,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7264,
											"end": 7286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 7243,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 7243,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7233,
											"end": 7296,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7233,
											"end": 7296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7189,
											"end": 7306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7373,
											"end": 7375,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7362,
											"end": 7371,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7358,
											"end": 7376,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7345,
											"end": 7377,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7404,
											"end": 7422,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7396,
											"end": 7402,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7393,
											"end": 7423,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7507,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 7390,
											"end": 7507,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7426,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 7426,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 7426,
											"end": 7505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7426,
											"end": 7505,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 7426,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7507,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 7390,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7531,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 7585,
											"end": 7592,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7576,
											"end": 7582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7574,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7561,
											"end": 7583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7531,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 7531,
											"end": 7593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7531,
											"end": 7593,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 7531,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7521,
											"end": 7593,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7521,
											"end": 7593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7316,
											"end": 7603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 7610,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 7610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 7610,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 7610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 7610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 7610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 7693,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 7616,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7653,
											"end": 7660,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7687,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7671,
											"end": 7687,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7671,
											"end": 7687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 7693,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 7693,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 7693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 7817,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 7699,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7786,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 7804,
											"end": 7809,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7786,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 7786,
											"end": 7810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7786,
											"end": 7810,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 7786,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7781,
											"end": 7784,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7774,
											"end": 7811,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 7817,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 7817,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 7817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 8045,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 7823,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 7920,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7956,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7943,
											"end": 7952,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 7957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 7957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7967,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 8035,
											"end": 8036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8024,
											"end": 8033,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8020,
											"end": 8037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8011,
											"end": 8017,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7967,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 7967,
											"end": 8038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7967,
											"end": 8038,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 7967,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 8045,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 8045,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 8045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 8045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 8045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8051,
											"end": 8380,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 8051,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8110,
											"end": 8116,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8147,
											"end": 8156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8138,
											"end": 8145,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8134,
											"end": 8157,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8130,
											"end": 8162,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 8165,
											"end": 8244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8355,
											"end": 8362,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8346,
											"end": 8352,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8335,
											"end": 8344,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8353,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 8310,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8300,
											"end": 8363,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8300,
											"end": 8363,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8256,
											"end": 8373,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8051,
											"end": 8380,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8051,
											"end": 8380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8051,
											"end": 8380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8051,
											"end": 8380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8051,
											"end": 8380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8504,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 8386,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8473,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8491,
											"end": 8496,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8473,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 8473,
											"end": 8497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8473,
											"end": 8497,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8473,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8468,
											"end": 8471,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8498,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8510,
											"end": 8732,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 8510,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8603,
											"end": 8607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8643,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8630,
											"end": 8639,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8626,
											"end": 8644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8618,
											"end": 8644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8618,
											"end": 8644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 8722,
											"end": 8723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8720,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 8724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 8654,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8510,
											"end": 8732,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8510,
											"end": 8732,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8510,
											"end": 8732,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8510,
											"end": 8732,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8510,
											"end": 8732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 9212,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 8738,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8806,
											"end": 8812,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8814,
											"end": 8820,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8863,
											"end": 8865,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8842,
											"end": 8849,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8834,
											"end": 8866,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8831,
											"end": 8950,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8831,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 8831,
											"end": 8950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8869,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 8869,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 8869,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8869,
											"end": 8948,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 8869,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8831,
											"end": 8950,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 8831,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8989,
											"end": 8990,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9014,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9059,
											"end": 9066,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9050,
											"end": 9056,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9035,
											"end": 9057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9014,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 9014,
											"end": 9067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9014,
											"end": 9067,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9014,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9004,
											"end": 9067,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9004,
											"end": 9067,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8960,
											"end": 9077,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9118,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 9187,
											"end": 9194,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9178,
											"end": 9184,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9167,
											"end": 9176,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9163,
											"end": 9185,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 9142,
											"end": 9195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 9142,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9132,
											"end": 9195,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9132,
											"end": 9195,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9087,
											"end": 9205,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 9212,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 9212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 9212,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 9212,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 9212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 9212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9218,
											"end": 9398,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 9218,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9266,
											"end": 9343,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9263,
											"end": 9264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9256,
											"end": 9344,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9363,
											"end": 9367,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 9360,
											"end": 9361,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9353,
											"end": 9368,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9387,
											"end": 9391,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9384,
											"end": 9385,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9392,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9404,
											"end": 9724,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 9404,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9475,
											"end": 9487,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 9465,
											"end": 9487,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9465,
											"end": 9487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9533,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 9526,
											"end": 9530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9522,
											"end": 9534,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9553,
											"end": 9571,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9543,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9543,
											"end": 9624,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9609,
											"end": 9613,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 9601,
											"end": 9607,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9597,
											"end": 9614,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9587,
											"end": 9614,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9587,
											"end": 9614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9543,
											"end": 9624,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9543,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9671,
											"end": 9673,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9663,
											"end": 9669,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9660,
											"end": 9674,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9637,
											"end": 9675,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9634,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 9634,
											"end": 9718,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 9690,
											"end": 9708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9634,
											"end": 9718,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 9634,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9455,
											"end": 9724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9404,
											"end": 9724,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9404,
											"end": 9724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9404,
											"end": 9724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9404,
											"end": 9724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9730,
											"end": 9910,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 9730,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9778,
											"end": 9855,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9775,
											"end": 9776,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9856,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9875,
											"end": 9879,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9872,
											"end": 9873,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9865,
											"end": 9880,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9899,
											"end": 9903,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9896,
											"end": 9897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9889,
											"end": 9904,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9916,
											"end": 10018,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 9916,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9958,
											"end": 9966,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10005,
											"end": 10010,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10002,
											"end": 10003,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 9998,
											"end": 10011,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 9977,
											"end": 10011,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9977,
											"end": 10011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9916,
											"end": 10018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9916,
											"end": 10018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9916,
											"end": 10018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9916,
											"end": 10018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10085,
											"end": 10090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10096,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10107,
											"end": 10122,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10107,
											"end": 10122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10140,
											"end": 10145,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10131,
											"end": 10145,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10131,
											"end": 10145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10175,
											"end": 10176,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10165,
											"end": 10173,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10177,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10270,
											"end": 10274,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10265,
											"end": 10268,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10275,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10255,
											"end": 10259,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10252,
											"end": 10276,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10249,
											"end": 10299,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10249,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10249,
											"end": 10299,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 10279,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10279,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10249,
											"end": 10299,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10249,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10329,
											"end": 10330,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10319,
											"end": 10327,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10315,
											"end": 10331,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10763,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10312,
											"end": 10763,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10744,
											"end": 10748,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10737,
											"end": 10742,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10733,
											"end": 10749,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10749,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10763,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10312,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10794,
											"end": 10798,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10788,
											"end": 10792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10784,
											"end": 10799,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 10799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 10799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10824,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 10847,
											"end": 10855,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10824,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 10824,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10824,
											"end": 10856,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 10824,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10812,
											"end": 10856,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10812,
											"end": 10856,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10154,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10932,
											"end": 10937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11113,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11113,
											"end": 11153,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11144,
											"end": 11145,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11135,
											"end": 11145,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11146,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11146,
											"end": 11151,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11113,
											"end": 11153,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11113,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11172,
											"end": 11176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11162,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 11162,
											"end": 11198,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11189,
											"end": 11190,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11190,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11180,
											"end": 11190,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11191,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11191,
											"end": 11196,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11162,
											"end": 11198,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 11162,
											"end": 11198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11258,
											"end": 11262,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11306,
											"end": 11307,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11301,
											"end": 11328,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11301,
											"end": 11328,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11301,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 11301,
											"end": 11328,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11342,
											"end": 11343,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 11337,
											"end": 11528,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11337,
											"end": 11528,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11337,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 11337,
											"end": 11528,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11251,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11251,
											"end": 11528,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11301,
											"end": 11328,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 11301,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11319,
											"end": 11320,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11310,
											"end": 11320,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11310,
											"end": 11320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11321,
											"end": 11326,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11321,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11321,
											"end": 11326,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11337,
											"end": 11528,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 11337,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11382,
											"end": 11385,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 11372,
											"end": 11380,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11369,
											"end": 11386,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11366,
											"end": 11409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11366,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11366,
											"end": 11409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 11389,
											"end": 11407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11366,
											"end": 11409,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11366,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11438,
											"end": 11446,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 11431,
											"end": 11447,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 11422,
											"end": 11447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11422,
											"end": 11447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11473,
											"end": 11476,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11466,
											"end": 11471,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11463,
											"end": 11477,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11500,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 11460,
											"end": 11500,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 11480,
											"end": 11498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 11480,
											"end": 11498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11500,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 11460,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11513,
											"end": 11518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11513,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11513,
											"end": 11518,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11251,
											"end": 11528,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11251,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11251,
											"end": 11528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11637,
											"end": 11639,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11627,
											"end": 11635,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11624,
											"end": 11640,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11618,
											"end": 11621,
											"name": "PUSH",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 11612,
											"end": 11616,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11609,
											"end": 11622,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11605,
											"end": 11641,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11587,
											"end": 11589,
											"name": "PUSH",
											"source": 14,
											"value": "4E"
										},
										{
											"begin": 11577,
											"end": 11585,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11574,
											"end": 11590,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11569,
											"end": 11571,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 11563,
											"end": 11567,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11560,
											"end": 11572,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11556,
											"end": 11591,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11540,
											"end": 11651,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 11537,
											"end": 11783,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11537,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 11537,
											"end": 11783,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11693,
											"end": 11701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11687,
											"end": 11691,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11683,
											"end": 11702,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 11674,
											"end": 11702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11674,
											"end": 11702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11728,
											"end": 11731,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11721,
											"end": 11726,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11718,
											"end": 11732,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11715,
											"end": 11755,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11715,
											"end": 11755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 11715,
											"end": 11755,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 11735,
											"end": 11753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11715,
											"end": 11755,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 11715,
											"end": 11755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11768,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11768,
											"end": 11773,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11537,
											"end": 11783,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 11537,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11808,
											"end": 11850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 11846,
											"end": 11849,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11836,
											"end": 11844,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11830,
											"end": 11834,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11827,
											"end": 11828,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11808,
											"end": 11850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 11808,
											"end": 11850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11808,
											"end": 11850,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 11808,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11793,
											"end": 11850,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11793,
											"end": 11850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11793,
											"end": 11850,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11793,
											"end": 11850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11882,
											"end": 11886,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11873,
											"end": 11887,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 11866,
											"end": 11871,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11888,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11860,
											"end": 11911,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11860,
											"end": 11911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 11860,
											"end": 11911,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11891,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 11891,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 11891,
											"end": 11909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11891,
											"end": 11909,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 11891,
											"end": 11909,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11860,
											"end": 11911,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 11860,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11940,
											"end": 11944,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 11938,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11929,
											"end": 11945,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11920,
											"end": 11945,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11920,
											"end": 11945,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 11951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12238,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 11957,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12015,
											"end": 12020,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 12057,
											"end": 12061,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 12039,
											"end": 12062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12062,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 12039,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12031,
											"end": 12062,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12031,
											"end": 12062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12083,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12099,
											"end": 12107,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12083,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 12083,
											"end": 12108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12083,
											"end": 12108,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12083,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12071,
											"end": 12108,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12071,
											"end": 12108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12127,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 12164,
											"end": 12230,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12154,
											"end": 12162,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12148,
											"end": 12152,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12127,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 12127,
											"end": 12231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12127,
											"end": 12231,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 12127,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12118,
											"end": 12231,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12118,
											"end": 12231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12238,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12654,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 12244,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12284,
											"end": 12291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 12325,
											"end": 12326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 12307,
											"end": 12327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12327,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 12307,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12302,
											"end": 12327,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12302,
											"end": 12327,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 12359,
											"end": 12360,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12361,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 12341,
											"end": 12361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12361,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 12341,
											"end": 12361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12336,
											"end": 12361,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12336,
											"end": 12361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12396,
											"end": 12397,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12393,
											"end": 12394,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12389,
											"end": 12398,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12418,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 12436,
											"end": 12447,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12418,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 12418,
											"end": 12448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12418,
											"end": 12448,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 12418,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12448,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12597,
											"end": 12598,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12588,
											"end": 12595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12584,
											"end": 12599,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12581,
											"end": 12582,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12578,
											"end": 12600,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12558,
											"end": 12559,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12551,
											"end": 12560,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12531,
											"end": 12614,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 12627,
											"end": 12645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 12627,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 12508,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12654,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12745,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 12660,
											"end": 12745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12705,
											"end": 12712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12723,
											"end": 12739,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12723,
											"end": 12739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12745,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12745,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12745,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 12852,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 12751,
											"end": 12852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12845,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12820,
											"end": 12825,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12816,
											"end": 12846,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 12846,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12805,
											"end": 12846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 12852,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 12852,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 12852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 12852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12858,
											"end": 12918,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 12858,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12886,
											"end": 12889,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12900,
											"end": 12912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12900,
											"end": 12912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12858,
											"end": 12918,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12858,
											"end": 12918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12858,
											"end": 12918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12858,
											"end": 12918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 13080,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 12924,
											"end": 13080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12981,
											"end": 12990,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 13031,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 13040,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 13066,
											"end": 13071,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13040,
											"end": 13072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 13040,
											"end": 13072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13040,
											"end": 13072,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 13040,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 13031,
											"end": 13073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13073,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 13031,
											"end": 13073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13014,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 13014,
											"end": 13074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13014,
											"end": 13074,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 13014,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13001,
											"end": 13074,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13001,
											"end": 13074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 13080,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 13080,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 13080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 13080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13086,
											"end": 13231,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 13086,
											"end": 13231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13180,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 13218,
											"end": 13223,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13180,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 13180,
											"end": 13224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13180,
											"end": 13224,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 13180,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13168,
											"end": 13225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13086,
											"end": 13231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13086,
											"end": 13231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13086,
											"end": 13231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13473,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 13237,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13337,
											"end": 13341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13377,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13360,
											"end": 13378,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13352,
											"end": 13378,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13352,
											"end": 13378,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13388,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 13463,
											"end": 13464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13461,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13448,
											"end": 13465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13439,
											"end": 13445,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13388,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 13388,
											"end": 13466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13388,
											"end": 13466,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 13388,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13473,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13473,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13632,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13666,
											"end": 13668,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13655,
											"end": 13664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13651,
											"end": 13669,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13643,
											"end": 13669,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13679,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 13747,
											"end": 13748,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13736,
											"end": 13745,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13732,
											"end": 13749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13723,
											"end": 13729,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13679,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 13679,
											"end": 13750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13679,
											"end": 13750,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 13679,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 13828,
											"end": 13830,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13817,
											"end": 13826,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13813,
											"end": 13831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13804,
											"end": 13810,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 13760,
											"end": 13832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13832,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 13760,
											"end": 13832,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13842,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 13910,
											"end": 13912,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13899,
											"end": 13908,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13886,
											"end": 13892,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13842,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 13842,
											"end": 13914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13842,
											"end": 13914,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 13842,
											"end": 13914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13927,
											"end": 14049,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 13927,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14000,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 14018,
											"end": 14023,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14000,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 14000,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14000,
											"end": 14024,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 14000,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13993,
											"end": 13998,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13990,
											"end": 14025,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 13980,
											"end": 14043,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14037,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14041,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14043,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 13980,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13927,
											"end": 14049,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13927,
											"end": 14049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14055,
											"end": 14198,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 14055,
											"end": 14198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14112,
											"end": 14117,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14143,
											"end": 14149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14137,
											"end": 14150,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14128,
											"end": 14150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 14186,
											"end": 14191,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 14159,
											"end": 14192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14192,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 14159,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14055,
											"end": 14198,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14055,
											"end": 14198,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14055,
											"end": 14198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14055,
											"end": 14198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14055,
											"end": 14198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14555,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 14204,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14323,
											"end": 14325,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14311,
											"end": 14320,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14302,
											"end": 14309,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14298,
											"end": 14321,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14294,
											"end": 14326,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14291,
											"end": 14410,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14291,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 14291,
											"end": 14410,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14329,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 14329,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 14329,
											"end": 14408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14329,
											"end": 14408,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 14329,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14291,
											"end": 14410,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 14291,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14449,
											"end": 14450,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14474,
											"end": 14538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 14530,
											"end": 14537,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14521,
											"end": 14527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14510,
											"end": 14519,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14506,
											"end": 14528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14474,
											"end": 14538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 14474,
											"end": 14538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14474,
											"end": 14538,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 14474,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14464,
											"end": 14538,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14464,
											"end": 14538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14420,
											"end": 14548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14555,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14555,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14752,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 14561,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14604,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14620,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 14638,
											"end": 14639,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 14620,
											"end": 14640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14640,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 14620,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14615,
											"end": 14640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14615,
											"end": 14640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14654,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 14672,
											"end": 14673,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14654,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 14654,
											"end": 14674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14654,
											"end": 14674,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 14654,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14649,
											"end": 14674,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14649,
											"end": 14674,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14697,
											"end": 14698,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14694,
											"end": 14695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14690,
											"end": 14699,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14683,
											"end": 14699,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14683,
											"end": 14699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 14721,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14715,
											"end": 14716,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14712,
											"end": 14722,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14709,
											"end": 14745,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14709,
											"end": 14745,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 14709,
											"end": 14745,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14725,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 14725,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 14725,
											"end": 14743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14725,
											"end": 14743,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 14725,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14709,
											"end": 14745,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 14709,
											"end": 14745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14561,
											"end": 14752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14899,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 14758,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14807,
											"end": 14811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14833,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14822,
											"end": 14833,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14822,
											"end": 14833,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14853,
											"end": 14856,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14850,
											"end": 14851,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14857,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14887,
											"end": 14891,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14884,
											"end": 14885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14874,
											"end": 14892,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 14866,
											"end": 14892,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14866,
											"end": 14892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14899,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14905,
											"end": 14998,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 14905,
											"end": 14998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14942,
											"end": 14948,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14989,
											"end": 14991,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14984,
											"end": 14986,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 14977,
											"end": 14982,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14973,
											"end": 14987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14969,
											"end": 14992,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14959,
											"end": 14992,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14905,
											"end": 14998,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14905,
											"end": 14998,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14905,
											"end": 14998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14905,
											"end": 14998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15004,
											"end": 15111,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 15004,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15048,
											"end": 15056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15098,
											"end": 15103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15092,
											"end": 15096,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15088,
											"end": 15104,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15067,
											"end": 15104,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15067,
											"end": 15104,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15004,
											"end": 15111,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15004,
											"end": 15111,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15004,
											"end": 15111,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15004,
											"end": 15111,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15004,
											"end": 15111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15117,
											"end": 15510,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 15117,
											"end": 15510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15186,
											"end": 15192,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15237,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 15224,
											"end": 15234,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 15259,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 15289,
											"end": 15355,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15278,
											"end": 15287,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15259,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 15259,
											"end": 15356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15259,
											"end": 15356,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 15259,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15377,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 15407,
											"end": 15415,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15396,
											"end": 15405,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15377,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 15377,
											"end": 15416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15377,
											"end": 15416,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 15377,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15365,
											"end": 15416,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 15365,
											"end": 15416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15449,
											"end": 15453,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15445,
											"end": 15454,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 15438,
											"end": 15443,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15434,
											"end": 15455,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15425,
											"end": 15455,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15425,
											"end": 15455,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15498,
											"end": 15502,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15488,
											"end": 15496,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15484,
											"end": 15503,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15477,
											"end": 15482,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15474,
											"end": 15504,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 15464,
											"end": 15504,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15464,
											"end": 15504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15193,
											"end": 15510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15193,
											"end": 15510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15117,
											"end": 15510,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15117,
											"end": 15510,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15117,
											"end": 15510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15117,
											"end": 15510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15117,
											"end": 15510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15117,
											"end": 15510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15658,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 15516,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15566,
											"end": 15575,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15599,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 15626,
											"end": 15650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 15644,
											"end": 15649,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15626,
											"end": 15650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 15626,
											"end": 15650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15626,
											"end": 15650,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 15626,
											"end": 15650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 15617,
											"end": 15651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15599,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 15599,
											"end": 15652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15599,
											"end": 15652,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 15599,
											"end": 15652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15586,
											"end": 15652,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15586,
											"end": 15652,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15658,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15664,
											"end": 15739,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 15664,
											"end": 15739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15707,
											"end": 15710,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15728,
											"end": 15733,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15733,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15733,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15664,
											"end": 15739,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15664,
											"end": 15739,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15664,
											"end": 15739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15664,
											"end": 15739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15745,
											"end": 16014,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 15745,
											"end": 16014,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 15886,
											"end": 15893,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 15855,
											"end": 15894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 15855,
											"end": 15894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15916,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 15965,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 15989,
											"end": 16005,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 15965,
											"end": 16006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16006,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 15965,
											"end": 16006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15957,
											"end": 15963,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15950,
											"end": 15954,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15944,
											"end": 15955,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 15916,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 15916,
											"end": 16007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15916,
											"end": 16007,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 15916,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15903,
											"end": 16008,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15821,
											"end": 16014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15745,
											"end": 16014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15745,
											"end": 16014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15745,
											"end": 16014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15745,
											"end": 16014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16020,
											"end": 16093,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 16020,
											"end": 16093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16065,
											"end": 16068,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16020,
											"end": 16093,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16020,
											"end": 16093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16288,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 16099,
											"end": 16288,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16176,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 16176,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 16176,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16176,
											"end": 16208,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 16176,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16217,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 16275,
											"end": 16281,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16267,
											"end": 16273,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16261,
											"end": 16265,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16217,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 16217,
											"end": 16282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16217,
											"end": 16282,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 16217,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16152,
											"end": 16288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16480,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 16294,
											"end": 16480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16374,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16364,
											"end": 16369,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16361,
											"end": 16375,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16425,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 16462,
											"end": 16463,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16455,
											"end": 16460,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16425,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 16425,
											"end": 16464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16425,
											"end": 16464,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 16425,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16398,
											"end": 16399,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16391,
											"end": 16396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16387,
											"end": 16400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16378,
											"end": 16400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16378,
											"end": 16400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 16354,
											"end": 16474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16486,
											"end": 17029,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 16486,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16587,
											"end": 16589,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 16582,
											"end": 16585,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16579,
											"end": 16590,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16576,
											"end": 17022,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16576,
											"end": 17022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 16576,
											"end": 17022,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16621,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 16653,
											"end": 16658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16621,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 16621,
											"end": 16659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16621,
											"end": 16659,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 16621,
											"end": 16659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 16723,
											"end": 16733,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 16705,
											"end": 16734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16734,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 16705,
											"end": 16734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16695,
											"end": 16703,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16691,
											"end": 16735,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16888,
											"end": 16890,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16876,
											"end": 16886,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16873,
											"end": 16891,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 16870,
											"end": 16919,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16870,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 16870,
											"end": 16919,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16909,
											"end": 16917,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16894,
											"end": 16917,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16894,
											"end": 16917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16870,
											"end": 16919,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 16870,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16932,
											"end": 17012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 16988,
											"end": 17010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 17006,
											"end": 17009,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16988,
											"end": 17010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 16988,
											"end": 17010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16988,
											"end": 17010,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 16988,
											"end": 17010,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16978,
											"end": 16986,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16974,
											"end": 17011,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16961,
											"end": 16972,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16932,
											"end": 17012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 16932,
											"end": 17012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16932,
											"end": 17012,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 16932,
											"end": 17012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16591,
											"end": 17022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16591,
											"end": 17022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16576,
											"end": 17022,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 16576,
											"end": 17022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16486,
											"end": 17029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16486,
											"end": 17029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16486,
											"end": 17029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16486,
											"end": 17029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17152,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 17035,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17089,
											"end": 17097,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17139,
											"end": 17144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17133,
											"end": 17137,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17129,
											"end": 17145,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 17108,
											"end": 17145,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17108,
											"end": 17145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17152,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17152,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17035,
											"end": 17152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17158,
											"end": 17327,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 17158,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17202,
											"end": 17208,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17235,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 17283,
											"end": 17284,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17279,
											"end": 17285,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 17271,
											"end": 17276,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17268,
											"end": 17269,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 17264,
											"end": 17277,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 17235,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 17235,
											"end": 17286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17235,
											"end": 17286,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 17235,
											"end": 17286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17231,
											"end": 17287,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 17316,
											"end": 17320,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17310,
											"end": 17314,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17306,
											"end": 17321,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17296,
											"end": 17321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17296,
											"end": 17321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17209,
											"end": 17327,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17158,
											"end": 17327,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17158,
											"end": 17327,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17158,
											"end": 17327,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17158,
											"end": 17327,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17158,
											"end": 17327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17332,
											"end": 17627,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 17332,
											"end": 17627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17408,
											"end": 17412,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17554,
											"end": 17583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 17579,
											"end": 17582,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17573,
											"end": 17577,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17554,
											"end": 17583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 17554,
											"end": 17583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17554,
											"end": 17583,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 17554,
											"end": 17583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17546,
											"end": 17583,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17546,
											"end": 17583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17616,
											"end": 17619,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17613,
											"end": 17614,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 17609,
											"end": 17620,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 17603,
											"end": 17607,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17600,
											"end": 17621,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 17592,
											"end": 17621,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17592,
											"end": 17621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17332,
											"end": 17627,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17332,
											"end": 17627,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17332,
											"end": 17627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17332,
											"end": 17627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17332,
											"end": 17627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17632,
											"end": 19027,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 17632,
											"end": 19027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17749,
											"end": 17786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 17782,
											"end": 17785,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17749,
											"end": 17786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 17749,
											"end": 17786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17749,
											"end": 17786,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 17749,
											"end": 17786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17851,
											"end": 17869,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17843,
											"end": 17849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17840,
											"end": 17870,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17837,
											"end": 17893,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17837,
											"end": 17893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 17837,
											"end": 17893,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 17873,
											"end": 17891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17837,
											"end": 17893,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 17837,
											"end": 17893,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 17949,
											"end": 17953,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17943,
											"end": 17954,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 17917,
											"end": 17955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 17955,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 17917,
											"end": 17955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18002,
											"end": 18069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 18062,
											"end": 18068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18054,
											"end": 18060,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18048,
											"end": 18052,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18002,
											"end": 18069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 18002,
											"end": 18069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18002,
											"end": 18069,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 18002,
											"end": 18069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18096,
											"end": 18097,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18120,
											"end": 18124,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18107,
											"end": 18124,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18107,
											"end": 18124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18152,
											"end": 18154,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 18144,
											"end": 18150,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18141,
											"end": 18155,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18169,
											"end": 18170,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18164,
											"end": 18782,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18164,
											"end": 18782,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18164,
											"end": 18782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 18164,
											"end": 18782,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 18827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18843,
											"end": 18849,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18840,
											"end": 18917,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18840,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 18840,
											"end": 18917,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18892,
											"end": 18901,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18887,
											"end": 18890,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 18883,
											"end": 18902,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18877,
											"end": 18903,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 18868,
											"end": 18903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18868,
											"end": 18903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18840,
											"end": 18917,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 18840,
											"end": 18917,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18943,
											"end": 19010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 19003,
											"end": 19009,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18996,
											"end": 19001,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18943,
											"end": 19010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 18943,
											"end": 19010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18943,
											"end": 19010,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 18943,
											"end": 19010,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18937,
											"end": 18941,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18930,
											"end": 19011,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 18799,
											"end": 19021,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18134,
											"end": 19021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 18134,
											"end": 19021,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18164,
											"end": 18782,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 18164,
											"end": 18782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18216,
											"end": 18220,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 18212,
											"end": 18221,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 18204,
											"end": 18210,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18200,
											"end": 18222,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18250,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 18282,
											"end": 18286,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18250,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 18250,
											"end": 18287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18250,
											"end": 18287,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 18250,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18309,
											"end": 18310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18337,
											"end": 18344,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18334,
											"end": 18335,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18331,
											"end": 18345,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18416,
											"end": 18425,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18411,
											"end": 18414,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 18407,
											"end": 18426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18401,
											"end": 18427,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 18393,
											"end": 18399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18386,
											"end": 18428,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 18467,
											"end": 18468,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18459,
											"end": 18465,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18455,
											"end": 18469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18445,
											"end": 18469,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18445,
											"end": 18469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18514,
											"end": 18516,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18503,
											"end": 18512,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18499,
											"end": 18517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18486,
											"end": 18517,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 18486,
											"end": 18517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18360,
											"end": 18364,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18357,
											"end": 18358,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18353,
											"end": 18365,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18348,
											"end": 18365,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18348,
											"end": 18365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 18323,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18559,
											"end": 18565,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18550,
											"end": 18557,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18547,
											"end": 18566,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18544,
											"end": 18723,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18544,
											"end": 18723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 18544,
											"end": 18723,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18617,
											"end": 18626,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18612,
											"end": 18615,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 18608,
											"end": 18627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18602,
											"end": 18628,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 18660,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 18702,
											"end": 18706,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 18694,
											"end": 18700,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 18690,
											"end": 18707,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18679,
											"end": 18688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18660,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 18660,
											"end": 18708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18660,
											"end": 18708,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 18660,
											"end": 18708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18652,
											"end": 18658,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18645,
											"end": 18709,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 18567,
											"end": 18723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18544,
											"end": 18723,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 18544,
											"end": 18723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18769,
											"end": 18770,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18765,
											"end": 18766,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18757,
											"end": 18763,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 18753,
											"end": 18767,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 18749,
											"end": 18771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18743,
											"end": 18747,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 18736,
											"end": 18772,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 18171,
											"end": 18782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18171,
											"end": 18782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18171,
											"end": 18782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18134,
											"end": 19021,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 18134,
											"end": 19021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18134,
											"end": 19021,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17724,
											"end": 19027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17724,
											"end": 19027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17724,
											"end": 19027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17632,
											"end": 19027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17632,
											"end": 19027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17632,
											"end": 19027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19033,
											"end": 19131,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 19033,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19084,
											"end": 19090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19118,
											"end": 19123,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19112,
											"end": 19124,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 19102,
											"end": 19124,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19102,
											"end": 19124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19033,
											"end": 19131,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19033,
											"end": 19131,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19033,
											"end": 19131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19033,
											"end": 19131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19137,
											"end": 19284,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 19137,
											"end": 19284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19238,
											"end": 19249,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19275,
											"end": 19278,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19260,
											"end": 19278,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19260,
											"end": 19278,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19137,
											"end": 19284,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19137,
											"end": 19284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19137,
											"end": 19284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19137,
											"end": 19284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19137,
											"end": 19284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19290,
											"end": 19676,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 19290,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19394,
											"end": 19397,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19422,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 19454,
											"end": 19459,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19422,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 19422,
											"end": 19460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19422,
											"end": 19460,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 19422,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19476,
											"end": 19564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 19557,
											"end": 19563,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19552,
											"end": 19555,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19476,
											"end": 19564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 19476,
											"end": 19564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19476,
											"end": 19564,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 19476,
											"end": 19564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19469,
											"end": 19564,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19469,
											"end": 19564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 19631,
											"end": 19637,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19626,
											"end": 19629,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19619,
											"end": 19623,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19612,
											"end": 19617,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19608,
											"end": 19624,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 19573,
											"end": 19638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19663,
											"end": 19669,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 19658,
											"end": 19661,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19647,
											"end": 19670,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19647,
											"end": 19670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19398,
											"end": 19676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19290,
											"end": 19676,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19290,
											"end": 19676,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19290,
											"end": 19676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19290,
											"end": 19676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19290,
											"end": 19676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19682,
											"end": 19953,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 19682,
											"end": 19953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19812,
											"end": 19815,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 19923,
											"end": 19926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19914,
											"end": 19920,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 19834,
											"end": 19927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19827,
											"end": 19927,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19827,
											"end": 19927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19944,
											"end": 19947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19937,
											"end": 19947,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19937,
											"end": 19947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19682,
											"end": 19953,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19682,
											"end": 19953,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19682,
											"end": 19953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19682,
											"end": 19953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19682,
											"end": 19953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contract-f627870540.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"initialize(address)": "c4d66de8",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-f627870540.sol\":\"MivaToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"contract-f627870540.sol\":{\"keccak256\":\"0x24389f71df3951e2188a53d1eecbd9c9230a38df6c01a32e735cd8c77e5f792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98a7ae5ef87754792dea5398a1bc254bc67029e8704121b982d965929f9cd8da\",\"dweb:/ipfs/QmcKbqt8VHueJ6BY2rign6DV87skDF1uwArm19tHrQ63KS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1285
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1286,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1285,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1285,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1285,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1735
						],
						"IERC1822Proxiable": [
							1295
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1296,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1295,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1736,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1735,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1295,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 630,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 630,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1735_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1462,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 630,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 630,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1735_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1493,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 630,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 630,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 630,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1735_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1462,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1735_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1554,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1735_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1467,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1295_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1295",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1294,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 630,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5606:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1467,
								1480,
								1862,
								1865
							],
							"usedEvents": [
								219,
								1446
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1285
						],
						"ERC20Upgradeable": [
							1247
						],
						"IERC20": [
							1823
						],
						"IERC20Errors": [
							1337
						],
						"IERC20Metadata": [
							1849
						],
						"Initializable": [
							448
						]
					},
					"id": 1248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1824,
							"src": "131:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1823,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1850,
							"src": "202:97:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 635,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1849,
										"src": "210:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1286,
							"src": "300:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 637,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1285,
										"src": "308:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1433,
							"src": "371:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 639,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1337,
										"src": "379:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 642,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 449,
							"src": "455:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 641,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 644,
										"name": "Initializable",
										"nameLocations": [
											"1614:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1614:13:3"
									},
									"id": 645,
									"nodeType": "InheritanceSpecifier",
									"src": "1614:13:3"
								},
								{
									"baseName": {
										"id": 646,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1629:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1285,
										"src": "1629:18:3"
									},
									"id": 647,
									"nodeType": "InheritanceSpecifier",
									"src": "1629:18:3"
								},
								{
									"baseName": {
										"id": 648,
										"name": "IERC20",
										"nameLocations": [
											"1649:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1823,
										"src": "1649:6:3"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "1649:6:3"
								},
								{
									"baseName": {
										"id": 650,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1657:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1849,
										"src": "1657:14:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "1657:14:3"
								},
								{
									"baseName": {
										"id": 652,
										"name": "IERC20Errors",
										"nameLocations": [
											"1673:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "1673:12:3"
									},
									"id": 653,
									"nodeType": "InheritanceSpecifier",
									"src": "1673:12:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 643,
								"nodeType": "StructuredDocumentation",
								"src": "523:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1247,
							"linearizedBaseContracts": [
								1247,
								1337,
								1849,
								1823,
								1285,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1594:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "1692:63:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 671,
									"members": [
										{
											"constant": false,
											"id": 658,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1826:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1790:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 657,
												"keyName": "account",
												"keyNameLocation": "1806:7:3",
												"keyType": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1790:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1910:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1846:75:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 663,
												"keyName": "account",
												"keyNameLocation": "1862:7:3",
												"keyType": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1846:63:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 662,
													"keyName": "spender",
													"keyNameLocation": "1889:7:3",
													"keyType": {
														"id": 660,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1881:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1873:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 661,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1900:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1940:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1932:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 665,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1932:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1970:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1963:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 667,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1963:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1992:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1985:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 669,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1985:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1767:12:3",
									"nodeType": "StructDefinition",
									"scope": 1247,
									"src": "1760:246:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 674,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "2146:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "2121:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 672,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 673,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2169:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "2316:79:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2335:54:3",
													"nodeType": "YulBlock",
													"src": "2335:54:3",
													"statements": [
														{
															"nativeSrc": "2349:30:3",
															"nodeType": "YulAssignment",
															"src": "2349:30:3",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2359:20:3",
																"nodeType": "YulIdentifier",
																"src": "2359:20:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2349:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 678,
														"isOffset": false,
														"isSlot": true,
														"src": "2349:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 674,
														"isOffset": false,
														"isSlot": false,
														"src": "2359:20:3",
														"valueSize": 1
													}
												],
												"id": 680,
												"nodeType": "InlineAssembly",
												"src": "2326:63:3"
											}
										]
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "2251:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2267:2:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2313:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2292:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 676,
														"name": "ERC20Storage",
														"nameLocations": [
															"2292:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 671,
														"src": "2292:12:3"
													},
													"referencedDeclaration": 671,
													"src": "2292:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:24:3"
									},
									"scope": 1247,
									"src": "2242:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "2669:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2702:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 694,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2709:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 692,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2679:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "2679:38:3"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2401:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 690,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 689,
												"name": "onlyInitializing",
												"nameLocations": [
													"2652:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2652:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2652:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2586:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2613:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2599:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2599:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2634:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2620:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 686,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2620:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:44:3"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:3"
									},
									"scope": 1247,
									"src": "2577:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "2832:114:3",
										"statements": [
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2863:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "2842:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 708,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 707,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2842:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "2842:12:3"
															},
															"referencedDeclaration": 671,
															"src": "2842:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 710,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2867:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2842:43:3"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 713,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2895:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2897:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "2895:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 716,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "2905:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2895:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2895:15:3"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 719,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2920:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2922:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 670,
														"src": "2920:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2932:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2920:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "2920:19:3"
											}
										]
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 704,
												"name": "onlyInitializing",
												"nameLocations": [
													"2815:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2815:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2815:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2739:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2762:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 699,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2762:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2797:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2783:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2783:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:44:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2832:0:3"
									},
									"scope": 1247,
									"src": "2730:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1836
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3071:84:3",
										"statements": [
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3102:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 741,
														"src": "3081:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 733,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 732,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3081:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "3081:12:3"
															},
															"referencedDeclaration": 671,
															"src": "3081:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 735,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "3106:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3106:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3081:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 738,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "3141:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3143:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 668,
													"src": "3141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 731,
												"id": 740,
												"nodeType": "Return",
												"src": "3134:14:3"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "2952:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3020:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3024:2:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3056:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:15:3"
									},
									"scope": 1247,
									"src": "3011:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1842
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "3330:86:3",
										"statements": [
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3361:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 757,
														"src": "3340:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 749,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 748,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3340:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "3340:12:3"
															},
															"referencedDeclaration": 671,
															"src": "3340:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 751,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "3365:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3340:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 754,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3400:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3402:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 670,
													"src": "3400:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 747,
												"id": 756,
												"nodeType": "Return",
												"src": "3393:16:3"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3161:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3277:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3283:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "3315:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3315:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:15:3"
									},
									"scope": 1247,
									"src": "3268:148:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1848
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "4105:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4122:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 763,
												"id": 765,
												"nodeType": "Return",
												"src": "4115:9:3"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "3422:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4058:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:2:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "4098:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 761,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4098:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4097:7:3"
									},
									"scope": 1247,
									"src": "4049:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1772
									],
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "4252:91:3",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4283:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "4262:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 774,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 773,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4262:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "4262:12:3"
															},
															"referencedDeclaration": 671,
															"src": "4262:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "4287:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4262:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 779,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "4322:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4324:12:3",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 666,
													"src": "4322:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 781,
												"nodeType": "Return",
												"src": "4315:21:3"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "4137:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4200:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:2:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "4243:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:9:3"
									},
									"scope": 1247,
									"src": "4191:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1780
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "4475:97:3",
										"statements": [
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4506:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "4485:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 792,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 791,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4485:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "4485:12:3"
															},
															"referencedDeclaration": 671,
															"src": "4485:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 794,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "4510:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4510:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4485:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 797,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4545:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4547:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 658,
														"src": "4545:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 800,
													"indexExpression": {
														"id": 799,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4557:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4545:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 790,
												"id": 801,
												"nodeType": "Return",
												"src": "4538:27:3"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "4349:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4410:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4420:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:17:3"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4466:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:9:3"
									},
									"scope": 1247,
									"src": "4401:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1790
									],
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "4842:103:3",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4860:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "4852:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4852:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 815,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "4868:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4852:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4900:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4907:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4911:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "4890:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4890:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "4890:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4934:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 812,
												"id": 825,
												"nodeType": "Return",
												"src": "4927:11:3"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "4578:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4776:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4793:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4785:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4805:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4797:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4784:27:3"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4836:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4836:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:6:3"
									},
									"scope": 1247,
									"src": "4767:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "5092:106:3",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "5123:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "5102:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 838,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 837,
																"name": "ERC20Storage",
																"nameLocations": [
																	"5102:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "5102:12:3"
															},
															"referencedDeclaration": 671,
															"src": "5102:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 840,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "5127:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5127:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5102:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 843,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "5162:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5164:11:3",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 664,
															"src": "5162:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 846,
														"indexExpression": {
															"id": 845,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "5176:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5162:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 848,
													"indexExpression": {
														"id": 847,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5183:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5162:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 849,
												"nodeType": "Return",
												"src": "5155:36:3"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "4951:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5012:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "5022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5021:32:3"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "5083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:9:3"
									},
									"scope": 1247,
									"src": "5003:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1810
									],
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "5584:107:3",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5602:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "5594:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 861,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5594:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "5610:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5594:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "5641:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "5648:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "5657:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1130,
															1198
														],
														"referencedDeclaration": 1130,
														"src": "5632:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5632:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "5632:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5680:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 860,
												"id": 873,
												"nodeType": "Return",
												"src": "5673:11:3"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "5204:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5514:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5530:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5522:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5539:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:32:3"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5578:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5578:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5577:6:3"
									},
									"scope": 1247,
									"src": "5505:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1822
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "6344:151:3",
										"statements": [
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6362:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "6354:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 887,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6354:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 889,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "6372:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6372:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6354:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "6410:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "6416:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "6425:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "6394:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6394:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "6394:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "6451:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "6457:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "6461:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "6441:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "6441:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6484:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 886,
												"id": 905,
												"nodeType": "Return",
												"src": "6477:11:3"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "5697:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6260:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6281:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6273:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6273:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6295:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6287:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6287:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6307:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6299:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:41:3"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6338:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6338:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:6:3"
									},
									"scope": 1247,
									"src": "6251:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "6937:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "6951:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6967:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6959:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6959:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6959:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6951:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "6947:86:3",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "6971:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7019:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7011:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 924,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7011:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7011:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 923,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "6992:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6992:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "RevertStatement",
															"src": "6985:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "7046:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7060:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7052:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 933,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7052:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7052:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7046:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "IfStatement",
												"src": "7042:86:3",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "7064:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7114:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7106:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 939,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7106:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7106:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 938,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "7085:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7085:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 944,
															"nodeType": "RevertStatement",
															"src": "7078:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "7145:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "7151:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "7155:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 947,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "7137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7137:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "7137:24:3"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "6501:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6877:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6895:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "6887:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6909:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "6901:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6901:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6921:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "6913:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6886:41:3"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6937:0:3"
									},
									"scope": 1247,
									"src": "6868:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "7558:1095:3",
										"statements": [
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7589:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "7568:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 965,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 964,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7568:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "7568:12:3"
															},
															"referencedDeclaration": 671,
															"src": "7568:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 967,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "7593:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7568:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "7625:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7641:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7633:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7633:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7633:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7625:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "7801:366:3",
													"statements": [
														{
															"assignments": [
																984
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 984,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7823:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1012,
																	"src": "7815:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 983,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7815:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 989,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 985,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "7837:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7839:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 658,
																	"src": "7837:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 988,
																"indexExpression": {
																	"id": 987,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "7849:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7837:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7815:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 990,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "7872:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "7886:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7872:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1000,
															"nodeType": "IfStatement",
															"src": "7868:115:3",
															"trueBody": {
																"id": 999,
																"nodeType": "Block",
																"src": "7893:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 994,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "7943:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 995,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7949:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 996,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 961,
																					"src": "7962:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 993,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "7918:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7918:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 998,
																		"nodeType": "RevertStatement",
																		"src": "7911:57:3"
																	}
																]
															}
														},
														{
															"id": 1011,
															"nodeType": "UncheckedBlock",
															"src": "7996:161:3",
															"statements": [
																{
																	"expression": {
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1001,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 966,
																					"src": "8103:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8105:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 658,
																				"src": "8103:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1005,
																			"indexExpression": {
																				"id": 1003,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "8115:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8103:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1006,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "8123:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1007,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "8137:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8123:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8103:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1010,
																	"nodeType": "ExpressionStatement",
																	"src": "8103:39:3"
																}
															]
														}
													]
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "7621:546:3",
												"trueBody": {
													"id": 982,
													"nodeType": "Block",
													"src": "7645:150:3",
													"statements": [
														{
															"expression": {
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 976,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "7761:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7763:12:3",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 666,
																	"src": "7761:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 979,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "7779:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7761:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 981,
															"nodeType": "ExpressionStatement",
															"src": "7761:23:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1014,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "8181:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8195:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8187:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1015,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8187:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8187:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8181:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "8398:208:3",
													"statements": [
														{
															"id": 1036,
															"nodeType": "UncheckedBlock",
															"src": "8412:184:3",
															"statements": [
																{
																	"expression": {
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1028,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 966,
																					"src": "8557:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8559:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 658,
																				"src": "8557:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1032,
																			"indexExpression": {
																				"id": 1030,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "8569:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8557:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "8576:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8557:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1035,
																	"nodeType": "ExpressionStatement",
																	"src": "8557:24:3"
																}
															]
														}
													]
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "8177:429:3",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "8199:193:3",
													"statements": [
														{
															"id": 1026,
															"nodeType": "UncheckedBlock",
															"src": "8213:169:3",
															"statements": [
																{
																	"expression": {
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1020,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "8344:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8346:12:3",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 666,
																			"src": "8344:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1023,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "8362:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8344:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1025,
																	"nodeType": "ExpressionStatement",
																	"src": "8344:23:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1040,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "8630:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "8636:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "8640:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1039,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "8621:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8621:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "EmitStatement",
												"src": "8616:30:3"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "7174:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7492:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7508:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "7500:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7522:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "7514:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7534:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "7526:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7499:41:3"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7558:0:3"
									},
									"scope": 1247,
									"src": "7483:1170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "9052:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "9066:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9085:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9077:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1055,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9077:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9077:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9066:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "9062:91:3",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "9089:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9139:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9131:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1061,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9131:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9131:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1060,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "9110:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9110:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1066,
															"nodeType": "RevertStatement",
															"src": "9103:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9178:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9170:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9170:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9170:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "9182:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "9191:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9162:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "9162:35:3"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "8659:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9005:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "9011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9036:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "9028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9028:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9010:32:3"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9052:0:3"
									},
									"scope": 1247,
									"src": "8996:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "9578:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1087,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "9592:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9611:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9603:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1088,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9603:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9603:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9592:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "9588:89:3",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "9615:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9663:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9655:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1094,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9655:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9655:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1093,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "9636:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9636:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1099,
															"nodeType": "RevertStatement",
															"src": "9629:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "9694:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9711:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9703:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9703:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9703:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9686:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9686:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "9686:35:3"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "9210:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9531:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9545:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "9537:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9562:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "9554:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9536:32:3"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9578:0:3"
									},
									"scope": 1247,
									"src": "9522:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "10338:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "10357:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "10364:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "10373:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10380:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1122,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1130,
															1198
														],
														"referencedDeclaration": 1198,
														"src": "10348:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10348:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "10348:37:3"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "9734:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10273:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10290:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10282:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10282:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10305:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10297:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10297:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10281:47:3"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:3"
									},
									"scope": 1247,
									"src": "10264:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "11322:389:3",
										"statements": [
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11353:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "11332:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1143,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1142,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11332:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "11332:12:3"
															},
															"referencedDeclaration": 671,
															"src": "11332:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1145,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "11357:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11357:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11332:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1148,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "11389:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11406:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11398:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1149,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11398:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11398:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11389:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "11385:89:3",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "11410:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11460:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11452:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1155,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11452:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11452:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1154,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "11431:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11431:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "RevertStatement",
															"src": "11424:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1163,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "11487:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11506:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11498:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11498:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11498:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11487:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "11483:90:3",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "11510:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11559:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11551:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11551:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11551:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1169,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "11531:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11531:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1175,
															"nodeType": "RevertStatement",
															"src": "11524:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1178,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "11582:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11584:11:3",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 664,
																"src": "11582:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1183,
															"indexExpression": {
																"id": 1180,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "11596:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11582:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"id": 1181,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11603:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11582:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1185,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "11614:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11582:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "11582:37:3"
											},
											{
												"condition": {
													"id": 1188,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1139,
													"src": "11633:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "11629:76:3",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "11644:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1190,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "11672:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "11679:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1192,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "11688:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1189,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "11663:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11663:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1194,
															"nodeType": "EmitStatement",
															"src": "11658:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "10398:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11233:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "11242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11265:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "11257:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11257:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11282:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "11274:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11294:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "11289:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11289:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11241:63:3"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11322:0:3"
									},
									"scope": 1247,
									"src": "11224:487:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "12082:388:3",
										"statements": [
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12100:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "12092:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12092:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [
														{
															"id": 1211,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "12129:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "12136:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1210,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "12119:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12119:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12092:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "12158:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12183:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1217,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12183:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1216,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12178:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12178:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12192:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12178:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12158:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "12154:310:3",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "12197:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1222,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "12215:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "12234:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12215:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1232,
															"nodeType": "IfStatement",
															"src": "12211:130:3",
															"trueBody": {
																"id": 1231,
																"nodeType": "Block",
																"src": "12241:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1226,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1203,
																					"src": "12293:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1227,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "12302:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1228,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "12320:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1225,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1326,
																				"src": "12266:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12266:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1230,
																		"nodeType": "RevertStatement",
																		"src": "12259:67:3"
																	}
																]
															}
														},
														{
															"id": 1242,
															"nodeType": "UncheckedBlock",
															"src": "12354:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1234,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1201,
																				"src": "12391:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1235,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1203,
																				"src": "12398:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1236,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "12407:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1237,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "12426:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12407:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12433:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1233,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1130,
																				1198
																			],
																			"referencedDeclaration": 1198,
																			"src": "12382:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12382:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1241,
																	"nodeType": "ExpressionStatement",
																	"src": "12382:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "11717:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12002:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12026:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "12018:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12041:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "12033:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12058:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "12050:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12017:47:3"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12082:0:3"
									},
									"scope": 1247,
									"src": "11993:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1248,
							"src": "1576:10896:3",
							"usedErrors": [
								211,
								214,
								1307,
								1312,
								1317,
								1326,
								1331,
								1336
							],
							"usedEvents": [
								219,
								1757,
								1766
							]
						}
					],
					"src": "105:12368:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1285
						],
						"Initializable": [
							448
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 449,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1250,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1253,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:4"
									},
									"id": 1254,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1252,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1257,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1256,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 1285,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1262,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 1285,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1271,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1273,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 1285,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1280,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1282,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 1285,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1286,
							"src": "688:402:4",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:990:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1295
						]
					},
					"id": 1296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:5",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1295,
							"linearizedBaseContracts": [
								1295
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:5"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "868:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:5"
									},
									"scope": 1295,
									"src": "820:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1296,
							"src": "343:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1432
						],
						"IERC20Errors": [
							1337
						],
						"IERC721Errors": [
							1385
						]
					},
					"id": 1433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:6",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1337,
							"linearizedBaseContracts": [
								1337
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1307,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "668:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "685:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:6"
									},
									"src": "621:80:6"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1312,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "889:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:6"
									},
									"src": "864:41:6"
								},
								{
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1317,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1102:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:6"
									},
									"src": "1075:45:6"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:6",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1326,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1509:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1526:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:6"
									},
									"src": "1476:85:6"
								},
								{
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1331,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1773:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:6"
									},
									"src": "1746:45:6"
								},
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:6",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1336,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2023:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:6"
									},
									"src": "1997:43:6"
								}
							],
							"scope": 1433,
							"src": "278:1764:6",
							"usedErrors": [
								1307,
								1312,
								1317,
								1326,
								1331,
								1336
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1338,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:6",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1385,
							"linearizedBaseContracts": [
								1385
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:6",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1343,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"src": "2440:40:6"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:6",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1348,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2652:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:6"
									},
									"src": "2623:46:6"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:6",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1357,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2996:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "3012:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "3029:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:6"
									},
									"src": "2969:75:6"
								},
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1362,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "3233:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:6"
									},
									"src": "3207:42:6"
								},
								{
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1367,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3447:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:6"
									},
									"src": "3419:46:6"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1374,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "3756:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "3774:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:6"
									},
									"src": "3723:68:6"
								},
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1379,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4004:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:6"
									},
									"src": "3976:46:6"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1384,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "4258:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:6"
									},
									"src": "4230:46:6"
								}
							],
							"scope": 1433,
							"src": "2186:2092:6",
							"usedErrors": [
								1343,
								1348,
								1357,
								1362,
								1367,
								1374,
								1379,
								1384
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1386,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:6",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1432,
							"linearizedBaseContracts": [
								1432
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1397,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "4854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "4870:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "4887:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "4903:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:6"
									},
									"src": "4821:99:6"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1402,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5110:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:6"
									},
									"src": "5083:43:6"
								},
								{
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1407,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "5325:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:6"
									},
									"src": "5296:47:6"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1414,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "5645:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "5663:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:6"
									},
									"src": "5610:68:6"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1419,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "5892:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:6"
									},
									"src": "5863:47:6"
								},
								{
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1424,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6147:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:6"
									},
									"src": "6118:47:6"
								},
								{
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:6",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1431,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "6488:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "6507:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:6"
									},
									"src": "6456:73:6"
								}
							],
							"scope": 1433,
							"src": "4424:2107:6",
							"usedErrors": [
								1397,
								1402,
								1407,
								1414,
								1419,
								1424,
								1431
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2102
						],
						"ERC1967Utils": [
							1735
						],
						"IBeacon": [
							1745
						],
						"StorageSlot": [
							2212
						]
					},
					"id": 1736,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1736,
							"sourceUnit": 1746,
							"src": "140:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1435,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1745,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1736,
							"sourceUnit": 2103,
							"src": "187:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1437,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2102,
										"src": "195:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1440,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1736,
							"sourceUnit": 2213,
							"src": "236:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1439,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2212,
										"src": "244:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1441,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:7",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1735,
							"linearizedBaseContracts": [
								1735
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:7",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1446,
									"name": "Upgraded",
									"nameLocation": "739:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "748:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:7"
									},
									"src": "733:47:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:7",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1453,
									"name": "AdminChanged",
									"nameLocation": "864:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "877:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "900:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:7"
									},
									"src": "858:60:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:7",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1458,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1009:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:7"
									},
									"src": "988:45:7"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:7",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1462,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1735,
									"src": "1279:114:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1460,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1461,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:7",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1467,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1509:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:7"
									},
									"src": "1474:59:7"
								},
								{
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:7",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1472,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1630:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:7"
									},
									"src": "1604:41:7"
								},
								{
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:7",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1477,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1744:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:7"
									},
									"src": "1717:43:7"
								},
								{
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:7",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1480,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:7"
									},
									"src": "1853:26:7"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "2018:77:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1488,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "2062:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1486,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "2035:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2212_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:7",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2134,
															"src": "2035:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2108_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:7",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2107,
													"src": "2035:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1491,
												"nodeType": "Return",
												"src": "2028:60:7"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:7",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:7"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2009:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:7"
									},
									"scope": 1735,
									"src": "1957:138:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "2249:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1499,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "2263:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1509,
												"nodeType": "IfStatement",
												"src": "2259:119:7",
												"trueBody": {
													"id": 1508,
													"nodeType": "Block",
													"src": "2299:79:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1505,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "2349:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1504,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "2320:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1507,
															"nodeType": "RevertStatement",
															"src": "2313:54:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1513,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "2414:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1510,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "2387:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2212_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:7",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2134,
																"src": "2387:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2108_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2107,
														"src": "2387:53:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1516,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "2443:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:7"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:7",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "2214:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:7"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:7"
									},
									"scope": 1735,
									"src": "2186:281:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "2860:254:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1529,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2889:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1528,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "2870:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1533,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2931:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1532,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "2922:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "EmitStatement",
												"src": "2917:32:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "2964:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "3065:43:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1548,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "3079:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1550,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:7"
														}
													]
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "2960:148:7",
												"trueBody": {
													"id": 1547,
													"nodeType": "Block",
													"src": "2981:78:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1543,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "3024:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1544,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "3043:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1540,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "2995:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2102_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:7",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2021,
																	"src": "2995:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1546,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:7",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "2805:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "2832:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:7"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:7"
									},
									"scope": 1735,
									"src": "2779:335:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:7",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1558,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1735,
									"src": "3335:105:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1556,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1557,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "3844:68:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1566,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "3888:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1564,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "3861:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2212_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:7",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2134,
															"src": "3861:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2108_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:7",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2107,
													"src": "3861:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1569,
												"nodeType": "Return",
												"src": "3854:51:7"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:7",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:7"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3835:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:7"
									},
									"scope": 1735,
									"src": "3792:120:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "4039:172:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "4053:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1578,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1591,
												"nodeType": "IfStatement",
												"src": "4049:91:7",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "4077:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1584,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1583,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "4098:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1589,
															"nodeType": "RevertStatement",
															"src": "4091:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1595,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "4176:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1592,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "4149:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2212_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:7",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2134,
																"src": "4149:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2108_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2107,
														"src": "4149:44:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1598,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "4196:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:7"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:7",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "4013:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:7"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:7"
									},
									"scope": 1735,
									"src": "3994:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "4379:85:7",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1609,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "4407:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1611,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "4419:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1608,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "4394:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "EmitStatement",
												"src": "4389:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1615,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "4448:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1614,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "4438:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:7"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:7",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "4352:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:7"
									},
									"scope": 1735,
									"src": "4331:133:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:7",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1623,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1735,
									"src": "4741:106:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1621,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1622,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "4963:69:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1631,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "5007:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1629,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "4980:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2212_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:7",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2134,
															"src": "4980:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2108_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:7",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2107,
													"src": "4980:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1634,
												"nodeType": "Return",
												"src": "4973:52:7"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:7",
										"text": " @dev Returns the current beacon."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:7"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "4954:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:7"
									},
									"scope": 1735,
									"src": "4910:122:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "5161:390:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1642,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "5175:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "5171:95:7",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "5203:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "5245:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1647,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "5224:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "5217:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1656,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "5303:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1653,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "5276:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2212_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:7",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2134,
																"src": "5276:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2108_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2107,
														"src": "5276:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1659,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "5324:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:7"
											},
											{
												"assignments": [
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1681,
														"src": "5344:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1662,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1669,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1665,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "5383:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1664,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "5375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1745_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1745",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:7",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1744,
														"src": "5375:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1670,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1663,
																"src": "5424:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1680,
												"nodeType": "IfStatement",
												"src": "5420:125:7",
												"trueBody": {
													"id": 1679,
													"nodeType": "Block",
													"src": "5463:82:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1676,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "5513:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1675,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "5484:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1678,
															"nodeType": "RevertStatement",
															"src": "5477:57:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:7",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5134:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:7"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 1735,
									"src": "5114:437:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "6155:254:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6176:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1690,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "6165:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1695,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6216:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1694,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "6201:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "EmitStatement",
												"src": "6196:30:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1698,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "6241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1717,
													"nodeType": "Block",
													"src": "6360:43:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1714,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "6374:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1716,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:7"
														}
													]
												},
												"id": 1718,
												"nodeType": "IfStatement",
												"src": "6237:166:7",
												"trueBody": {
													"id": 1713,
													"nodeType": "Block",
													"src": "6258:96:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1706,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1685,
																						"src": "6309:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1705,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1745,
																					"src": "6301:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1745_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1745",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:7",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1744,
																			"src": "6301:33:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1710,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "6338:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1702,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "6272:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2102_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:7",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2021,
																	"src": "6272:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1712,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:7",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "6108:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "6127:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1686,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:7"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:7"
									},
									"scope": 1735,
									"src": "6076:333:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "6634:86:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1724,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1732,
												"nodeType": "IfStatement",
												"src": "6644:70:7",
												"trueBody": {
													"id": 1731,
													"nodeType": "Block",
													"src": "6663:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1728,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "6684:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1730,
															"nodeType": "RevertStatement",
															"src": "6677:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:7",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:7"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:7"
									},
									"scope": 1735,
									"src": "6598:122:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1736,
							"src": "449:6273:7",
							"usedErrors": [
								1467,
								1472,
								1477,
								1480
							],
							"usedEvents": [
								1446,
								1453,
								1458
							]
						}
					],
					"src": "114:6609:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1745
						]
					},
					"id": 1746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1737,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1738,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:8",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1745,
							"linearizedBaseContracts": [
								1745
							],
							"name": "IBeacon",
							"nameLocation": "224:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:8",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:8"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "460:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:8"
									},
									"scope": 1745,
									"src": "411:58:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1746,
							"src": "214:257:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1823
						]
					},
					"id": 1824,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1748,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:9",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1823,
							"linearizedBaseContracts": [
								1823
							],
							"name": "IERC20",
							"nameLocation": "213:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1757,
									"name": "Transfer",
									"nameLocation": "395:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "404:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "426:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "446:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:9"
									},
									"src": "389:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1766,
									"name": "Approval",
									"nameLocation": "626:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "635:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "658:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:9"
									},
									"src": "620:78:9"
								},
								{
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:9",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:9"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "820:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:9"
									},
									"scope": 1823,
									"src": "774:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:9",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "930:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:9"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "970:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:9"
									},
									"scope": 1823,
									"src": "911:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:9",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "1221:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "1233:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:9"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "1266:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:9"
									},
									"scope": 1823,
									"src": "1203:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1566:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1581:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:9"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "1621:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:9"
									},
									"scope": 1823,
									"src": "1547:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:9",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2325:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2342:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:9"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2375:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:9"
									},
									"scope": 1823,
									"src": "2308:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:9",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2711:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2725:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2737:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:9"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "2770:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:9"
									},
									"scope": 1823,
									"src": "2689:87:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1824,
							"src": "203:2575:9",
							"usedErrors": [],
							"usedEvents": [
								1757,
								1766
							]
						}
					],
					"src": "106:2673:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1823
						],
						"IERC20Metadata": [
							1849
						]
					},
					"id": 1850,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1850,
							"sourceUnit": 1824,
							"src": "151:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1826,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1823,
										"src": "159:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1829,
										"name": "IERC20",
										"nameLocations": [
											"305:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1823,
										"src": "305:6:10"
									},
									"id": 1830,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:10"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1828,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:10",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1849,
							"linearizedBaseContracts": [
								1849,
								1823
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:10",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:10"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "416:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:10"
									},
									"scope": 1849,
									"src": "377:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:10",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:10"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "539:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:10"
									},
									"scope": 1849,
									"src": "498:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:10",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:10"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "673:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1845,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:10"
									},
									"scope": 1849,
									"src": "630:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1850,
							"src": "277:405:10",
							"usedErrors": [],
							"usedEvents": [
								1757,
								1766
							]
						}
					],
					"src": "125:558:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2102
						]
					},
					"id": 2103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1851,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1852,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2102,
							"linearizedBaseContracts": [
								2102
							],
							"name": "Address",
							"nameLocation": "203:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1857,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "349:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:11"
									},
									"src": "316:50:11"
								},
								{
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:11",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1862,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "475:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:11"
									},
									"src": "452:39:11"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1865,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:11"
									},
									"src": "591:24:11"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "1602:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1875,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2102",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2102",
																		"typeString": "library Address"
																	}
																],
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1873,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1878,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "1640:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1888,
												"nodeType": "IfStatement",
												"src": "1612:109:11",
												"trueBody": {
													"id": 1887,
													"nodeType": "Block",
													"src": "1648:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1883,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2102",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2102",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1881,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1880,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "1669:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1886,
															"nodeType": "RevertStatement",
															"src": "1662:48:11"
														}
													]
												}
											},
											{
												"assignments": [
													1890,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1890,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1905,
														"src": "1732:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1889,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1897,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1891,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "1750:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1893,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "1772:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:11"
											},
											{
												"condition": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:11",
													"subExpression": {
														"id": 1898,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "1798:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1904,
												"nodeType": "IfStatement",
												"src": "1793:63:11",
												"trueBody": {
													"id": 1903,
													"nodeType": "Block",
													"src": "1807:49:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1900,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "1828:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1902,
															"nodeType": "RevertStatement",
															"src": "1821:24:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1550:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "1577:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:11"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:11"
									},
									"scope": 2102,
									"src": "1531:331:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "2794:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1917,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "2833:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1918,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "2841:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1916,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2811:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1921,
												"nodeType": "Return",
												"src": "2804:45:11"
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "2727:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "2743:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1910,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:11"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "2780:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:11"
									},
									"scope": 2102,
									"src": "2705:151:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "3293:279:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1937,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2102",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2102",
																		"typeString": "library Address"
																	}
																],
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1940,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "3331:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "IfStatement",
												"src": "3303:108:11",
												"trueBody": {
													"id": 1949,
													"nodeType": "Block",
													"src": "3338:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1945,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2102",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2102",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1943,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1942,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "3359:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1948,
															"nodeType": "RevertStatement",
															"src": "3352:48:11"
														}
													]
												}
											},
											{
												"assignments": [
													1952,
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1952,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "3421:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1951,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "3435:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1961,
												"initialValue": {
													"arguments": [
														{
															"id": 1959,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "3488:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1955,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "3462:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1957,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "3481:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1963,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "3537:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1964,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "3545:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1965,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "3554:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1962,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "3510:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1967,
												"nodeType": "Return",
												"src": "3503:62:11"
											}
										]
									},
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "3211:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "3227:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "3246:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:11"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "3279:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1932,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:11"
									},
									"scope": 2102,
									"src": "3180:392:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "3811:154:11",
										"statements": [
											{
												"assignments": [
													1980,
													1982
												],
												"declarations": [
													{
														"constant": false,
														"id": 1980,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1994,
														"src": "3822:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1979,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1982,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1994,
														"src": "3836:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1981,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1987,
												"initialValue": {
													"arguments": [
														{
															"id": 1985,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "3881:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1983,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "3863:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1989,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "3930:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1990,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "3938:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1991,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "3947:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1988,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "3903:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1978,
												"id": 1993,
												"nodeType": "Return",
												"src": "3896:62:11"
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "3739:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "3755:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:11"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "3797:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:11"
									},
									"scope": 2102,
									"src": "3711:254:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "4203:156:11",
										"statements": [
											{
												"assignments": [
													2006,
													2008
												],
												"declarations": [
													{
														"constant": false,
														"id": 2006,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "4214:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2005,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2008,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "4228:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2007,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2013,
												"initialValue": {
													"arguments": [
														{
															"id": 2011,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "4275:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2009,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "4255:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2015,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "4324:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2016,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "4332:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2017,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "4341:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2014,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "4297:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2004,
												"id": 2019,
												"nodeType": "Return",
												"src": "4290:62:11"
											}
										]
									},
									"documentation": {
										"id": 1996,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "4136:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "4152:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:11"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "4189:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:11"
									},
									"scope": 2102,
									"src": "4106:253:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "4783:424:11",
										"statements": [
											{
												"condition": {
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:11",
													"subExpression": {
														"id": 2033,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2026,
														"src": "4798:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "4857:344:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2040,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "5045:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2044,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2024,
																				"src": "5071:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:11",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2055,
															"nodeType": "IfStatement",
															"src": "5041:119:11",
															"trueBody": {
																"id": 2054,
																"nodeType": "Block",
																"src": "5096:64:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2051,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2024,
																					"src": "5138:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2050,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1862,
																				"src": "5121:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2053,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2056,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "5180:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2032,
															"id": 2057,
															"nodeType": "Return",
															"src": "5173:17:11"
														}
													]
												},
												"id": 2059,
												"nodeType": "IfStatement",
												"src": "4793:408:11",
												"trueBody": {
													"id": 2039,
													"nodeType": "Block",
													"src": "4807:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2036,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2028,
																		"src": "4829:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2035,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "4821:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2038,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "4670:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "4694:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "4716:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:11"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "4769:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:11"
									},
									"scope": 2102,
									"src": "4625:582:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "5509:122:11",
										"statements": [
											{
												"condition": {
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:11",
													"subExpression": {
														"id": 2071,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "5524:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2080,
													"nodeType": "Block",
													"src": "5583:42:11",
													"statements": [
														{
															"expression": {
																"id": 2078,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "5604:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2070,
															"id": 2079,
															"nodeType": "Return",
															"src": "5597:17:11"
														}
													]
												},
												"id": 2081,
												"nodeType": "IfStatement",
												"src": "5519:106:11",
												"trueBody": {
													"id": 2077,
													"nodeType": "Block",
													"src": "5533:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2074,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2066,
																		"src": "5555:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2073,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "5547:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2076,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:11",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "5433:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "5447:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:11"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "5495:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2068,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:11"
									},
									"scope": 2102,
									"src": "5407:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "5798:461:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2089,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "5874:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2098,
													"nodeType": "Block",
													"src": "6204:49:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2095,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "6225:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2097,
															"nodeType": "RevertStatement",
															"src": "6218:24:11"
														}
													]
												},
												"id": 2099,
												"nodeType": "IfStatement",
												"src": "5870:383:11",
												"trueBody": {
													"id": 2094,
													"nodeType": "Block",
													"src": "5897:301:11",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:11",
																"nodeType": "YulBlock",
																"src": "6055:133:11",
																"statements": [
																	{
																		"nativeSrc": "6073:40:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:11"
																			},
																			"nativeSrc": "6096:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:11",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:11",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:11"
																					},
																					"nativeSrc": "6137:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:11"
																			},
																			"nativeSrc": "6130:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:11"
																		},
																		"nativeSrc": "6130:44:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:11"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 2086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:11",
																	"valueSize": 1
																}
															],
															"id": 2093,
															"nodeType": "InlineAssembly",
															"src": "6046:142:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:11",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "5760:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:11"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:11"
									},
									"scope": 2102,
									"src": "5743:516:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2103,
							"src": "195:6066:11",
							"usedErrors": [
								1857,
								1862,
								1865
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2212
						]
					},
					"id": 2213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2105,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:12",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2212,
							"linearizedBaseContracts": [
								2212
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2108,
									"members": [
										{
											"constant": false,
											"id": 2107,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2108,
											"src": "1300:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2106,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:12",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "1271:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2111,
									"members": [
										{
											"constant": false,
											"id": 2110,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2111,
											"src": "1355:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2109,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:12",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "1326:46:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2114,
									"members": [
										{
											"constant": false,
											"id": 2113,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "1407:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2112,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:12",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "1378:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2117,
									"members": [
										{
											"constant": false,
											"id": 2116,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "1462:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2115,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:12",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "1433:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2120,
									"members": [
										{
											"constant": false,
											"id": 2119,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2120,
											"src": "1516:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2118,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:12",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "1488:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2123,
									"members": [
										{
											"constant": false,
											"id": 2122,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2123,
											"src": "1568:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2121,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:12",
									"nodeType": "StructDefinition",
									"scope": 2212,
									"src": "1541:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "1768:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:12",
													"nodeType": "YulBlock",
													"src": "1830:38:12",
													"statements": [
														{
															"nativeSrc": "1844:14:12",
															"nodeType": "YulAssignment",
															"src": "1844:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:12",
																"nodeType": "YulIdentifier",
																"src": "1854:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2130,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2126,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:12",
														"valueSize": 1
													}
												],
												"id": 2132,
												"nodeType": "InlineAssembly",
												"src": "1821:47:12"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:12",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1708:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:12"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "1745:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2128,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2108,
														"src": "1745:11:12"
													},
													"referencedDeclaration": 2108,
													"src": "1745:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2108_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:12"
									},
									"scope": 2212,
									"src": "1684:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "2056:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:12",
													"nodeType": "YulBlock",
													"src": "2118:38:12",
													"statements": [
														{
															"nativeSrc": "2132:14:12",
															"nodeType": "YulAssignment",
															"src": "2132:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:12",
																"nodeType": "YulIdentifier",
																"src": "2142:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2141,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2137,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:12",
														"valueSize": 1
													}
												],
												"id": 2143,
												"nodeType": "InlineAssembly",
												"src": "2109:47:12"
											}
										]
									},
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:12",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "1996:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:12"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "2033:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2111_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2139,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2111,
														"src": "2033:11:12"
													},
													"referencedDeclaration": 2111,
													"src": "2033:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2111_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:12"
									},
									"scope": 2212,
									"src": "1972:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "2344:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:12",
													"nodeType": "YulBlock",
													"src": "2406:38:12",
													"statements": [
														{
															"nativeSrc": "2420:14:12",
															"nodeType": "YulAssignment",
															"src": "2420:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:12",
																"nodeType": "YulIdentifier",
																"src": "2430:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2152,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2148,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:12",
														"valueSize": 1
													}
												],
												"id": 2154,
												"nodeType": "InlineAssembly",
												"src": "2397:47:12"
											}
										]
									},
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:12",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "2284:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:12"
									},
									"returnParameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "2321:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2114_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2150,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2114,
														"src": "2321:11:12"
													},
													"referencedDeclaration": 2114,
													"src": "2321:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2114_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:12"
									},
									"scope": 2212,
									"src": "2260:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "2632:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:12",
													"nodeType": "YulBlock",
													"src": "2694:38:12",
													"statements": [
														{
															"nativeSrc": "2708:14:12",
															"nodeType": "YulAssignment",
															"src": "2708:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:12",
																"nodeType": "YulIdentifier",
																"src": "2718:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2159,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:12",
														"valueSize": 1
													}
												],
												"id": 2165,
												"nodeType": "InlineAssembly",
												"src": "2685:47:12"
											}
										]
									},
									"documentation": {
										"id": 2157,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:12",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "2572:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:12"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "2609:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2117_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2161,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2117,
														"src": "2609:11:12"
													},
													"referencedDeclaration": 2117,
													"src": "2609:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2117_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:12"
									},
									"scope": 2212,
									"src": "2548:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "2917:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:12",
													"nodeType": "YulBlock",
													"src": "2979:38:12",
													"statements": [
														{
															"nativeSrc": "2993:14:12",
															"nodeType": "YulAssignment",
															"src": "2993:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:12",
																"nodeType": "YulIdentifier",
																"src": "3003:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2174,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2170,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:12",
														"valueSize": 1
													}
												],
												"id": 2176,
												"nodeType": "InlineAssembly",
												"src": "2970:47:12"
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:12",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2858:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:12"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2895:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2120_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2173,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2172,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "2895:10:12"
													},
													"referencedDeclaration": 2120,
													"src": "2895:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2120_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:12"
									},
									"scope": 2212,
									"src": "2835:188:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "3225:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:12",
													"nodeType": "YulBlock",
													"src": "3287:44:12",
													"statements": [
														{
															"nativeSrc": "3301:20:12",
															"nodeType": "YulAssignment",
															"src": "3301:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:12",
																"nodeType": "YulIdentifier",
																"src": "3311:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2185,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2181,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2187,
												"nodeType": "InlineAssembly",
												"src": "3278:53:12"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:12",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3158:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:12"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3203:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2120_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2183,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "3203:10:12"
													},
													"referencedDeclaration": 2120,
													"src": "3203:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2120_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:12"
									},
									"scope": 2212,
									"src": "3135:202:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "3513:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:12",
													"nodeType": "YulBlock",
													"src": "3575:38:12",
													"statements": [
														{
															"nativeSrc": "3589:14:12",
															"nodeType": "YulAssignment",
															"src": "3589:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:12",
																"nodeType": "YulIdentifier",
																"src": "3599:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2196,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2192,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:12",
														"valueSize": 1
													}
												],
												"id": 2198,
												"nodeType": "InlineAssembly",
												"src": "3566:47:12"
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:12",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "3455:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:12"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "3492:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2123_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2194,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2123,
														"src": "3492:9:12"
													},
													"referencedDeclaration": 2123,
													"src": "3492:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2123_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:12"
									},
									"scope": 2212,
									"src": "3433:186:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "3816:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:12",
													"nodeType": "YulBlock",
													"src": "3878:44:12",
													"statements": [
														{
															"nativeSrc": "3892:20:12",
															"nodeType": "YulAssignment",
															"src": "3892:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:12",
																"nodeType": "YulIdentifier",
																"src": "3902:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2207,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2203,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2209,
												"nodeType": "InlineAssembly",
												"src": "3869:53:12"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:12",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3751:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:12"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3795:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2123_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2205,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2123,
														"src": "3795:9:12"
													},
													"referencedDeclaration": 2123,
													"src": "3795:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2123_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:12"
									},
									"scope": 2212,
									"src": "3729:199:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2213,
							"src": "1245:2685:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:12"
				},
				"id": 12
			},
			"contract-f627870540.sol": {
				"ast": {
					"absolutePath": "contract-f627870540.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1285
						],
						"ERC1967Utils": [
							1735
						],
						"ERC20Upgradeable": [
							1247
						],
						"IERC1822Proxiable": [
							1295
						],
						"IERC20": [
							1823
						],
						"IERC20Errors": [
							1337
						],
						"IERC20Metadata": [
							1849
						],
						"Initializable": [
							448
						],
						"MivaToken": [
							2275
						],
						"OwnableUpgradeable": [
							194
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 2276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.0/token/ERC20/ERC20Upgradeable.sol",
							"id": 2215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2276,
							"sourceUnit": 1248,
							"src": "58:84:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.0/access/OwnableUpgradeable.sol",
							"id": 2216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2276,
							"sourceUnit": 195,
							"src": "143:81:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/Initializable.sol",
							"id": 2217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2276,
							"sourceUnit": 449,
							"src": "225:81:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.0/proxy/utils/UUPSUpgradeable.sol",
							"id": 2218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2276,
							"sourceUnit": 631,
							"src": "307:83:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2219,
										"name": "Initializable",
										"nameLocations": [
											"414:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "414:13:13"
									},
									"id": 2220,
									"nodeType": "InheritanceSpecifier",
									"src": "414:13:13"
								},
								{
									"baseName": {
										"id": 2221,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"429:16:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1247,
										"src": "429:16:13"
									},
									"id": 2222,
									"nodeType": "InheritanceSpecifier",
									"src": "429:16:13"
								},
								{
									"baseName": {
										"id": 2223,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"447:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "447:18:13"
									},
									"id": 2224,
									"nodeType": "InheritanceSpecifier",
									"src": "447:18:13"
								},
								{
									"baseName": {
										"id": 2225,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"467:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "467:15:13"
									},
									"id": 2226,
									"nodeType": "InheritanceSpecifier",
									"src": "467:15:13"
								}
							],
							"canonicalName": "MivaToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2275,
							"linearizedBaseContracts": [
								2275,
								630,
								1295,
								194,
								1247,
								1337,
								1849,
								1823,
								1285,
								448
							],
							"name": "MivaToken",
							"nameLocation": "401:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "556:39:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2230,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "566:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "566:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "566:22:13"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "489:48:13",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:2:13"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:13"
									},
									"scope": 2275,
									"src": "542:53:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "662:175:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4d697661546f6b656e",
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "685:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c7e3508a5a5224db3018428f6bfa44ce7f8216549cc5b97281f51dc446e7b64",
																"typeString": "literal_string \"MivaToken\""
															},
															"value": "MivaToken"
														},
														{
															"hexValue": "4d5654",
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "698:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6df1094b489c7b3e503d2b24805662028da9097995ac207d30d96752f9d01259",
																"typeString": "literal_string \"MVT\""
															},
															"value": "MVT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8c7e3508a5a5224db3018428f6bfa44ce7f8216549cc5b97281f51dc446e7b64",
																"typeString": "literal_string \"MivaToken\""
															},
															{
																"typeIdentifier": "t_stringliteral_6df1094b489c7b3e503d2b24805662028da9097995ac207d30d96752f9d01259",
																"typeString": "literal_string \"MVT\""
															}
														],
														"id": 2241,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "672:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "672:32:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2247,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "729:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2246,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "714:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "714:28:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2250,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "752:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "752:24:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "793:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "797:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "793:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3230303030",
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "805:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20000_by_1",
																	"typeString": "int_const 20000"
																},
																"value": "20000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "813:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2258,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "819:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "819:10:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "813:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "805:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2253,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "787:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2263,
												"nodeType": "ExpressionStatement",
												"src": "787:43:13"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2239,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2238,
												"name": "initializer",
												"nameLocations": [
													"643:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "643:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "643:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "610:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "629:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "621:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:22:13"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:13"
									},
									"scope": 2275,
									"src": "601:236:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "953:2:13",
										"statements": []
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2269,
												"name": "onlyOwner",
												"nameLocations": [
													"922:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "922:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "922:9:13"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "852:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "940:8:13"
									},
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "878:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "870:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:27:13"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:0:13"
									},
									"scope": 2275,
									"src": "843:112:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2276,
							"src": "392:565:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								1307,
								1312,
								1317,
								1326,
								1331,
								1336,
								1467,
								1480,
								1862,
								1865
							],
							"usedEvents": [
								41,
								219,
								1446,
								1757,
								1766
							]
						}
					],
					"src": "32:926:13"
				},
				"id": 13
			}
		}
	}
}